android.support.annotation.AnimRes -> android.support.annotation.AnimRes:
android.support.annotation.AnimatorRes -> android.support.annotation.AnimatorRes:
android.support.annotation.AnyRes -> android.support.annotation.AnyRes:
android.support.annotation.ArrayRes -> android.support.annotation.ArrayRes:
android.support.annotation.AttrRes -> android.support.annotation.AttrRes:
android.support.annotation.BoolRes -> android.support.annotation.BoolRes:
android.support.annotation.ColorRes -> android.support.annotation.ColorRes:
android.support.annotation.DimenRes -> android.support.annotation.DimenRes:
android.support.annotation.DrawableRes -> android.support.annotation.DrawableRes:
android.support.annotation.FractionRes -> android.support.annotation.FractionRes:
android.support.annotation.IdRes -> android.support.annotation.IdRes:
android.support.annotation.IntDef -> android.support.annotation.IntDef:
    long[] value() -> value
    boolean flag() -> flag
android.support.annotation.IntegerRes -> android.support.annotation.IntegerRes:
android.support.annotation.InterpolatorRes -> android.support.annotation.InterpolatorRes:
android.support.annotation.LayoutRes -> android.support.annotation.LayoutRes:
android.support.annotation.MenuRes -> android.support.annotation.MenuRes:
android.support.annotation.NonNull -> android.support.annotation.NonNull:
android.support.annotation.Nullable -> android.support.annotation.Nullable:
android.support.annotation.PluralsRes -> android.support.annotation.PluralsRes:
android.support.annotation.RawRes -> android.support.annotation.RawRes:
android.support.annotation.StringDef -> android.support.annotation.StringDef:
    java.lang.String[] value() -> value
android.support.annotation.StringRes -> android.support.annotation.StringRes:
android.support.annotation.StyleRes -> android.support.annotation.StyleRes:
android.support.annotation.StyleableRes -> android.support.annotation.StyleableRes:
android.support.annotation.XmlRes -> android.support.annotation.XmlRes:
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat:
    android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoVersionImpl IMPL -> IMPL
    int CAPABILITY_CAN_RETRIEVE_WINDOW_CONTENT -> CAPABILITY_CAN_RETRIEVE_WINDOW_CONTENT
    int CAPABILITY_CAN_REQUEST_TOUCH_EXPLORATION -> CAPABILITY_CAN_REQUEST_TOUCH_EXPLORATION
    int CAPABILITY_CAN_REQUEST_ENHANCED_WEB_ACCESSIBILITY -> CAPABILITY_CAN_REQUEST_ENHANCED_WEB_ACCESSIBILITY
    int CAPABILITY_CAN_FILTER_KEY_EVENTS -> CAPABILITY_CAN_FILTER_KEY_EVENTS
    int FEEDBACK_BRAILLE -> FEEDBACK_BRAILLE
    int FEEDBACK_ALL_MASK -> FEEDBACK_ALL_MASK
    int DEFAULT -> DEFAULT
    int FLAG_INCLUDE_NOT_IMPORTANT_VIEWS -> FLAG_INCLUDE_NOT_IMPORTANT_VIEWS
    int FLAG_REQUEST_TOUCH_EXPLORATION_MODE -> FLAG_REQUEST_TOUCH_EXPLORATION_MODE
    int FLAG_REQUEST_ENHANCED_WEB_ACCESSIBILITY -> FLAG_REQUEST_ENHANCED_WEB_ACCESSIBILITY
    int FLAG_REPORT_VIEW_IDS -> FLAG_REPORT_VIEW_IDS
    int FLAG_REQUEST_FILTER_KEY_EVENTS -> FLAG_REQUEST_FILTER_KEY_EVENTS
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String feedbackTypeToString(int) -> feedbackTypeToString
    java.lang.String flagToString(int) -> flagToString
    int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
    java.lang.String capabilityToString(int) -> capabilityToString
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoIcsImpl -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoIcsImpl:
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
    int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoJellyBeanMr2 -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoJellyBeanMr2:
    int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoStubImpl -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoStubImpl:
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
    int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoVersionImpl -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoVersionImpl:
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
    int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatIcs -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatIcs:
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatJellyBeanMr2 -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatJellyBeanMr2:
    int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
android.support.v4.app.ActionBarDrawerToggle -> android.support.v4.app.ActionBarDrawerToggle:
    android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImpl IMPL -> IMPL
    float TOGGLE_DRAWABLE_OFFSET -> TOGGLE_DRAWABLE_OFFSET
    int ID_HOME -> ID_HOME
    android.app.Activity mActivity -> mActivity
    android.support.v4.app.ActionBarDrawerToggle$Delegate mActivityImpl -> mActivityImpl
    android.support.v4.widget.DrawerLayout mDrawerLayout -> mDrawerLayout
    boolean mDrawerIndicatorEnabled -> mDrawerIndicatorEnabled
    android.graphics.drawable.Drawable mThemeImage -> mThemeImage
    android.graphics.drawable.Drawable mDrawerImage -> mDrawerImage
    android.support.v4.app.ActionBarDrawerToggle$SlideDrawable mSlider -> mSlider
    int mDrawerImageResource -> mDrawerImageResource
    int mOpenDrawerContentDescRes -> mOpenDrawerContentDescRes
    int mCloseDrawerContentDescRes -> mCloseDrawerContentDescRes
    java.lang.Object mSetIndicatorInfo -> mSetIndicatorInfo
    void syncState() -> syncState
    void setDrawerIndicatorEnabled(boolean) -> setDrawerIndicatorEnabled
    boolean isDrawerIndicatorEnabled() -> isDrawerIndicatorEnabled
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onDrawerSlide(android.view.View,float) -> onDrawerSlide
    void onDrawerOpened(android.view.View) -> onDrawerOpened
    void onDrawerClosed(android.view.View) -> onDrawerClosed
    void onDrawerStateChanged(int) -> onDrawerStateChanged
    android.graphics.drawable.Drawable getThemeUpIndicator() -> getThemeUpIndicator
    void setActionBarUpIndicator(android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    void setActionBarDescription(int) -> setActionBarDescription
    android.app.Activity access$400(android.support.v4.app.ActionBarDrawerToggle) -> access$400
android.support.v4.app.ActionBarDrawerToggle$1 -> android.support.v4.app.ActionBarDrawerToggle$1:
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImpl -> android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImpl:
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplBase -> android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplBase:
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplHC -> android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplHC:
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplJellybeanMR2 -> android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplJellybeanMR2:
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
android.support.v4.app.ActionBarDrawerToggle$Delegate -> android.support.v4.app.ActionBarDrawerToggle$Delegate:
    android.graphics.drawable.Drawable getThemeUpIndicator() -> getThemeUpIndicator
    void setActionBarUpIndicator(android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    void setActionBarDescription(int) -> setActionBarDescription
android.support.v4.app.ActionBarDrawerToggle$DelegateProvider -> android.support.v4.app.ActionBarDrawerToggle$DelegateProvider:
    android.support.v4.app.ActionBarDrawerToggle$Delegate getDrawerToggleDelegate() -> getDrawerToggleDelegate
android.support.v4.app.ActionBarDrawerToggle$SlideDrawable -> android.support.v4.app.ActionBarDrawerToggle$SlideDrawable:
    boolean mHasMirroring -> mHasMirroring
    android.graphics.Rect mTmpRect -> mTmpRect
    float mPosition -> mPosition
    float mOffset -> mOffset
    android.support.v4.app.ActionBarDrawerToggle this$0 -> this$0
    void setPosition(float) -> setPosition
    float getPosition() -> getPosition
    void setOffset(float) -> setOffset
    void draw(android.graphics.Canvas) -> draw
android.support.v4.app.ActionBarDrawerToggleHoneycomb -> android.support.v4.app.ActionBarDrawerToggleHoneycomb:
    java.lang.String TAG -> TAG
    int[] THEME_ATTRS -> THEME_ATTRS
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
android.support.v4.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo -> android.support.v4.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo:
    java.lang.reflect.Method setHomeAsUpIndicator -> setHomeAsUpIndicator
    java.lang.reflect.Method setHomeActionContentDescription -> setHomeActionContentDescription
    android.widget.ImageView upIndicatorView -> upIndicatorView
android.support.v4.app.ActionBarDrawerToggleJellybeanMR2 -> android.support.v4.app.ActionBarDrawerToggleJellybeanMR2:
    java.lang.String TAG -> TAG
    int[] THEME_ATTRS -> THEME_ATTRS
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
android.support.v4.app.ActivityCompat -> android.support.v4.app.ActivityCompat:
    boolean invalidateOptionsMenu(android.app.Activity) -> invalidateOptionsMenu
    void startActivity(android.app.Activity,android.content.Intent,android.os.Bundle) -> startActivity
    void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle) -> startActivityForResult
    void finishAffinity(android.app.Activity) -> finishAffinity
android.support.v4.app.ActivityCompatHoneycomb -> android.support.v4.app.ActivityCompatHoneycomb:
    void invalidateOptionsMenu(android.app.Activity) -> invalidateOptionsMenu
    void dump(android.app.Activity,java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.app.ActivityCompatJB -> android.support.v4.app.ActivityCompatJB:
    void startActivity(android.content.Context,android.content.Intent,android.os.Bundle) -> startActivity
    void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle) -> startActivityForResult
    void finishAffinity(android.app.Activity) -> finishAffinity
android.support.v4.app.ActivityOptionsCompat -> android.support.v4.app.ActivityOptionsCompat:
    android.support.v4.app.ActivityOptionsCompat makeCustomAnimation(android.content.Context,int,int) -> makeCustomAnimation
    android.support.v4.app.ActivityOptionsCompat makeScaleUpAnimation(android.view.View,int,int,int,int) -> makeScaleUpAnimation
    android.support.v4.app.ActivityOptionsCompat makeThumbnailScaleUpAnimation(android.view.View,android.graphics.Bitmap,int,int) -> makeThumbnailScaleUpAnimation
    android.os.Bundle toBundle() -> toBundle
    void update(android.support.v4.app.ActivityOptionsCompat) -> update
android.support.v4.app.ActivityOptionsCompat$ActivityOptionsImplJB -> android.support.v4.app.ActivityOptionsCompat$ActivityOptionsImplJB:
    android.support.v4.app.ActivityOptionsCompatJB mImpl -> mImpl
    android.os.Bundle toBundle() -> toBundle
    void update(android.support.v4.app.ActivityOptionsCompat) -> update
android.support.v4.app.ActivityOptionsCompatJB -> android.support.v4.app.ActivityOptionsCompatJB:
    android.app.ActivityOptions mActivityOptions -> mActivityOptions
    android.support.v4.app.ActivityOptionsCompatJB makeCustomAnimation(android.content.Context,int,int) -> makeCustomAnimation
    android.support.v4.app.ActivityOptionsCompatJB makeScaleUpAnimation(android.view.View,int,int,int,int) -> makeScaleUpAnimation
    android.support.v4.app.ActivityOptionsCompatJB makeThumbnailScaleUpAnimation(android.view.View,android.graphics.Bitmap,int,int) -> makeThumbnailScaleUpAnimation
    android.os.Bundle toBundle() -> toBundle
    void update(android.support.v4.app.ActivityOptionsCompatJB) -> update
android.support.v4.app.BackStackRecord -> android.support.v4.app.BackStackRecord:
    java.lang.String TAG -> TAG
    android.support.v4.app.FragmentManagerImpl mManager -> mManager
    int OP_NULL -> OP_NULL
    int OP_ADD -> OP_ADD
    int OP_REPLACE -> OP_REPLACE
    int OP_REMOVE -> OP_REMOVE
    int OP_HIDE -> OP_HIDE
    int OP_SHOW -> OP_SHOW
    int OP_DETACH -> OP_DETACH
    int OP_ATTACH -> OP_ATTACH
    android.support.v4.app.BackStackRecord$Op mHead -> mHead
    android.support.v4.app.BackStackRecord$Op mTail -> mTail
    int mNumOp -> mNumOp
    int mEnterAnim -> mEnterAnim
    int mExitAnim -> mExitAnim
    int mPopEnterAnim -> mPopEnterAnim
    int mPopExitAnim -> mPopExitAnim
    int mTransition -> mTransition
    int mTransitionStyle -> mTransitionStyle
    boolean mAddToBackStack -> mAddToBackStack
    boolean mAllowAddToBackStack -> mAllowAddToBackStack
    java.lang.String mName -> mName
    boolean mCommitted -> mCommitted
    int mIndex -> mIndex
    int mBreadCrumbTitleRes -> mBreadCrumbTitleRes
    java.lang.CharSequence mBreadCrumbTitleText -> mBreadCrumbTitleText
    int mBreadCrumbShortTitleRes -> mBreadCrumbShortTitleRes
    java.lang.CharSequence mBreadCrumbShortTitleText -> mBreadCrumbShortTitleText
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void dump(java.lang.String,java.io.PrintWriter,boolean) -> dump
    int getId() -> getId
    int getBreadCrumbTitleRes() -> getBreadCrumbTitleRes
    int getBreadCrumbShortTitleRes() -> getBreadCrumbShortTitleRes
    java.lang.CharSequence getBreadCrumbTitle() -> getBreadCrumbTitle
    java.lang.CharSequence getBreadCrumbShortTitle() -> getBreadCrumbShortTitle
    void addOp(android.support.v4.app.BackStackRecord$Op) -> addOp
    android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> add
    void doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int) -> doAddOp
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment) -> replace
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String) -> replace
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> remove
    android.support.v4.app.FragmentTransaction hide(android.support.v4.app.Fragment) -> hide
    android.support.v4.app.FragmentTransaction show(android.support.v4.app.Fragment) -> show
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> detach
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> attach
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int,int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setTransition(int) -> setTransition
    android.support.v4.app.FragmentTransaction setTransitionStyle(int) -> setTransitionStyle
    android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String) -> addToBackStack
    boolean isAddToBackStackAllowed() -> isAddToBackStackAllowed
    android.support.v4.app.FragmentTransaction disallowAddToBackStack() -> disallowAddToBackStack
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(int) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(java.lang.CharSequence) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(int) -> setBreadCrumbShortTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(java.lang.CharSequence) -> setBreadCrumbShortTitle
    void bumpBackStackNesting(int) -> bumpBackStackNesting
    int commit() -> commit
    int commitAllowingStateLoss() -> commitAllowingStateLoss
    int commitInternal(boolean) -> commitInternal
    void run() -> run
    void popFromBackStack(boolean) -> popFromBackStack
    java.lang.String getName() -> getName
    int getTransition() -> getTransition
    int getTransitionStyle() -> getTransitionStyle
    boolean isEmpty() -> isEmpty
android.support.v4.app.BackStackRecord$Op -> android.support.v4.app.BackStackRecord$Op:
    android.support.v4.app.BackStackRecord$Op next -> next
    android.support.v4.app.BackStackRecord$Op prev -> prev
    int cmd -> cmd
    android.support.v4.app.Fragment fragment -> fragment
    int enterAnim -> enterAnim
    int exitAnim -> exitAnim
    int popEnterAnim -> popEnterAnim
    int popExitAnim -> popExitAnim
    java.util.ArrayList removed -> removed
android.support.v4.app.BackStackState -> android.support.v4.app.BackStackState:
    int[] mOps -> mOps
    int mTransition -> mTransition
    int mTransitionStyle -> mTransitionStyle
    java.lang.String mName -> mName
    int mIndex -> mIndex
    int mBreadCrumbTitleRes -> mBreadCrumbTitleRes
    java.lang.CharSequence mBreadCrumbTitleText -> mBreadCrumbTitleText
    int mBreadCrumbShortTitleRes -> mBreadCrumbShortTitleRes
    java.lang.CharSequence mBreadCrumbShortTitleText -> mBreadCrumbShortTitleText
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl) -> instantiate
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.BackStackState$1 -> android.support.v4.app.BackStackState$1:
    android.support.v4.app.BackStackState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.BackStackState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.BundleUtil -> android.support.v4.app.BundleUtil:
    android.os.Bundle[] getBundleArrayFromBundle(android.os.Bundle,java.lang.String) -> getBundleArrayFromBundle
android.support.v4.app.DialogFragment -> android.support.v4.app.DialogFragment:
    int STYLE_NORMAL -> STYLE_NORMAL
    int STYLE_NO_TITLE -> STYLE_NO_TITLE
    int STYLE_NO_FRAME -> STYLE_NO_FRAME
    int STYLE_NO_INPUT -> STYLE_NO_INPUT
    java.lang.String SAVED_DIALOG_STATE_TAG -> SAVED_DIALOG_STATE_TAG
    java.lang.String SAVED_STYLE -> SAVED_STYLE
    java.lang.String SAVED_THEME -> SAVED_THEME
    java.lang.String SAVED_CANCELABLE -> SAVED_CANCELABLE
    java.lang.String SAVED_SHOWS_DIALOG -> SAVED_SHOWS_DIALOG
    java.lang.String SAVED_BACK_STACK_ID -> SAVED_BACK_STACK_ID
    int mStyle -> mStyle
    int mTheme -> mTheme
    boolean mCancelable -> mCancelable
    boolean mShowsDialog -> mShowsDialog
    int mBackStackId -> mBackStackId
    android.app.Dialog mDialog -> mDialog
    boolean mViewDestroyed -> mViewDestroyed
    boolean mDismissed -> mDismissed
    boolean mShownByMe -> mShownByMe
    void setStyle(int,int) -> setStyle
    void show(android.support.v4.app.FragmentManager,java.lang.String) -> show
    int show(android.support.v4.app.FragmentTransaction,java.lang.String) -> show
    void dismiss() -> dismiss
    void dismissAllowingStateLoss() -> dismissAllowingStateLoss
    void dismissInternal(boolean) -> dismissInternal
    android.app.Dialog getDialog() -> getDialog
    int getTheme() -> getTheme
    void setCancelable(boolean) -> setCancelable
    boolean isCancelable() -> isCancelable
    void setShowsDialog(boolean) -> setShowsDialog
    boolean getShowsDialog() -> getShowsDialog
    void onAttach(android.app.Activity) -> onAttach
    void onDetach() -> onDetach
    void onCreate(android.os.Bundle) -> onCreate
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> getLayoutInflater
    android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    void onCancel(android.content.DialogInterface) -> onCancel
    void onDismiss(android.content.DialogInterface) -> onDismiss
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onStart() -> onStart
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStop() -> onStop
    void onDestroyView() -> onDestroyView
android.support.v4.app.DialogFragment$DialogStyle -> android.support.v4.app.DialogFragment$DialogStyle:
android.support.v4.app.Fragment -> android.support.v4.app.Fragment:
    android.support.v4.util.SimpleArrayMap sClassMap -> sClassMap
    int INITIALIZING -> INITIALIZING
    int CREATED -> CREATED
    int ACTIVITY_CREATED -> ACTIVITY_CREATED
    int STOPPED -> STOPPED
    int STARTED -> STARTED
    int RESUMED -> RESUMED
    int mState -> mState
    android.view.View mAnimatingAway -> mAnimatingAway
    int mStateAfterAnimating -> mStateAfterAnimating
    android.os.Bundle mSavedFragmentState -> mSavedFragmentState
    android.util.SparseArray mSavedViewState -> mSavedViewState
    int mIndex -> mIndex
    java.lang.String mWho -> mWho
    android.os.Bundle mArguments -> mArguments
    android.support.v4.app.Fragment mTarget -> mTarget
    int mTargetIndex -> mTargetIndex
    int mTargetRequestCode -> mTargetRequestCode
    boolean mAdded -> mAdded
    boolean mRemoving -> mRemoving
    boolean mResumed -> mResumed
    boolean mFromLayout -> mFromLayout
    boolean mInLayout -> mInLayout
    boolean mRestored -> mRestored
    int mBackStackNesting -> mBackStackNesting
    android.support.v4.app.FragmentManagerImpl mFragmentManager -> mFragmentManager
    android.support.v4.app.FragmentActivity mActivity -> mActivity
    android.support.v4.app.FragmentManagerImpl mChildFragmentManager -> mChildFragmentManager
    android.support.v4.app.Fragment mParentFragment -> mParentFragment
    int mFragmentId -> mFragmentId
    int mContainerId -> mContainerId
    java.lang.String mTag -> mTag
    boolean mHidden -> mHidden
    boolean mDetached -> mDetached
    boolean mRetainInstance -> mRetainInstance
    boolean mRetaining -> mRetaining
    boolean mHasMenu -> mHasMenu
    boolean mMenuVisible -> mMenuVisible
    boolean mCalled -> mCalled
    int mNextAnim -> mNextAnim
    android.view.ViewGroup mContainer -> mContainer
    android.view.View mView -> mView
    android.view.View mInnerView -> mInnerView
    boolean mDeferStart -> mDeferStart
    boolean mUserVisibleHint -> mUserVisibleHint
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> mLoaderManager
    boolean mLoadersStarted -> mLoadersStarted
    boolean mCheckedForLoaderManager -> mCheckedForLoaderManager
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String) -> instantiate
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> instantiate
    boolean isSupportFragmentClass(android.content.Context,java.lang.String) -> isSupportFragmentClass
    void restoreViewState(android.os.Bundle) -> restoreViewState
    void setIndex(int,android.support.v4.app.Fragment) -> setIndex
    boolean isInBackStack() -> isInBackStack
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    int getId() -> getId
    java.lang.String getTag() -> getTag
    void setArguments(android.os.Bundle) -> setArguments
    android.os.Bundle getArguments() -> getArguments
    void setInitialSavedState(android.support.v4.app.Fragment$SavedState) -> setInitialSavedState
    void setTargetFragment(android.support.v4.app.Fragment,int) -> setTargetFragment
    android.support.v4.app.Fragment getTargetFragment() -> getTargetFragment
    int getTargetRequestCode() -> getTargetRequestCode
    android.support.v4.app.FragmentActivity getActivity() -> getActivity
    android.content.res.Resources getResources() -> getResources
    java.lang.CharSequence getText(int) -> getText
    java.lang.String getString(int) -> getString
    java.lang.String getString(int,java.lang.Object[]) -> getString
    android.support.v4.app.FragmentManager getFragmentManager() -> getFragmentManager
    android.support.v4.app.FragmentManager getChildFragmentManager() -> getChildFragmentManager
    android.support.v4.app.Fragment getParentFragment() -> getParentFragment
    boolean isAdded() -> isAdded
    boolean isDetached() -> isDetached
    boolean isRemoving() -> isRemoving
    boolean isInLayout() -> isInLayout
    boolean isResumed() -> isResumed
    boolean isVisible() -> isVisible
    boolean isHidden() -> isHidden
    boolean hasOptionsMenu() -> hasOptionsMenu
    boolean isMenuVisible() -> isMenuVisible
    void onHiddenChanged(boolean) -> onHiddenChanged
    void setRetainInstance(boolean) -> setRetainInstance
    boolean getRetainInstance() -> getRetainInstance
    void setHasOptionsMenu(boolean) -> setHasOptionsMenu
    void setMenuVisibility(boolean) -> setMenuVisibility
    void setUserVisibleHint(boolean) -> setUserVisibleHint
    boolean getUserVisibleHint() -> getUserVisibleHint
    android.support.v4.app.LoaderManager getLoaderManager() -> getLoaderManager
    void startActivity(android.content.Intent) -> startActivity
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> getLayoutInflater
    void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> onInflate
    void onAttach(android.app.Activity) -> onAttach
    android.view.animation.Animation onCreateAnimation(int,boolean,int) -> onCreateAnimation
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    android.view.View getView() -> getView
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onViewStateRestored(android.os.Bundle) -> onViewStateRestored
    void onStart() -> onStart
    void onResume() -> onResume
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPause() -> onPause
    void onStop() -> onStop
    void onLowMemory() -> onLowMemory
    void onDestroyView() -> onDestroyView
    void onDestroy() -> onDestroy
    void initState() -> initState
    void onDetach() -> onDetach
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> onCreateOptionsMenu
    void onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    void onDestroyOptionsMenu() -> onDestroyOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onOptionsMenuClosed(android.view.Menu) -> onOptionsMenuClosed
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    void registerForContextMenu(android.view.View) -> registerForContextMenu
    void unregisterForContextMenu(android.view.View) -> unregisterForContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    android.support.v4.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    void instantiateChildFragmentManager() -> instantiateChildFragmentManager
    void performCreate(android.os.Bundle) -> performCreate
    android.view.View performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> performCreateView
    void performActivityCreated(android.os.Bundle) -> performActivityCreated
    void performStart() -> performStart
    void performResume() -> performResume
    void performConfigurationChanged(android.content.res.Configuration) -> performConfigurationChanged
    void performLowMemory() -> performLowMemory
    boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> performCreateOptionsMenu
    boolean performPrepareOptionsMenu(android.view.Menu) -> performPrepareOptionsMenu
    boolean performOptionsItemSelected(android.view.MenuItem) -> performOptionsItemSelected
    boolean performContextItemSelected(android.view.MenuItem) -> performContextItemSelected
    void performOptionsMenuClosed(android.view.Menu) -> performOptionsMenuClosed
    void performSaveInstanceState(android.os.Bundle) -> performSaveInstanceState
    void performPause() -> performPause
    void performStop() -> performStop
    void performReallyStop() -> performReallyStop
    void performDestroyView() -> performDestroyView
    void performDestroy() -> performDestroy
android.support.v4.app.Fragment$1 -> android.support.v4.app.Fragment$1:
    android.support.v4.app.Fragment this$0 -> this$0
    android.view.View findViewById(int) -> findViewById
android.support.v4.app.Fragment$InstantiationException -> android.support.v4.app.Fragment$InstantiationException:
android.support.v4.app.Fragment$SavedState -> android.support.v4.app.Fragment$SavedState:
    android.os.Bundle mState -> mState
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.Fragment$SavedState$1 -> android.support.v4.app.Fragment$SavedState$1:
    android.support.v4.app.Fragment$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.Fragment$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentActivity -> android.support.v4.app.FragmentActivity:
    java.lang.String TAG -> TAG
    java.lang.String FRAGMENTS_TAG -> FRAGMENTS_TAG
    int HONEYCOMB -> HONEYCOMB
    int MSG_REALLY_STOPPED -> MSG_REALLY_STOPPED
    int MSG_RESUME_PENDING -> MSG_RESUME_PENDING
    android.os.Handler mHandler -> mHandler
    android.support.v4.app.FragmentManagerImpl mFragments -> mFragments
    android.support.v4.app.FragmentContainer mContainer -> mContainer
    boolean mCreated -> mCreated
    boolean mResumed -> mResumed
    boolean mStopped -> mStopped
    boolean mReallyStopped -> mReallyStopped
    boolean mRetaining -> mRetaining
    boolean mOptionsMenuInvalidated -> mOptionsMenuInvalidated
    boolean mCheckedForLoaderManager -> mCheckedForLoaderManager
    boolean mLoadersStarted -> mLoadersStarted
    android.support.v4.util.SimpleArrayMap mAllLoaderManagers -> mAllLoaderManagers
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> mLoaderManager
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onBackPressed() -> onBackPressed
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onLowMemory() -> onLowMemory
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    void onPause() -> onPause
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onResume() -> onResume
    void onPostResume() -> onPostResume
    void onResumeFragments() -> onResumeFragments
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    boolean onPrepareOptionsPanel(android.view.View,android.view.Menu) -> onPrepareOptionsPanel
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStart() -> onStart
    void onStop() -> onStop
    java.lang.Object onRetainCustomNonConfigurationInstance() -> onRetainCustomNonConfigurationInstance
    java.lang.Object getLastCustomNonConfigurationInstance() -> getLastCustomNonConfigurationInstance
    void supportInvalidateOptionsMenu() -> supportInvalidateOptionsMenu
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.String viewToString(android.view.View) -> viewToString
    void dumpViewHierarchy(java.lang.String,java.io.PrintWriter,android.view.View) -> dumpViewHierarchy
    void doReallyStop(boolean) -> doReallyStop
    void onReallyStop() -> onReallyStop
    void onAttachFragment(android.support.v4.app.Fragment) -> onAttachFragment
    android.support.v4.app.FragmentManager getSupportFragmentManager() -> getSupportFragmentManager
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void startActivityFromFragment(android.support.v4.app.Fragment,android.content.Intent,int) -> startActivityFromFragment
    void invalidateSupportFragment(java.lang.String) -> invalidateSupportFragment
    android.support.v4.app.LoaderManager getSupportLoaderManager() -> getSupportLoaderManager
    android.support.v4.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean) -> getLoaderManager
android.support.v4.app.FragmentActivity$1 -> android.support.v4.app.FragmentActivity$1:
    android.support.v4.app.FragmentActivity this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.app.FragmentActivity$2 -> android.support.v4.app.FragmentActivity$2:
    android.support.v4.app.FragmentActivity this$0 -> this$0
    android.view.View findViewById(int) -> findViewById
android.support.v4.app.FragmentActivity$FragmentTag -> android.support.v4.app.FragmentActivity$FragmentTag:
    int[] Fragment -> Fragment
    int Fragment_id -> Fragment_id
    int Fragment_name -> Fragment_name
    int Fragment_tag -> Fragment_tag
android.support.v4.app.FragmentActivity$NonConfigurationInstances -> android.support.v4.app.FragmentActivity$NonConfigurationInstances:
    java.lang.Object activity -> activity
    java.lang.Object custom -> custom
    android.support.v4.util.SimpleArrayMap children -> children
    java.util.ArrayList fragments -> fragments
    android.support.v4.util.SimpleArrayMap loaders -> loaders
android.support.v4.app.FragmentContainer -> android.support.v4.app.FragmentContainer:
    android.view.View findViewById(int) -> findViewById
android.support.v4.app.FragmentManager -> android.support.v4.app.FragmentManager:
    int POP_BACK_STACK_INCLUSIVE -> POP_BACK_STACK_INCLUSIVE
    android.support.v4.app.FragmentTransaction beginTransaction() -> beginTransaction
    android.support.v4.app.FragmentTransaction openTransaction() -> openTransaction
    boolean executePendingTransactions() -> executePendingTransactions
    android.support.v4.app.Fragment findFragmentById(int) -> findFragmentById
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> findFragmentByTag
    void popBackStack() -> popBackStack
    boolean popBackStackImmediate() -> popBackStackImmediate
    void popBackStack(java.lang.String,int) -> popBackStack
    boolean popBackStackImmediate(java.lang.String,int) -> popBackStackImmediate
    void popBackStack(int,int) -> popBackStack
    boolean popBackStackImmediate(int,int) -> popBackStackImmediate
    int getBackStackEntryCount() -> getBackStackEntryCount
    android.support.v4.app.FragmentManager$BackStackEntry getBackStackEntryAt(int) -> getBackStackEntryAt
    void addOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> addOnBackStackChangedListener
    void removeOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> removeOnBackStackChangedListener
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> putFragment
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> getFragment
    java.util.List getFragments() -> getFragments
    android.support.v4.app.Fragment$SavedState saveFragmentInstanceState(android.support.v4.app.Fragment) -> saveFragmentInstanceState
    boolean isDestroyed() -> isDestroyed
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void enableDebugLogging(boolean) -> enableDebugLogging
android.support.v4.app.FragmentManager$BackStackEntry -> android.support.v4.app.FragmentManager$BackStackEntry:
    int getId() -> getId
    java.lang.String getName() -> getName
    int getBreadCrumbTitleRes() -> getBreadCrumbTitleRes
    int getBreadCrumbShortTitleRes() -> getBreadCrumbShortTitleRes
    java.lang.CharSequence getBreadCrumbTitle() -> getBreadCrumbTitle
    java.lang.CharSequence getBreadCrumbShortTitle() -> getBreadCrumbShortTitle
android.support.v4.app.FragmentManager$OnBackStackChangedListener -> android.support.v4.app.FragmentManager$OnBackStackChangedListener:
    void onBackStackChanged() -> onBackStackChanged
android.support.v4.app.FragmentManagerImpl -> android.support.v4.app.FragmentManagerImpl:
    boolean DEBUG -> DEBUG
    java.lang.String TAG -> TAG
    boolean HONEYCOMB -> HONEYCOMB
    java.lang.String TARGET_REQUEST_CODE_STATE_TAG -> TARGET_REQUEST_CODE_STATE_TAG
    java.lang.String TARGET_STATE_TAG -> TARGET_STATE_TAG
    java.lang.String VIEW_STATE_TAG -> VIEW_STATE_TAG
    java.lang.String USER_VISIBLE_HINT_TAG -> USER_VISIBLE_HINT_TAG
    java.util.ArrayList mPendingActions -> mPendingActions
    java.lang.Runnable[] mTmpActions -> mTmpActions
    boolean mExecutingActions -> mExecutingActions
    java.util.ArrayList mActive -> mActive
    java.util.ArrayList mAdded -> mAdded
    java.util.ArrayList mAvailIndices -> mAvailIndices
    java.util.ArrayList mBackStack -> mBackStack
    java.util.ArrayList mCreatedMenus -> mCreatedMenus
    java.util.ArrayList mBackStackIndices -> mBackStackIndices
    java.util.ArrayList mAvailBackStackIndices -> mAvailBackStackIndices
    java.util.ArrayList mBackStackChangeListeners -> mBackStackChangeListeners
    int mCurState -> mCurState
    android.support.v4.app.FragmentActivity mActivity -> mActivity
    android.support.v4.app.FragmentContainer mContainer -> mContainer
    android.support.v4.app.Fragment mParent -> mParent
    boolean mNeedMenuInvalidate -> mNeedMenuInvalidate
    boolean mStateSaved -> mStateSaved
    boolean mDestroyed -> mDestroyed
    java.lang.String mNoTransactionsBecause -> mNoTransactionsBecause
    boolean mHavePendingDeferredStart -> mHavePendingDeferredStart
    android.os.Bundle mStateBundle -> mStateBundle
    android.util.SparseArray mStateArray -> mStateArray
    java.lang.Runnable mExecCommit -> mExecCommit
    android.view.animation.Interpolator DECELERATE_QUINT -> DECELERATE_QUINT
    android.view.animation.Interpolator DECELERATE_CUBIC -> DECELERATE_CUBIC
    android.view.animation.Interpolator ACCELERATE_QUINT -> ACCELERATE_QUINT
    android.view.animation.Interpolator ACCELERATE_CUBIC -> ACCELERATE_CUBIC
    int ANIM_DUR -> ANIM_DUR
    int ANIM_STYLE_OPEN_ENTER -> ANIM_STYLE_OPEN_ENTER
    int ANIM_STYLE_OPEN_EXIT -> ANIM_STYLE_OPEN_EXIT
    int ANIM_STYLE_CLOSE_ENTER -> ANIM_STYLE_CLOSE_ENTER
    int ANIM_STYLE_CLOSE_EXIT -> ANIM_STYLE_CLOSE_EXIT
    int ANIM_STYLE_FADE_ENTER -> ANIM_STYLE_FADE_ENTER
    int ANIM_STYLE_FADE_EXIT -> ANIM_STYLE_FADE_EXIT
    void throwException(java.lang.RuntimeException) -> throwException
    android.support.v4.app.FragmentTransaction beginTransaction() -> beginTransaction
    boolean executePendingTransactions() -> executePendingTransactions
    void popBackStack() -> popBackStack
    boolean popBackStackImmediate() -> popBackStackImmediate
    void popBackStack(java.lang.String,int) -> popBackStack
    boolean popBackStackImmediate(java.lang.String,int) -> popBackStackImmediate
    void popBackStack(int,int) -> popBackStack
    boolean popBackStackImmediate(int,int) -> popBackStackImmediate
    int getBackStackEntryCount() -> getBackStackEntryCount
    android.support.v4.app.FragmentManager$BackStackEntry getBackStackEntryAt(int) -> getBackStackEntryAt
    void addOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> addOnBackStackChangedListener
    void removeOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> removeOnBackStackChangedListener
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> putFragment
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> getFragment
    java.util.List getFragments() -> getFragments
    android.support.v4.app.Fragment$SavedState saveFragmentInstanceState(android.support.v4.app.Fragment) -> saveFragmentInstanceState
    boolean isDestroyed() -> isDestroyed
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    android.view.animation.Animation makeOpenCloseAnimation(android.content.Context,float,float,float,float) -> makeOpenCloseAnimation
    android.view.animation.Animation makeFadeAnimation(android.content.Context,float,float) -> makeFadeAnimation
    android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int) -> loadAnimation
    void performPendingDeferredStart(android.support.v4.app.Fragment) -> performPendingDeferredStart
    void moveToState(android.support.v4.app.Fragment,int,int,int,boolean) -> moveToState
    void moveToState(android.support.v4.app.Fragment) -> moveToState
    void moveToState(int,boolean) -> moveToState
    void moveToState(int,int,int,boolean) -> moveToState
    void startPendingDeferredFragments() -> startPendingDeferredFragments
    void makeActive(android.support.v4.app.Fragment) -> makeActive
    void makeInactive(android.support.v4.app.Fragment) -> makeInactive
    void addFragment(android.support.v4.app.Fragment,boolean) -> addFragment
    void removeFragment(android.support.v4.app.Fragment,int,int) -> removeFragment
    void hideFragment(android.support.v4.app.Fragment,int,int) -> hideFragment
    void showFragment(android.support.v4.app.Fragment,int,int) -> showFragment
    void detachFragment(android.support.v4.app.Fragment,int,int) -> detachFragment
    void attachFragment(android.support.v4.app.Fragment,int,int) -> attachFragment
    android.support.v4.app.Fragment findFragmentById(int) -> findFragmentById
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> findFragmentByTag
    android.support.v4.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    void checkStateLoss() -> checkStateLoss
    void enqueueAction(java.lang.Runnable,boolean) -> enqueueAction
    int allocBackStackIndex(android.support.v4.app.BackStackRecord) -> allocBackStackIndex
    void setBackStackIndex(int,android.support.v4.app.BackStackRecord) -> setBackStackIndex
    void freeBackStackIndex(int) -> freeBackStackIndex
    boolean execPendingActions() -> execPendingActions
    void reportBackStackChanged() -> reportBackStackChanged
    void addBackStackState(android.support.v4.app.BackStackRecord) -> addBackStackState
    boolean popBackStackState(android.os.Handler,java.lang.String,int,int) -> popBackStackState
    java.util.ArrayList retainNonConfig() -> retainNonConfig
    void saveFragmentViewState(android.support.v4.app.Fragment) -> saveFragmentViewState
    android.os.Bundle saveFragmentBasicState(android.support.v4.app.Fragment) -> saveFragmentBasicState
    android.os.Parcelable saveAllState() -> saveAllState
    void restoreAllState(android.os.Parcelable,java.util.ArrayList) -> restoreAllState
    void attachActivity(android.support.v4.app.FragmentActivity,android.support.v4.app.FragmentContainer,android.support.v4.app.Fragment) -> attachActivity
    void noteStateNotSaved() -> noteStateNotSaved
    void dispatchCreate() -> dispatchCreate
    void dispatchActivityCreated() -> dispatchActivityCreated
    void dispatchStart() -> dispatchStart
    void dispatchResume() -> dispatchResume
    void dispatchPause() -> dispatchPause
    void dispatchStop() -> dispatchStop
    void dispatchReallyStop() -> dispatchReallyStop
    void dispatchDestroyView() -> dispatchDestroyView
    void dispatchDestroy() -> dispatchDestroy
    void dispatchConfigurationChanged(android.content.res.Configuration) -> dispatchConfigurationChanged
    void dispatchLowMemory() -> dispatchLowMemory
    boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> dispatchCreateOptionsMenu
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> dispatchPrepareOptionsMenu
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> dispatchOptionsItemSelected
    boolean dispatchContextItemSelected(android.view.MenuItem) -> dispatchContextItemSelected
    void dispatchOptionsMenuClosed(android.view.Menu) -> dispatchOptionsMenuClosed
    int reverseTransit(int) -> reverseTransit
    int transitToStyleIndex(int,boolean) -> transitToStyleIndex
android.support.v4.app.FragmentManagerImpl$1 -> android.support.v4.app.FragmentManagerImpl$1:
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void run() -> run
android.support.v4.app.FragmentManagerImpl$2 -> android.support.v4.app.FragmentManagerImpl$2:
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void run() -> run
android.support.v4.app.FragmentManagerImpl$3 -> android.support.v4.app.FragmentManagerImpl$3:
    java.lang.String val$name -> val$name
    int val$flags -> val$flags
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void run() -> run
android.support.v4.app.FragmentManagerImpl$4 -> android.support.v4.app.FragmentManagerImpl$4:
    int val$id -> val$id
    int val$flags -> val$flags
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void run() -> run
android.support.v4.app.FragmentManagerImpl$5 -> android.support.v4.app.FragmentManagerImpl$5:
    android.support.v4.app.Fragment val$fragment -> val$fragment
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
android.support.v4.app.FragmentManagerState -> android.support.v4.app.FragmentManagerState:
    android.support.v4.app.FragmentState[] mActive -> mActive
    int[] mAdded -> mAdded
    android.support.v4.app.BackStackState[] mBackStack -> mBackStack
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentManagerState$1 -> android.support.v4.app.FragmentManagerState$1:
    android.support.v4.app.FragmentManagerState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.FragmentManagerState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentPagerAdapter -> android.support.v4.app.FragmentPagerAdapter:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.support.v4.app.FragmentManager mFragmentManager -> mFragmentManager
    android.support.v4.app.FragmentTransaction mCurTransaction -> mCurTransaction
    android.support.v4.app.Fragment mCurrentPrimaryItem -> mCurrentPrimaryItem
    android.support.v4.app.Fragment getItem(int) -> getItem
    void startUpdate(android.view.ViewGroup) -> startUpdate
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.ViewGroup) -> finishUpdate
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    android.os.Parcelable saveState() -> saveState
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
    long getItemId(int) -> getItemId
    java.lang.String makeFragmentName(int,long) -> makeFragmentName
android.support.v4.app.FragmentState -> android.support.v4.app.FragmentState:
    java.lang.String mClassName -> mClassName
    int mIndex -> mIndex
    boolean mFromLayout -> mFromLayout
    int mFragmentId -> mFragmentId
    int mContainerId -> mContainerId
    java.lang.String mTag -> mTag
    boolean mRetainInstance -> mRetainInstance
    boolean mDetached -> mDetached
    android.os.Bundle mArguments -> mArguments
    android.os.Bundle mSavedFragmentState -> mSavedFragmentState
    android.support.v4.app.Fragment mInstance -> mInstance
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentActivity,android.support.v4.app.Fragment) -> instantiate
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentState$1 -> android.support.v4.app.FragmentState$1:
    android.support.v4.app.FragmentState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.FragmentState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentStatePagerAdapter -> android.support.v4.app.FragmentStatePagerAdapter:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.support.v4.app.FragmentManager mFragmentManager -> mFragmentManager
    android.support.v4.app.FragmentTransaction mCurTransaction -> mCurTransaction
    java.util.ArrayList mSavedState -> mSavedState
    java.util.ArrayList mFragments -> mFragments
    android.support.v4.app.Fragment mCurrentPrimaryItem -> mCurrentPrimaryItem
    android.support.v4.app.Fragment getItem(int) -> getItem
    void startUpdate(android.view.ViewGroup) -> startUpdate
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.ViewGroup) -> finishUpdate
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    android.os.Parcelable saveState() -> saveState
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
android.support.v4.app.FragmentTabHost -> android.support.v4.app.FragmentTabHost:
    java.util.ArrayList mTabs -> mTabs
    android.widget.FrameLayout mRealTabContent -> mRealTabContent
    android.content.Context mContext -> mContext
    android.support.v4.app.FragmentManager mFragmentManager -> mFragmentManager
    int mContainerId -> mContainerId
    android.widget.TabHost$OnTabChangeListener mOnTabChangeListener -> mOnTabChangeListener
    android.support.v4.app.FragmentTabHost$TabInfo mLastTab -> mLastTab
    boolean mAttached -> mAttached
    void initFragmentTabHost(android.content.Context,android.util.AttributeSet) -> initFragmentTabHost
    void ensureHierarchy(android.content.Context) -> ensureHierarchy
    void setup() -> setup
    void setup(android.content.Context,android.support.v4.app.FragmentManager) -> setup
    void setup(android.content.Context,android.support.v4.app.FragmentManager,int) -> setup
    void ensureContent() -> ensureContent
    void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener) -> setOnTabChangedListener
    void addTab(android.widget.TabHost$TabSpec,java.lang.Class,android.os.Bundle) -> addTab
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void onTabChanged(java.lang.String) -> onTabChanged
    android.support.v4.app.FragmentTransaction doTabChanged(java.lang.String,android.support.v4.app.FragmentTransaction) -> doTabChanged
android.support.v4.app.FragmentTabHost$1 -> android.support.v4.app.FragmentTabHost$1:
android.support.v4.app.FragmentTabHost$DummyTabFactory -> android.support.v4.app.FragmentTabHost$DummyTabFactory:
    android.content.Context mContext -> mContext
    android.view.View createTabContent(java.lang.String) -> createTabContent
android.support.v4.app.FragmentTabHost$SavedState -> android.support.v4.app.FragmentTabHost$SavedState:
    java.lang.String curTab -> curTab
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.app.FragmentTabHost$SavedState$1 -> android.support.v4.app.FragmentTabHost$SavedState$1:
    android.support.v4.app.FragmentTabHost$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.FragmentTabHost$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost$TabInfo -> android.support.v4.app.FragmentTabHost$TabInfo:
    java.lang.String tag -> tag
    java.lang.Class clss -> clss
    android.os.Bundle args -> args
    android.support.v4.app.Fragment fragment -> fragment
    android.support.v4.app.Fragment access$102(android.support.v4.app.FragmentTabHost$TabInfo,android.support.v4.app.Fragment) -> access$102
    android.support.v4.app.Fragment access$100(android.support.v4.app.FragmentTabHost$TabInfo) -> access$100
    java.lang.String access$200(android.support.v4.app.FragmentTabHost$TabInfo) -> access$200
    java.lang.Class access$300(android.support.v4.app.FragmentTabHost$TabInfo) -> access$300
    android.os.Bundle access$400(android.support.v4.app.FragmentTabHost$TabInfo) -> access$400
android.support.v4.app.FragmentTransaction -> android.support.v4.app.FragmentTransaction:
    int TRANSIT_ENTER_MASK -> TRANSIT_ENTER_MASK
    int TRANSIT_EXIT_MASK -> TRANSIT_EXIT_MASK
    int TRANSIT_UNSET -> TRANSIT_UNSET
    int TRANSIT_NONE -> TRANSIT_NONE
    int TRANSIT_FRAGMENT_OPEN -> TRANSIT_FRAGMENT_OPEN
    int TRANSIT_FRAGMENT_CLOSE -> TRANSIT_FRAGMENT_CLOSE
    int TRANSIT_FRAGMENT_FADE -> TRANSIT_FRAGMENT_FADE
    android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> add
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment) -> replace
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String) -> replace
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> remove
    android.support.v4.app.FragmentTransaction hide(android.support.v4.app.Fragment) -> hide
    android.support.v4.app.FragmentTransaction show(android.support.v4.app.Fragment) -> show
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> detach
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> attach
    boolean isEmpty() -> isEmpty
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int,int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setTransition(int) -> setTransition
    android.support.v4.app.FragmentTransaction setTransitionStyle(int) -> setTransitionStyle
    android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String) -> addToBackStack
    boolean isAddToBackStackAllowed() -> isAddToBackStackAllowed
    android.support.v4.app.FragmentTransaction disallowAddToBackStack() -> disallowAddToBackStack
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(int) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(java.lang.CharSequence) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(int) -> setBreadCrumbShortTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(java.lang.CharSequence) -> setBreadCrumbShortTitle
    int commit() -> commit
    int commitAllowingStateLoss() -> commitAllowingStateLoss
android.support.v4.app.FragmentTransaction$Transit -> android.support.v4.app.FragmentTransaction$Transit:
android.support.v4.app.INotificationSideChannel -> android.support.v4.app.INotificationSideChannel:
    void notify(java.lang.String,int,java.lang.String,android.app.Notification) -> notify
    void cancel(java.lang.String,int,java.lang.String) -> cancel
    void cancelAll(java.lang.String) -> cancelAll
android.support.v4.app.INotificationSideChannel$Stub -> android.support.v4.app.INotificationSideChannel$Stub:
    java.lang.String DESCRIPTOR -> DESCRIPTOR
    int TRANSACTION_notify -> TRANSACTION_notify
    int TRANSACTION_cancel -> TRANSACTION_cancel
    int TRANSACTION_cancelAll -> TRANSACTION_cancelAll
    android.support.v4.app.INotificationSideChannel asInterface(android.os.IBinder) -> asInterface
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
android.support.v4.app.INotificationSideChannel$Stub$Proxy -> android.support.v4.app.INotificationSideChannel$Stub$Proxy:
    android.os.IBinder mRemote -> mRemote
    android.os.IBinder asBinder() -> asBinder
    java.lang.String getInterfaceDescriptor() -> getInterfaceDescriptor
    void notify(java.lang.String,int,java.lang.String,android.app.Notification) -> notify
    void cancel(java.lang.String,int,java.lang.String) -> cancel
    void cancelAll(java.lang.String) -> cancelAll
android.support.v4.app.ListFragment -> android.support.v4.app.ListFragment:
    int INTERNAL_EMPTY_ID -> INTERNAL_EMPTY_ID
    int INTERNAL_PROGRESS_CONTAINER_ID -> INTERNAL_PROGRESS_CONTAINER_ID
    int INTERNAL_LIST_CONTAINER_ID -> INTERNAL_LIST_CONTAINER_ID
    android.os.Handler mHandler -> mHandler
    java.lang.Runnable mRequestFocus -> mRequestFocus
    android.widget.AdapterView$OnItemClickListener mOnClickListener -> mOnClickListener
    android.widget.ListAdapter mAdapter -> mAdapter
    android.widget.ListView mList -> mList
    android.view.View mEmptyView -> mEmptyView
    android.widget.TextView mStandardEmptyView -> mStandardEmptyView
    android.view.View mProgressContainer -> mProgressContainer
    android.view.View mListContainer -> mListContainer
    java.lang.CharSequence mEmptyText -> mEmptyText
    boolean mListShown -> mListShown
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void onDestroyView() -> onDestroyView
    void onListItemClick(android.widget.ListView,android.view.View,int,long) -> onListItemClick
    void setListAdapter(android.widget.ListAdapter) -> setListAdapter
    void setSelection(int) -> setSelection
    int getSelectedItemPosition() -> getSelectedItemPosition
    long getSelectedItemId() -> getSelectedItemId
    android.widget.ListView getListView() -> getListView
    void setEmptyText(java.lang.CharSequence) -> setEmptyText
    void setListShown(boolean) -> setListShown
    void setListShownNoAnimation(boolean) -> setListShownNoAnimation
    void setListShown(boolean,boolean) -> setListShown
    android.widget.ListAdapter getListAdapter() -> getListAdapter
    void ensureList() -> ensureList
android.support.v4.app.ListFragment$1 -> android.support.v4.app.ListFragment$1:
    android.support.v4.app.ListFragment this$0 -> this$0
    void run() -> run
android.support.v4.app.ListFragment$2 -> android.support.v4.app.ListFragment$2:
    android.support.v4.app.ListFragment this$0 -> this$0
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
android.support.v4.app.LoaderManager -> android.support.v4.app.LoaderManager:
    android.support.v4.content.Loader initLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> initLoader
    android.support.v4.content.Loader restartLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> restartLoader
    void destroyLoader(int) -> destroyLoader
    android.support.v4.content.Loader getLoader(int) -> getLoader
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void enableDebugLogging(boolean) -> enableDebugLogging
    boolean hasRunningLoaders() -> hasRunningLoaders
android.support.v4.app.LoaderManager$LoaderCallbacks -> android.support.v4.app.LoaderManager$LoaderCallbacks:
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> onCreateLoader
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> onLoadFinished
    void onLoaderReset(android.support.v4.content.Loader) -> onLoaderReset
android.support.v4.app.LoaderManagerImpl -> android.support.v4.app.LoaderManagerImpl:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.support.v4.util.SparseArrayCompat mLoaders -> mLoaders
    android.support.v4.util.SparseArrayCompat mInactiveLoaders -> mInactiveLoaders
    java.lang.String mWho -> mWho
    android.support.v4.app.FragmentActivity mActivity -> mActivity
    boolean mStarted -> mStarted
    boolean mRetaining -> mRetaining
    boolean mRetainingStarted -> mRetainingStarted
    boolean mCreatingLoader -> mCreatingLoader
    void updateActivity(android.support.v4.app.FragmentActivity) -> updateActivity
    android.support.v4.app.LoaderManagerImpl$LoaderInfo createLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> createLoader
    android.support.v4.app.LoaderManagerImpl$LoaderInfo createAndInstallLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> createAndInstallLoader
    void installLoader(android.support.v4.app.LoaderManagerImpl$LoaderInfo) -> installLoader
    android.support.v4.content.Loader initLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> initLoader
    android.support.v4.content.Loader restartLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> restartLoader
    void destroyLoader(int) -> destroyLoader
    android.support.v4.content.Loader getLoader(int) -> getLoader
    void doStart() -> doStart
    void doStop() -> doStop
    void doRetain() -> doRetain
    void finishRetain() -> finishRetain
    void doReportNextStart() -> doReportNextStart
    void doReportStart() -> doReportStart
    void doDestroy() -> doDestroy
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    boolean hasRunningLoaders() -> hasRunningLoaders
android.support.v4.app.LoaderManagerImpl$LoaderInfo -> android.support.v4.app.LoaderManagerImpl$LoaderInfo:
    int mId -> mId
    android.os.Bundle mArgs -> mArgs
    android.support.v4.app.LoaderManager$LoaderCallbacks mCallbacks -> mCallbacks
    android.support.v4.content.Loader mLoader -> mLoader
    boolean mHaveData -> mHaveData
    boolean mDeliveredData -> mDeliveredData
    java.lang.Object mData -> mData
    boolean mStarted -> mStarted
    boolean mRetaining -> mRetaining
    boolean mRetainingStarted -> mRetainingStarted
    boolean mReportNextStart -> mReportNextStart
    boolean mDestroyed -> mDestroyed
    boolean mListenerRegistered -> mListenerRegistered
    android.support.v4.app.LoaderManagerImpl$LoaderInfo mPendingLoader -> mPendingLoader
    android.support.v4.app.LoaderManagerImpl this$0 -> this$0
    void start() -> start
    void retain() -> retain
    void finishRetain() -> finishRetain
    void reportStart() -> reportStart
    void stop() -> stop
    void destroy() -> destroy
    void onLoadComplete(android.support.v4.content.Loader,java.lang.Object) -> onLoadComplete
    void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> callOnLoadFinished
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.app.NavUtils -> android.support.v4.app.NavUtils:
    java.lang.String TAG -> TAG
    java.lang.String PARENT_ACTIVITY -> PARENT_ACTIVITY
    android.support.v4.app.NavUtils$NavUtilsImpl IMPL -> IMPL
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpFromSameTask(android.app.Activity) -> navigateUpFromSameTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    android.content.Intent getParentActivityIntent(android.content.Context,java.lang.Class) -> getParentActivityIntent
    android.content.Intent getParentActivityIntent(android.content.Context,android.content.ComponentName) -> getParentActivityIntent
    java.lang.String getParentActivityName(android.app.Activity) -> getParentActivityName
    java.lang.String getParentActivityName(android.content.Context,android.content.ComponentName) -> getParentActivityName
android.support.v4.app.NavUtils$NavUtilsImpl -> android.support.v4.app.NavUtils$NavUtilsImpl:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NavUtils$NavUtilsImplBase -> android.support.v4.app.NavUtils$NavUtilsImplBase:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NavUtils$NavUtilsImplJB -> android.support.v4.app.NavUtils$NavUtilsImplJB:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    android.content.Intent superGetParentActivityIntent(android.app.Activity) -> superGetParentActivityIntent
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NavUtilsJB -> android.support.v4.app.NavUtilsJB:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NoSaveStateFrameLayout -> android.support.v4.app.NoSaveStateFrameLayout:
    android.view.ViewGroup wrap(android.view.View) -> wrap
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
android.support.v4.app.NotificationBuilderWithActions -> android.support.v4.app.NotificationBuilderWithActions:
    void addAction(android.support.v4.app.NotificationCompatBase$Action) -> addAction
android.support.v4.app.NotificationBuilderWithBuilderAccessor -> android.support.v4.app.NotificationBuilderWithBuilderAccessor:
    android.app.Notification$Builder getBuilder() -> getBuilder
android.support.v4.app.NotificationCompat -> android.support.v4.app.NotificationCompat:
    int DEFAULT_ALL -> DEFAULT_ALL
    int DEFAULT_SOUND -> DEFAULT_SOUND
    int DEFAULT_VIBRATE -> DEFAULT_VIBRATE
    int DEFAULT_LIGHTS -> DEFAULT_LIGHTS
    int STREAM_DEFAULT -> STREAM_DEFAULT
    int FLAG_SHOW_LIGHTS -> FLAG_SHOW_LIGHTS
    int FLAG_ONGOING_EVENT -> FLAG_ONGOING_EVENT
    int FLAG_INSISTENT -> FLAG_INSISTENT
    int FLAG_ONLY_ALERT_ONCE -> FLAG_ONLY_ALERT_ONCE
    int FLAG_AUTO_CANCEL -> FLAG_AUTO_CANCEL
    int FLAG_NO_CLEAR -> FLAG_NO_CLEAR
    int FLAG_FOREGROUND_SERVICE -> FLAG_FOREGROUND_SERVICE
    int FLAG_HIGH_PRIORITY -> FLAG_HIGH_PRIORITY
    int FLAG_LOCAL_ONLY -> FLAG_LOCAL_ONLY
    int FLAG_GROUP_SUMMARY -> FLAG_GROUP_SUMMARY
    int PRIORITY_DEFAULT -> PRIORITY_DEFAULT
    int PRIORITY_LOW -> PRIORITY_LOW
    int PRIORITY_MIN -> PRIORITY_MIN
    int PRIORITY_HIGH -> PRIORITY_HIGH
    int PRIORITY_MAX -> PRIORITY_MAX
    java.lang.String EXTRA_TITLE -> EXTRA_TITLE
    java.lang.String EXTRA_TITLE_BIG -> EXTRA_TITLE_BIG
    java.lang.String EXTRA_TEXT -> EXTRA_TEXT
    java.lang.String EXTRA_SUB_TEXT -> EXTRA_SUB_TEXT
    java.lang.String EXTRA_INFO_TEXT -> EXTRA_INFO_TEXT
    java.lang.String EXTRA_SUMMARY_TEXT -> EXTRA_SUMMARY_TEXT
    java.lang.String EXTRA_SMALL_ICON -> EXTRA_SMALL_ICON
    java.lang.String EXTRA_LARGE_ICON -> EXTRA_LARGE_ICON
    java.lang.String EXTRA_LARGE_ICON_BIG -> EXTRA_LARGE_ICON_BIG
    java.lang.String EXTRA_PROGRESS -> EXTRA_PROGRESS
    java.lang.String EXTRA_PROGRESS_MAX -> EXTRA_PROGRESS_MAX
    java.lang.String EXTRA_PROGRESS_INDETERMINATE -> EXTRA_PROGRESS_INDETERMINATE
    java.lang.String EXTRA_SHOW_CHRONOMETER -> EXTRA_SHOW_CHRONOMETER
    java.lang.String EXTRA_PICTURE -> EXTRA_PICTURE
    java.lang.String EXTRA_TEXT_LINES -> EXTRA_TEXT_LINES
    java.lang.String EXTRA_PEOPLE -> EXTRA_PEOPLE
    android.support.v4.app.NotificationCompat$NotificationCompatImpl IMPL -> IMPL
    void addActionsToBuilder(android.support.v4.app.NotificationBuilderWithActions,java.util.ArrayList) -> addActionsToBuilder
    void addStyleToBuilderJellybean(android.support.v4.app.NotificationBuilderWithBuilderAccessor,android.support.v4.app.NotificationCompat$Style) -> addStyleToBuilderJellybean
    android.app.Notification[] getNotificationArrayFromBundle(android.os.Bundle,java.lang.String) -> getNotificationArrayFromBundle
    android.os.Bundle getExtras(android.app.Notification) -> getExtras
    int getActionCount(android.app.Notification) -> getActionCount
    android.support.v4.app.NotificationCompat$Action getAction(android.app.Notification,int) -> getAction
    boolean getLocalOnly(android.app.Notification) -> getLocalOnly
    java.lang.String getGroup(android.app.Notification) -> getGroup
    boolean isGroupSummary(android.app.Notification) -> isGroupSummary
    java.lang.String getSortKey(android.app.Notification) -> getSortKey
    void access$000(android.support.v4.app.NotificationBuilderWithActions,java.util.ArrayList) -> access$000
    void access$100(android.support.v4.app.NotificationBuilderWithBuilderAccessor,android.support.v4.app.NotificationCompat$Style) -> access$100
    android.support.v4.app.NotificationCompat$NotificationCompatImpl access$200() -> access$200
    android.app.Notification[] access$500(android.os.Bundle,java.lang.String) -> access$500
android.support.v4.app.NotificationCompat$1 -> android.support.v4.app.NotificationCompat$1:
android.support.v4.app.NotificationCompat$Action -> android.support.v4.app.NotificationCompat$Action:
    android.os.Bundle mExtras -> mExtras
    android.support.v4.app.RemoteInput[] mRemoteInputs -> mRemoteInputs
    int icon -> icon
    java.lang.CharSequence title -> title
    android.app.PendingIntent actionIntent -> actionIntent
    android.support.v4.app.NotificationCompatBase$Action$Factory FACTORY -> FACTORY
    int getIcon() -> getIcon
    java.lang.CharSequence getTitle() -> getTitle
    android.app.PendingIntent getActionIntent() -> getActionIntent
    android.os.Bundle getExtras() -> getExtras
    android.support.v4.app.RemoteInput[] getRemoteInputs() -> getRemoteInputs
    android.support.v4.app.RemoteInputCompatBase$RemoteInput[] getRemoteInputs() -> getRemoteInputs
    android.os.Bundle access$300(android.support.v4.app.NotificationCompat$Action) -> access$300
android.support.v4.app.NotificationCompat$Action$1 -> android.support.v4.app.NotificationCompat$Action$1:
    android.support.v4.app.NotificationCompat$Action build(int,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle,android.support.v4.app.RemoteInputCompatBase$RemoteInput[]) -> build
    android.support.v4.app.NotificationCompat$Action[] newArray(int) -> newArray
    android.support.v4.app.NotificationCompatBase$Action[] newArray(int) -> newArray
    android.support.v4.app.NotificationCompatBase$Action build(int,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle,android.support.v4.app.RemoteInputCompatBase$RemoteInput[]) -> build
android.support.v4.app.NotificationCompat$Action$Builder -> android.support.v4.app.NotificationCompat$Action$Builder:
    int mIcon -> mIcon
    java.lang.CharSequence mTitle -> mTitle
    android.app.PendingIntent mIntent -> mIntent
    android.os.Bundle mExtras -> mExtras
    java.util.ArrayList mRemoteInputs -> mRemoteInputs
    android.support.v4.app.NotificationCompat$Action$Builder addExtras(android.os.Bundle) -> addExtras
    android.os.Bundle getExtras() -> getExtras
    android.support.v4.app.NotificationCompat$Action$Builder addRemoteInput(android.support.v4.app.RemoteInput) -> addRemoteInput
    android.support.v4.app.NotificationCompat$Action$Builder extend(android.support.v4.app.NotificationCompat$Action$Extender) -> extend
    android.support.v4.app.NotificationCompat$Action build() -> build
android.support.v4.app.NotificationCompat$Action$Extender -> android.support.v4.app.NotificationCompat$Action$Extender:
    android.support.v4.app.NotificationCompat$Action$Builder extend(android.support.v4.app.NotificationCompat$Action$Builder) -> extend
android.support.v4.app.NotificationCompat$Action$WearableExtender -> android.support.v4.app.NotificationCompat$Action$WearableExtender:
    java.lang.String EXTRA_WEARABLE_EXTENSIONS -> EXTRA_WEARABLE_EXTENSIONS
    java.lang.String KEY_FLAGS -> KEY_FLAGS
    int FLAG_AVAILABLE_OFFLINE -> FLAG_AVAILABLE_OFFLINE
    int DEFAULT_FLAGS -> DEFAULT_FLAGS
    int mFlags -> mFlags
    android.support.v4.app.NotificationCompat$Action$Builder extend(android.support.v4.app.NotificationCompat$Action$Builder) -> extend
    android.support.v4.app.NotificationCompat$Action$WearableExtender clone() -> clone
    android.support.v4.app.NotificationCompat$Action$WearableExtender setAvailableOffline(boolean) -> setAvailableOffline
    boolean isAvailableOffline() -> isAvailableOffline
    void setFlag(int,boolean) -> setFlag
    java.lang.Object clone() -> clone
android.support.v4.app.NotificationCompat$BigPictureStyle -> android.support.v4.app.NotificationCompat$BigPictureStyle:
    android.graphics.Bitmap mPicture -> mPicture
    android.graphics.Bitmap mBigLargeIcon -> mBigLargeIcon
    boolean mBigLargeIconSet -> mBigLargeIconSet
    android.support.v4.app.NotificationCompat$BigPictureStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    android.support.v4.app.NotificationCompat$BigPictureStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
    android.support.v4.app.NotificationCompat$BigPictureStyle bigPicture(android.graphics.Bitmap) -> bigPicture
    android.support.v4.app.NotificationCompat$BigPictureStyle bigLargeIcon(android.graphics.Bitmap) -> bigLargeIcon
android.support.v4.app.NotificationCompat$BigTextStyle -> android.support.v4.app.NotificationCompat$BigTextStyle:
    java.lang.CharSequence mBigText -> mBigText
    android.support.v4.app.NotificationCompat$BigTextStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    android.support.v4.app.NotificationCompat$BigTextStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
    android.support.v4.app.NotificationCompat$BigTextStyle bigText(java.lang.CharSequence) -> bigText
android.support.v4.app.NotificationCompat$Builder -> android.support.v4.app.NotificationCompat$Builder:
    android.content.Context mContext -> mContext
    java.lang.CharSequence mContentTitle -> mContentTitle
    java.lang.CharSequence mContentText -> mContentText
    android.app.PendingIntent mContentIntent -> mContentIntent
    android.app.PendingIntent mFullScreenIntent -> mFullScreenIntent
    android.widget.RemoteViews mTickerView -> mTickerView
    android.graphics.Bitmap mLargeIcon -> mLargeIcon
    java.lang.CharSequence mContentInfo -> mContentInfo
    int mNumber -> mNumber
    int mPriority -> mPriority
    boolean mUseChronometer -> mUseChronometer
    android.support.v4.app.NotificationCompat$Style mStyle -> mStyle
    java.lang.CharSequence mSubText -> mSubText
    int mProgressMax -> mProgressMax
    int mProgress -> mProgress
    boolean mProgressIndeterminate -> mProgressIndeterminate
    java.lang.String mGroupKey -> mGroupKey
    boolean mGroupSummary -> mGroupSummary
    java.lang.String mSortKey -> mSortKey
    java.util.ArrayList mActions -> mActions
    boolean mLocalOnly -> mLocalOnly
    android.os.Bundle mExtras -> mExtras
    android.app.Notification mNotification -> mNotification
    android.support.v4.app.NotificationCompat$Builder setWhen(long) -> setWhen
    android.support.v4.app.NotificationCompat$Builder setUsesChronometer(boolean) -> setUsesChronometer
    android.support.v4.app.NotificationCompat$Builder setSmallIcon(int) -> setSmallIcon
    android.support.v4.app.NotificationCompat$Builder setSmallIcon(int,int) -> setSmallIcon
    android.support.v4.app.NotificationCompat$Builder setContentTitle(java.lang.CharSequence) -> setContentTitle
    android.support.v4.app.NotificationCompat$Builder setContentText(java.lang.CharSequence) -> setContentText
    android.support.v4.app.NotificationCompat$Builder setSubText(java.lang.CharSequence) -> setSubText
    android.support.v4.app.NotificationCompat$Builder setNumber(int) -> setNumber
    android.support.v4.app.NotificationCompat$Builder setContentInfo(java.lang.CharSequence) -> setContentInfo
    android.support.v4.app.NotificationCompat$Builder setProgress(int,int,boolean) -> setProgress
    android.support.v4.app.NotificationCompat$Builder setContent(android.widget.RemoteViews) -> setContent
    android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent) -> setContentIntent
    android.support.v4.app.NotificationCompat$Builder setDeleteIntent(android.app.PendingIntent) -> setDeleteIntent
    android.support.v4.app.NotificationCompat$Builder setFullScreenIntent(android.app.PendingIntent,boolean) -> setFullScreenIntent
    android.support.v4.app.NotificationCompat$Builder setTicker(java.lang.CharSequence) -> setTicker
    android.support.v4.app.NotificationCompat$Builder setTicker(java.lang.CharSequence,android.widget.RemoteViews) -> setTicker
    android.support.v4.app.NotificationCompat$Builder setLargeIcon(android.graphics.Bitmap) -> setLargeIcon
    android.support.v4.app.NotificationCompat$Builder setSound(android.net.Uri) -> setSound
    android.support.v4.app.NotificationCompat$Builder setSound(android.net.Uri,int) -> setSound
    android.support.v4.app.NotificationCompat$Builder setVibrate(long[]) -> setVibrate
    android.support.v4.app.NotificationCompat$Builder setLights(int,int,int) -> setLights
    android.support.v4.app.NotificationCompat$Builder setOngoing(boolean) -> setOngoing
    android.support.v4.app.NotificationCompat$Builder setOnlyAlertOnce(boolean) -> setOnlyAlertOnce
    android.support.v4.app.NotificationCompat$Builder setAutoCancel(boolean) -> setAutoCancel
    android.support.v4.app.NotificationCompat$Builder setLocalOnly(boolean) -> setLocalOnly
    android.support.v4.app.NotificationCompat$Builder setDefaults(int) -> setDefaults
    void setFlag(int,boolean) -> setFlag
    android.support.v4.app.NotificationCompat$Builder setPriority(int) -> setPriority
    android.support.v4.app.NotificationCompat$Builder setGroup(java.lang.String) -> setGroup
    android.support.v4.app.NotificationCompat$Builder setGroupSummary(boolean) -> setGroupSummary
    android.support.v4.app.NotificationCompat$Builder setSortKey(java.lang.String) -> setSortKey
    android.support.v4.app.NotificationCompat$Builder addExtras(android.os.Bundle) -> addExtras
    android.support.v4.app.NotificationCompat$Builder setExtras(android.os.Bundle) -> setExtras
    android.os.Bundle getExtras() -> getExtras
    android.support.v4.app.NotificationCompat$Builder addAction(int,java.lang.CharSequence,android.app.PendingIntent) -> addAction
    android.support.v4.app.NotificationCompat$Builder addAction(android.support.v4.app.NotificationCompat$Action) -> addAction
    android.support.v4.app.NotificationCompat$Builder setStyle(android.support.v4.app.NotificationCompat$Style) -> setStyle
    android.support.v4.app.NotificationCompat$Builder extend(android.support.v4.app.NotificationCompat$Extender) -> extend
    android.app.Notification getNotification() -> getNotification
    android.app.Notification build() -> build
android.support.v4.app.NotificationCompat$Extender -> android.support.v4.app.NotificationCompat$Extender:
    android.support.v4.app.NotificationCompat$Builder extend(android.support.v4.app.NotificationCompat$Builder) -> extend
android.support.v4.app.NotificationCompat$InboxStyle -> android.support.v4.app.NotificationCompat$InboxStyle:
    java.util.ArrayList mTexts -> mTexts
    android.support.v4.app.NotificationCompat$InboxStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    android.support.v4.app.NotificationCompat$InboxStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
    android.support.v4.app.NotificationCompat$InboxStyle addLine(java.lang.CharSequence) -> addLine
android.support.v4.app.NotificationCompat$NotificationCompatImpl -> android.support.v4.app.NotificationCompat$NotificationCompatImpl:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
    android.os.Bundle getExtras(android.app.Notification) -> getExtras
    int getActionCount(android.app.Notification) -> getActionCount
    android.support.v4.app.NotificationCompat$Action getAction(android.app.Notification,int) -> getAction
    android.support.v4.app.NotificationCompat$Action[] getActionsFromParcelableArrayList(java.util.ArrayList) -> getActionsFromParcelableArrayList
    java.util.ArrayList getParcelableArrayListForActions(android.support.v4.app.NotificationCompat$Action[]) -> getParcelableArrayListForActions
    boolean getLocalOnly(android.app.Notification) -> getLocalOnly
    java.lang.String getGroup(android.app.Notification) -> getGroup
    boolean isGroupSummary(android.app.Notification) -> isGroupSummary
    java.lang.String getSortKey(android.app.Notification) -> getSortKey
android.support.v4.app.NotificationCompat$NotificationCompatImplApi20 -> android.support.v4.app.NotificationCompat$NotificationCompatImplApi20:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
    android.support.v4.app.NotificationCompat$Action getAction(android.app.Notification,int) -> getAction
    android.support.v4.app.NotificationCompat$Action[] getActionsFromParcelableArrayList(java.util.ArrayList) -> getActionsFromParcelableArrayList
    java.util.ArrayList getParcelableArrayListForActions(android.support.v4.app.NotificationCompat$Action[]) -> getParcelableArrayListForActions
    boolean getLocalOnly(android.app.Notification) -> getLocalOnly
    java.lang.String getGroup(android.app.Notification) -> getGroup
    boolean isGroupSummary(android.app.Notification) -> isGroupSummary
    java.lang.String getSortKey(android.app.Notification) -> getSortKey
android.support.v4.app.NotificationCompat$NotificationCompatImplBase -> android.support.v4.app.NotificationCompat$NotificationCompatImplBase:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
    android.os.Bundle getExtras(android.app.Notification) -> getExtras
    int getActionCount(android.app.Notification) -> getActionCount
    android.support.v4.app.NotificationCompat$Action getAction(android.app.Notification,int) -> getAction
    android.support.v4.app.NotificationCompat$Action[] getActionsFromParcelableArrayList(java.util.ArrayList) -> getActionsFromParcelableArrayList
    java.util.ArrayList getParcelableArrayListForActions(android.support.v4.app.NotificationCompat$Action[]) -> getParcelableArrayListForActions
    boolean getLocalOnly(android.app.Notification) -> getLocalOnly
    java.lang.String getGroup(android.app.Notification) -> getGroup
    boolean isGroupSummary(android.app.Notification) -> isGroupSummary
    java.lang.String getSortKey(android.app.Notification) -> getSortKey
android.support.v4.app.NotificationCompat$NotificationCompatImplGingerbread -> android.support.v4.app.NotificationCompat$NotificationCompatImplGingerbread:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$NotificationCompatImplHoneycomb -> android.support.v4.app.NotificationCompat$NotificationCompatImplHoneycomb:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$NotificationCompatImplIceCreamSandwich -> android.support.v4.app.NotificationCompat$NotificationCompatImplIceCreamSandwich:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$NotificationCompatImplJellybean -> android.support.v4.app.NotificationCompat$NotificationCompatImplJellybean:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
    android.os.Bundle getExtras(android.app.Notification) -> getExtras
    int getActionCount(android.app.Notification) -> getActionCount
    android.support.v4.app.NotificationCompat$Action getAction(android.app.Notification,int) -> getAction
    android.support.v4.app.NotificationCompat$Action[] getActionsFromParcelableArrayList(java.util.ArrayList) -> getActionsFromParcelableArrayList
    java.util.ArrayList getParcelableArrayListForActions(android.support.v4.app.NotificationCompat$Action[]) -> getParcelableArrayListForActions
    boolean getLocalOnly(android.app.Notification) -> getLocalOnly
    java.lang.String getGroup(android.app.Notification) -> getGroup
    boolean isGroupSummary(android.app.Notification) -> isGroupSummary
    java.lang.String getSortKey(android.app.Notification) -> getSortKey
android.support.v4.app.NotificationCompat$NotificationCompatImplKitKat -> android.support.v4.app.NotificationCompat$NotificationCompatImplKitKat:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
    android.os.Bundle getExtras(android.app.Notification) -> getExtras
    int getActionCount(android.app.Notification) -> getActionCount
    android.support.v4.app.NotificationCompat$Action getAction(android.app.Notification,int) -> getAction
    boolean getLocalOnly(android.app.Notification) -> getLocalOnly
    java.lang.String getGroup(android.app.Notification) -> getGroup
    boolean isGroupSummary(android.app.Notification) -> isGroupSummary
    java.lang.String getSortKey(android.app.Notification) -> getSortKey
android.support.v4.app.NotificationCompat$Style -> android.support.v4.app.NotificationCompat$Style:
    android.support.v4.app.NotificationCompat$Builder mBuilder -> mBuilder
    java.lang.CharSequence mBigContentTitle -> mBigContentTitle
    java.lang.CharSequence mSummaryText -> mSummaryText
    boolean mSummaryTextSet -> mSummaryTextSet
    void setBuilder(android.support.v4.app.NotificationCompat$Builder) -> setBuilder
    android.app.Notification build() -> build
android.support.v4.app.NotificationCompat$WearableExtender -> android.support.v4.app.NotificationCompat$WearableExtender:
    int UNSET_ACTION_INDEX -> UNSET_ACTION_INDEX
    int SIZE_DEFAULT -> SIZE_DEFAULT
    int SIZE_XSMALL -> SIZE_XSMALL
    int SIZE_SMALL -> SIZE_SMALL
    int SIZE_MEDIUM -> SIZE_MEDIUM
    int SIZE_LARGE -> SIZE_LARGE
    int SIZE_FULL_SCREEN -> SIZE_FULL_SCREEN
    java.lang.String EXTRA_WEARABLE_EXTENSIONS -> EXTRA_WEARABLE_EXTENSIONS
    java.lang.String KEY_ACTIONS -> KEY_ACTIONS
    java.lang.String KEY_FLAGS -> KEY_FLAGS
    java.lang.String KEY_DISPLAY_INTENT -> KEY_DISPLAY_INTENT
    java.lang.String KEY_PAGES -> KEY_PAGES
    java.lang.String KEY_BACKGROUND -> KEY_BACKGROUND
    java.lang.String KEY_CONTENT_ICON -> KEY_CONTENT_ICON
    java.lang.String KEY_CONTENT_ICON_GRAVITY -> KEY_CONTENT_ICON_GRAVITY
    java.lang.String KEY_CONTENT_ACTION_INDEX -> KEY_CONTENT_ACTION_INDEX
    java.lang.String KEY_CUSTOM_SIZE_PRESET -> KEY_CUSTOM_SIZE_PRESET
    java.lang.String KEY_CUSTOM_CONTENT_HEIGHT -> KEY_CUSTOM_CONTENT_HEIGHT
    java.lang.String KEY_GRAVITY -> KEY_GRAVITY
    int FLAG_CONTENT_INTENT_AVAILABLE_OFFLINE -> FLAG_CONTENT_INTENT_AVAILABLE_OFFLINE
    int FLAG_HINT_HIDE_ICON -> FLAG_HINT_HIDE_ICON
    int FLAG_HINT_SHOW_BACKGROUND_ONLY -> FLAG_HINT_SHOW_BACKGROUND_ONLY
    int FLAG_START_SCROLL_BOTTOM -> FLAG_START_SCROLL_BOTTOM
    int DEFAULT_FLAGS -> DEFAULT_FLAGS
    int DEFAULT_CONTENT_ICON_GRAVITY -> DEFAULT_CONTENT_ICON_GRAVITY
    int DEFAULT_GRAVITY -> DEFAULT_GRAVITY
    java.util.ArrayList mActions -> mActions
    int mFlags -> mFlags
    android.app.PendingIntent mDisplayIntent -> mDisplayIntent
    java.util.ArrayList mPages -> mPages
    android.graphics.Bitmap mBackground -> mBackground
    int mContentIcon -> mContentIcon
    int mContentIconGravity -> mContentIconGravity
    int mContentActionIndex -> mContentActionIndex
    int mCustomSizePreset -> mCustomSizePreset
    int mCustomContentHeight -> mCustomContentHeight
    int mGravity -> mGravity
    android.support.v4.app.NotificationCompat$Builder extend(android.support.v4.app.NotificationCompat$Builder) -> extend
    android.support.v4.app.NotificationCompat$WearableExtender clone() -> clone
    android.support.v4.app.NotificationCompat$WearableExtender addAction(android.support.v4.app.NotificationCompat$Action) -> addAction
    android.support.v4.app.NotificationCompat$WearableExtender addActions(java.util.List) -> addActions
    android.support.v4.app.NotificationCompat$WearableExtender clearActions() -> clearActions
    java.util.List getActions() -> getActions
    android.support.v4.app.NotificationCompat$WearableExtender setDisplayIntent(android.app.PendingIntent) -> setDisplayIntent
    android.app.PendingIntent getDisplayIntent() -> getDisplayIntent
    android.support.v4.app.NotificationCompat$WearableExtender addPage(android.app.Notification) -> addPage
    android.support.v4.app.NotificationCompat$WearableExtender addPages(java.util.List) -> addPages
    android.support.v4.app.NotificationCompat$WearableExtender clearPages() -> clearPages
    java.util.List getPages() -> getPages
    android.support.v4.app.NotificationCompat$WearableExtender setBackground(android.graphics.Bitmap) -> setBackground
    android.graphics.Bitmap getBackground() -> getBackground
    android.support.v4.app.NotificationCompat$WearableExtender setContentIcon(int) -> setContentIcon
    int getContentIcon() -> getContentIcon
    android.support.v4.app.NotificationCompat$WearableExtender setContentIconGravity(int) -> setContentIconGravity
    int getContentIconGravity() -> getContentIconGravity
    android.support.v4.app.NotificationCompat$WearableExtender setContentAction(int) -> setContentAction
    int getContentAction() -> getContentAction
    android.support.v4.app.NotificationCompat$WearableExtender setGravity(int) -> setGravity
    int getGravity() -> getGravity
    android.support.v4.app.NotificationCompat$WearableExtender setCustomSizePreset(int) -> setCustomSizePreset
    int getCustomSizePreset() -> getCustomSizePreset
    android.support.v4.app.NotificationCompat$WearableExtender setCustomContentHeight(int) -> setCustomContentHeight
    int getCustomContentHeight() -> getCustomContentHeight
    android.support.v4.app.NotificationCompat$WearableExtender setStartScrollBottom(boolean) -> setStartScrollBottom
    boolean getStartScrollBottom() -> getStartScrollBottom
    android.support.v4.app.NotificationCompat$WearableExtender setContentIntentAvailableOffline(boolean) -> setContentIntentAvailableOffline
    boolean getContentIntentAvailableOffline() -> getContentIntentAvailableOffline
    android.support.v4.app.NotificationCompat$WearableExtender setHintHideIcon(boolean) -> setHintHideIcon
    boolean getHintHideIcon() -> getHintHideIcon
    android.support.v4.app.NotificationCompat$WearableExtender setHintShowBackgroundOnly(boolean) -> setHintShowBackgroundOnly
    boolean getHintShowBackgroundOnly() -> getHintShowBackgroundOnly
    void setFlag(int,boolean) -> setFlag
    java.lang.Object clone() -> clone
android.support.v4.app.NotificationCompatApi20 -> android.support.v4.app.NotificationCompatApi20:
    android.support.v4.app.NotificationCompatBase$Action getAction(android.app.Notification,int,android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> getAction
    android.support.v4.app.NotificationCompatBase$Action getActionCompatFromAction(android.app.Notification$Action,android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> getActionCompatFromAction
    android.app.Notification$Action getActionFromActionCompat(android.support.v4.app.NotificationCompatBase$Action) -> getActionFromActionCompat
    android.support.v4.app.NotificationCompatBase$Action[] getActionsFromParcelableArrayList(java.util.ArrayList,android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> getActionsFromParcelableArrayList
    java.util.ArrayList getParcelableArrayListForActions(android.support.v4.app.NotificationCompatBase$Action[]) -> getParcelableArrayListForActions
    boolean getLocalOnly(android.app.Notification) -> getLocalOnly
    java.lang.String getGroup(android.app.Notification) -> getGroup
    boolean isGroupSummary(android.app.Notification) -> isGroupSummary
    java.lang.String getSortKey(android.app.Notification) -> getSortKey
android.support.v4.app.NotificationCompatApi20$Builder -> android.support.v4.app.NotificationCompatApi20$Builder:
    android.app.Notification$Builder b -> b
    void addAction(android.support.v4.app.NotificationCompatBase$Action) -> addAction
    android.app.Notification$Builder getBuilder() -> getBuilder
    android.app.Notification build() -> build
android.support.v4.app.NotificationCompatBase -> android.support.v4.app.NotificationCompatBase:
android.support.v4.app.NotificationCompatBase$Action -> android.support.v4.app.NotificationCompatBase$Action:
    int getIcon() -> getIcon
    java.lang.CharSequence getTitle() -> getTitle
    android.app.PendingIntent getActionIntent() -> getActionIntent
    android.os.Bundle getExtras() -> getExtras
    android.support.v4.app.RemoteInputCompatBase$RemoteInput[] getRemoteInputs() -> getRemoteInputs
android.support.v4.app.NotificationCompatBase$Action$Factory -> android.support.v4.app.NotificationCompatBase$Action$Factory:
    android.support.v4.app.NotificationCompatBase$Action build(int,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle,android.support.v4.app.RemoteInputCompatBase$RemoteInput[]) -> build
    android.support.v4.app.NotificationCompatBase$Action[] newArray(int) -> newArray
android.support.v4.app.NotificationCompatExtras -> android.support.v4.app.NotificationCompatExtras:
    java.lang.String EXTRA_LOCAL_ONLY -> EXTRA_LOCAL_ONLY
    java.lang.String EXTRA_GROUP_KEY -> EXTRA_GROUP_KEY
    java.lang.String EXTRA_GROUP_SUMMARY -> EXTRA_GROUP_SUMMARY
    java.lang.String EXTRA_SORT_KEY -> EXTRA_SORT_KEY
    java.lang.String EXTRA_ACTION_EXTRAS -> EXTRA_ACTION_EXTRAS
    java.lang.String EXTRA_REMOTE_INPUTS -> EXTRA_REMOTE_INPUTS
android.support.v4.app.NotificationCompatGingerbread -> android.support.v4.app.NotificationCompatGingerbread:
    android.app.Notification add(android.app.Notification,android.content.Context,java.lang.CharSequence,java.lang.CharSequence,android.app.PendingIntent,android.app.PendingIntent) -> add
android.support.v4.app.NotificationCompatHoneycomb -> android.support.v4.app.NotificationCompatHoneycomb:
    android.app.Notification add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap) -> add
android.support.v4.app.NotificationCompatIceCreamSandwich -> android.support.v4.app.NotificationCompatIceCreamSandwich:
    android.app.Notification add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap,int,int,boolean) -> add
android.support.v4.app.NotificationCompatJellybean -> android.support.v4.app.NotificationCompatJellybean:
    java.lang.String TAG -> TAG
    java.lang.String EXTRA_LOCAL_ONLY -> EXTRA_LOCAL_ONLY
    java.lang.String EXTRA_ACTION_EXTRAS -> EXTRA_ACTION_EXTRAS
    java.lang.String EXTRA_REMOTE_INPUTS -> EXTRA_REMOTE_INPUTS
    java.lang.String EXTRA_GROUP_KEY -> EXTRA_GROUP_KEY
    java.lang.String EXTRA_GROUP_SUMMARY -> EXTRA_GROUP_SUMMARY
    java.lang.String EXTRA_SORT_KEY -> EXTRA_SORT_KEY
    java.lang.String EXTRA_USE_SIDE_CHANNEL -> EXTRA_USE_SIDE_CHANNEL
    java.lang.String KEY_ICON -> KEY_ICON
    java.lang.String KEY_TITLE -> KEY_TITLE
    java.lang.String KEY_ACTION_INTENT -> KEY_ACTION_INTENT
    java.lang.String KEY_EXTRAS -> KEY_EXTRAS
    java.lang.String KEY_REMOTE_INPUTS -> KEY_REMOTE_INPUTS
    java.lang.Object sExtrasLock -> sExtrasLock
    java.lang.reflect.Field sExtrasField -> sExtrasField
    boolean sExtrasFieldAccessFailed -> sExtrasFieldAccessFailed
    java.lang.Object sActionsLock -> sActionsLock
    java.lang.Class sActionClass -> sActionClass
    java.lang.reflect.Field sActionsField -> sActionsField
    java.lang.reflect.Field sActionIconField -> sActionIconField
    java.lang.reflect.Field sActionTitleField -> sActionTitleField
    java.lang.reflect.Field sActionIntentField -> sActionIntentField
    boolean sActionsAccessFailed -> sActionsAccessFailed
    void addBigTextStyle(android.support.v4.app.NotificationBuilderWithBuilderAccessor,java.lang.CharSequence,boolean,java.lang.CharSequence,java.lang.CharSequence) -> addBigTextStyle
    void addBigPictureStyle(android.support.v4.app.NotificationBuilderWithBuilderAccessor,java.lang.CharSequence,boolean,java.lang.CharSequence,android.graphics.Bitmap,android.graphics.Bitmap,boolean) -> addBigPictureStyle
    void addInboxStyle(android.support.v4.app.NotificationBuilderWithBuilderAccessor,java.lang.CharSequence,boolean,java.lang.CharSequence,java.util.ArrayList) -> addInboxStyle
    android.util.SparseArray buildActionExtrasMap(java.util.List) -> buildActionExtrasMap
    android.os.Bundle getExtras(android.app.Notification) -> getExtras
    android.support.v4.app.NotificationCompatBase$Action readAction(android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory,int,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle) -> readAction
    android.os.Bundle writeActionAndGetExtras(android.app.Notification$Builder,android.support.v4.app.NotificationCompatBase$Action) -> writeActionAndGetExtras
    int getActionCount(android.app.Notification) -> getActionCount
    android.support.v4.app.NotificationCompatBase$Action getAction(android.app.Notification,int,android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> getAction
    java.lang.Object[] getActionObjectsLocked(android.app.Notification) -> getActionObjectsLocked
    boolean ensureActionReflectionReadyLocked() -> ensureActionReflectionReadyLocked
    android.support.v4.app.NotificationCompatBase$Action[] getActionsFromParcelableArrayList(java.util.ArrayList,android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> getActionsFromParcelableArrayList
    android.support.v4.app.NotificationCompatBase$Action getActionFromBundle(android.os.Bundle,android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> getActionFromBundle
    java.util.ArrayList getParcelableArrayListForActions(android.support.v4.app.NotificationCompatBase$Action[]) -> getParcelableArrayListForActions
    android.os.Bundle getBundleForAction(android.support.v4.app.NotificationCompatBase$Action) -> getBundleForAction
    boolean getLocalOnly(android.app.Notification) -> getLocalOnly
    java.lang.String getGroup(android.app.Notification) -> getGroup
    boolean isGroupSummary(android.app.Notification) -> isGroupSummary
    java.lang.String getSortKey(android.app.Notification) -> getSortKey
android.support.v4.app.NotificationCompatJellybean$Builder -> android.support.v4.app.NotificationCompatJellybean$Builder:
    android.app.Notification$Builder b -> b
    android.os.Bundle mExtras -> mExtras
    java.util.List mActionExtrasList -> mActionExtrasList
    void addAction(android.support.v4.app.NotificationCompatBase$Action) -> addAction
    android.app.Notification$Builder getBuilder() -> getBuilder
    android.app.Notification build() -> build
android.support.v4.app.NotificationCompatKitKat -> android.support.v4.app.NotificationCompatKitKat:
    android.os.Bundle getExtras(android.app.Notification) -> getExtras
    int getActionCount(android.app.Notification) -> getActionCount
    android.support.v4.app.NotificationCompatBase$Action getAction(android.app.Notification,int,android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> getAction
    boolean getLocalOnly(android.app.Notification) -> getLocalOnly
    java.lang.String getGroup(android.app.Notification) -> getGroup
    boolean isGroupSummary(android.app.Notification) -> isGroupSummary
    java.lang.String getSortKey(android.app.Notification) -> getSortKey
android.support.v4.app.NotificationCompatKitKat$Builder -> android.support.v4.app.NotificationCompatKitKat$Builder:
    android.app.Notification$Builder b -> b
    android.os.Bundle mExtras -> mExtras
    java.util.List mActionExtrasList -> mActionExtrasList
    void addAction(android.support.v4.app.NotificationCompatBase$Action) -> addAction
    android.app.Notification$Builder getBuilder() -> getBuilder
    android.app.Notification build() -> build
android.support.v4.app.NotificationCompatSideChannelService -> android.support.v4.app.NotificationCompatSideChannelService:
    int BUILD_VERSION_CODE_KITKAT_WATCH -> BUILD_VERSION_CODE_KITKAT_WATCH
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void notify(java.lang.String,int,java.lang.String,android.app.Notification) -> notify
    void cancel(java.lang.String,int,java.lang.String) -> cancel
    void cancelAll(java.lang.String) -> cancelAll
    void checkPermission(int,java.lang.String) -> checkPermission
    void access$100(android.support.v4.app.NotificationCompatSideChannelService,int,java.lang.String) -> access$100
android.support.v4.app.NotificationCompatSideChannelService$1 -> android.support.v4.app.NotificationCompatSideChannelService$1:
android.support.v4.app.NotificationCompatSideChannelService$NotificationSideChannelStub -> android.support.v4.app.NotificationCompatSideChannelService$NotificationSideChannelStub:
    android.support.v4.app.NotificationCompatSideChannelService this$0 -> this$0
    void notify(java.lang.String,int,java.lang.String,android.app.Notification) -> notify
    void cancel(java.lang.String,int,java.lang.String) -> cancel
    void cancelAll(java.lang.String) -> cancelAll
android.support.v4.app.NotificationManagerCompat -> android.support.v4.app.NotificationManagerCompat:
    java.lang.String TAG -> TAG
    java.lang.String EXTRA_USE_SIDE_CHANNEL -> EXTRA_USE_SIDE_CHANNEL
    java.lang.String ACTION_BIND_SIDE_CHANNEL -> ACTION_BIND_SIDE_CHANNEL
    int SIDE_CHANNEL_RETRY_BASE_INTERVAL_MS -> SIDE_CHANNEL_RETRY_BASE_INTERVAL_MS
    int SIDE_CHANNEL_RETRY_MAX_COUNT -> SIDE_CHANNEL_RETRY_MAX_COUNT
    java.lang.String SETTING_ENABLED_NOTIFICATION_LISTENERS -> SETTING_ENABLED_NOTIFICATION_LISTENERS
    int SIDE_CHANNEL_BIND_FLAGS -> SIDE_CHANNEL_BIND_FLAGS
    java.lang.Object sEnabledNotificationListenersLock -> sEnabledNotificationListenersLock
    java.lang.String sEnabledNotificationListeners -> sEnabledNotificationListeners
    java.util.Set sEnabledNotificationListenerPackages -> sEnabledNotificationListenerPackages
    android.content.Context mContext -> mContext
    android.app.NotificationManager mNotificationManager -> mNotificationManager
    java.lang.Object sLock -> sLock
    android.support.v4.app.NotificationManagerCompat$SideChannelManager sSideChannelManager -> sSideChannelManager
    android.support.v4.app.NotificationManagerCompat$Impl IMPL -> IMPL
    android.support.v4.app.NotificationManagerCompat from(android.content.Context) -> from
    void cancel(int) -> cancel
    void cancel(java.lang.String,int) -> cancel
    void cancelAll() -> cancelAll
    void notify(int,android.app.Notification) -> notify
    void notify(java.lang.String,int,android.app.Notification) -> notify
    java.util.Set getEnabledListenerPackages(android.content.Context) -> getEnabledListenerPackages
    boolean useSideChannelForNotification(android.app.Notification) -> useSideChannelForNotification
    void pushSideChannelQueue(android.support.v4.app.NotificationManagerCompat$Task) -> pushSideChannelQueue
    int access$000() -> access$000
android.support.v4.app.NotificationManagerCompat$CancelTask -> android.support.v4.app.NotificationManagerCompat$CancelTask:
    java.lang.String packageName -> packageName
    int id -> id
    java.lang.String tag -> tag
    boolean all -> all
    void send(android.support.v4.app.INotificationSideChannel) -> send
    java.lang.String toString() -> toString
android.support.v4.app.NotificationManagerCompat$Impl -> android.support.v4.app.NotificationManagerCompat$Impl:
    void cancelNotification(android.app.NotificationManager,java.lang.String,int) -> cancelNotification
    void postNotification(android.app.NotificationManager,java.lang.String,int,android.app.Notification) -> postNotification
    int getSideChannelBindFlags() -> getSideChannelBindFlags
android.support.v4.app.NotificationManagerCompat$ImplBase -> android.support.v4.app.NotificationManagerCompat$ImplBase:
    void cancelNotification(android.app.NotificationManager,java.lang.String,int) -> cancelNotification
    void postNotification(android.app.NotificationManager,java.lang.String,int,android.app.Notification) -> postNotification
    int getSideChannelBindFlags() -> getSideChannelBindFlags
android.support.v4.app.NotificationManagerCompat$ImplEclair -> android.support.v4.app.NotificationManagerCompat$ImplEclair:
    void cancelNotification(android.app.NotificationManager,java.lang.String,int) -> cancelNotification
    void postNotification(android.app.NotificationManager,java.lang.String,int,android.app.Notification) -> postNotification
android.support.v4.app.NotificationManagerCompat$ImplIceCreamSandwich -> android.support.v4.app.NotificationManagerCompat$ImplIceCreamSandwich:
    int getSideChannelBindFlags() -> getSideChannelBindFlags
android.support.v4.app.NotificationManagerCompat$NotifyTask -> android.support.v4.app.NotificationManagerCompat$NotifyTask:
    java.lang.String packageName -> packageName
    int id -> id
    java.lang.String tag -> tag
    android.app.Notification notif -> notif
    void send(android.support.v4.app.INotificationSideChannel) -> send
    java.lang.String toString() -> toString
android.support.v4.app.NotificationManagerCompat$ServiceConnectedEvent -> android.support.v4.app.NotificationManagerCompat$ServiceConnectedEvent:
    android.content.ComponentName componentName -> componentName
    android.os.IBinder iBinder -> iBinder
android.support.v4.app.NotificationManagerCompat$SideChannelManager -> android.support.v4.app.NotificationManagerCompat$SideChannelManager:
    int MSG_QUEUE_TASK -> MSG_QUEUE_TASK
    int MSG_SERVICE_CONNECTED -> MSG_SERVICE_CONNECTED
    int MSG_SERVICE_DISCONNECTED -> MSG_SERVICE_DISCONNECTED
    int MSG_RETRY_LISTENER_QUEUE -> MSG_RETRY_LISTENER_QUEUE
    java.lang.String KEY_BINDER -> KEY_BINDER
    android.content.Context mContext -> mContext
    android.os.HandlerThread mHandlerThread -> mHandlerThread
    android.os.Handler mHandler -> mHandler
    java.util.Map mRecordMap -> mRecordMap
    java.util.Set mCachedEnabledPackages -> mCachedEnabledPackages
    void queueTask(android.support.v4.app.NotificationManagerCompat$Task) -> queueTask
    boolean handleMessage(android.os.Message) -> handleMessage
    void handleQueueTask(android.support.v4.app.NotificationManagerCompat$Task) -> handleQueueTask
    void handleServiceConnected(android.content.ComponentName,android.os.IBinder) -> handleServiceConnected
    void handleServiceDisconnected(android.content.ComponentName) -> handleServiceDisconnected
    void handleRetryListenerQueue(android.content.ComponentName) -> handleRetryListenerQueue
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    void updateListenerMap() -> updateListenerMap
    boolean ensureServiceBound(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord) -> ensureServiceBound
    void ensureServiceUnbound(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord) -> ensureServiceUnbound
    void scheduleListenerRetry(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord) -> scheduleListenerRetry
    void processListenerQueue(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord) -> processListenerQueue
android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord -> android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord:
    android.content.ComponentName componentName -> componentName
    boolean bound -> bound
    android.support.v4.app.INotificationSideChannel service -> service
    java.util.LinkedList taskQueue -> taskQueue
    int retryCount -> retryCount
android.support.v4.app.NotificationManagerCompat$Task -> android.support.v4.app.NotificationManagerCompat$Task:
    void send(android.support.v4.app.INotificationSideChannel) -> send
android.support.v4.app.NotificationManagerCompatEclair -> android.support.v4.app.NotificationManagerCompatEclair:
    void cancelNotification(android.app.NotificationManager,java.lang.String,int) -> cancelNotification
    void postNotification(android.app.NotificationManager,java.lang.String,int,android.app.Notification) -> postNotification
android.support.v4.app.NotificationManagerCompatIceCreamSandwich -> android.support.v4.app.NotificationManagerCompatIceCreamSandwich:
    int SIDE_CHANNEL_BIND_FLAGS -> SIDE_CHANNEL_BIND_FLAGS
android.support.v4.app.RemoteInput -> android.support.v4.app.RemoteInput:
    java.lang.String TAG -> TAG
    java.lang.String RESULTS_CLIP_LABEL -> RESULTS_CLIP_LABEL
    java.lang.String EXTRA_RESULTS_DATA -> EXTRA_RESULTS_DATA
    java.lang.String mResultKey -> mResultKey
    java.lang.CharSequence mLabel -> mLabel
    java.lang.CharSequence[] mChoices -> mChoices
    boolean mAllowFreeFormInput -> mAllowFreeFormInput
    android.os.Bundle mExtras -> mExtras
    android.support.v4.app.RemoteInput$Impl IMPL -> IMPL
    android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory FACTORY -> FACTORY
    java.lang.String getResultKey() -> getResultKey
    java.lang.CharSequence getLabel() -> getLabel
    java.lang.CharSequence[] getChoices() -> getChoices
    boolean getAllowFreeFormInput() -> getAllowFreeFormInput
    android.os.Bundle getExtras() -> getExtras
    android.os.Bundle getResultsFromIntent(android.content.Intent) -> getResultsFromIntent
    void addResultsToIntent(android.support.v4.app.RemoteInput[],android.content.Intent,android.os.Bundle) -> addResultsToIntent
android.support.v4.app.RemoteInput$1 -> android.support.v4.app.RemoteInput$1:
    android.support.v4.app.RemoteInput build(java.lang.String,java.lang.CharSequence,java.lang.CharSequence[],boolean,android.os.Bundle) -> build
    android.support.v4.app.RemoteInput[] newArray(int) -> newArray
    android.support.v4.app.RemoteInputCompatBase$RemoteInput[] newArray(int) -> newArray
    android.support.v4.app.RemoteInputCompatBase$RemoteInput build(java.lang.String,java.lang.CharSequence,java.lang.CharSequence[],boolean,android.os.Bundle) -> build
android.support.v4.app.RemoteInput$Builder -> android.support.v4.app.RemoteInput$Builder:
    java.lang.String mResultKey -> mResultKey
    java.lang.CharSequence mLabel -> mLabel
    java.lang.CharSequence[] mChoices -> mChoices
    boolean mAllowFreeFormInput -> mAllowFreeFormInput
    android.os.Bundle mExtras -> mExtras
    android.support.v4.app.RemoteInput$Builder setLabel(java.lang.CharSequence) -> setLabel
    android.support.v4.app.RemoteInput$Builder setChoices(java.lang.CharSequence[]) -> setChoices
    android.support.v4.app.RemoteInput$Builder setAllowFreeFormInput(boolean) -> setAllowFreeFormInput
    android.support.v4.app.RemoteInput$Builder addExtras(android.os.Bundle) -> addExtras
    android.os.Bundle getExtras() -> getExtras
    android.support.v4.app.RemoteInput build() -> build
android.support.v4.app.RemoteInput$Impl -> android.support.v4.app.RemoteInput$Impl:
    android.os.Bundle getResultsFromIntent(android.content.Intent) -> getResultsFromIntent
    void addResultsToIntent(android.support.v4.app.RemoteInput[],android.content.Intent,android.os.Bundle) -> addResultsToIntent
android.support.v4.app.RemoteInput$ImplApi20 -> android.support.v4.app.RemoteInput$ImplApi20:
    android.os.Bundle getResultsFromIntent(android.content.Intent) -> getResultsFromIntent
    void addResultsToIntent(android.support.v4.app.RemoteInput[],android.content.Intent,android.os.Bundle) -> addResultsToIntent
android.support.v4.app.RemoteInput$ImplBase -> android.support.v4.app.RemoteInput$ImplBase:
    android.os.Bundle getResultsFromIntent(android.content.Intent) -> getResultsFromIntent
    void addResultsToIntent(android.support.v4.app.RemoteInput[],android.content.Intent,android.os.Bundle) -> addResultsToIntent
android.support.v4.app.RemoteInput$ImplJellybean -> android.support.v4.app.RemoteInput$ImplJellybean:
    android.os.Bundle getResultsFromIntent(android.content.Intent) -> getResultsFromIntent
    void addResultsToIntent(android.support.v4.app.RemoteInput[],android.content.Intent,android.os.Bundle) -> addResultsToIntent
android.support.v4.app.RemoteInputCompatApi20 -> android.support.v4.app.RemoteInputCompatApi20:
    android.support.v4.app.RemoteInputCompatBase$RemoteInput[] toCompat(android.app.RemoteInput[],android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> toCompat
    android.app.RemoteInput[] fromCompat(android.support.v4.app.RemoteInputCompatBase$RemoteInput[]) -> fromCompat
    android.os.Bundle getResultsFromIntent(android.content.Intent) -> getResultsFromIntent
    void addResultsToIntent(android.support.v4.app.RemoteInputCompatBase$RemoteInput[],android.content.Intent,android.os.Bundle) -> addResultsToIntent
android.support.v4.app.RemoteInputCompatBase -> android.support.v4.app.RemoteInputCompatBase:
android.support.v4.app.RemoteInputCompatBase$RemoteInput -> android.support.v4.app.RemoteInputCompatBase$RemoteInput:
    java.lang.String getResultKey() -> getResultKey
    java.lang.CharSequence getLabel() -> getLabel
    java.lang.CharSequence[] getChoices() -> getChoices
    boolean getAllowFreeFormInput() -> getAllowFreeFormInput
    android.os.Bundle getExtras() -> getExtras
android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory -> android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory:
    android.support.v4.app.RemoteInputCompatBase$RemoteInput build(java.lang.String,java.lang.CharSequence,java.lang.CharSequence[],boolean,android.os.Bundle) -> build
    android.support.v4.app.RemoteInputCompatBase$RemoteInput[] newArray(int) -> newArray
android.support.v4.app.RemoteInputCompatJellybean -> android.support.v4.app.RemoteInputCompatJellybean:
    java.lang.String RESULTS_CLIP_LABEL -> RESULTS_CLIP_LABEL
    java.lang.String EXTRA_RESULTS_DATA -> EXTRA_RESULTS_DATA
    java.lang.String KEY_RESULT_KEY -> KEY_RESULT_KEY
    java.lang.String KEY_LABEL -> KEY_LABEL
    java.lang.String KEY_CHOICES -> KEY_CHOICES
    java.lang.String KEY_ALLOW_FREE_FORM_INPUT -> KEY_ALLOW_FREE_FORM_INPUT
    java.lang.String KEY_EXTRAS -> KEY_EXTRAS
    android.support.v4.app.RemoteInputCompatBase$RemoteInput fromBundle(android.os.Bundle,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> fromBundle
    android.os.Bundle toBundle(android.support.v4.app.RemoteInputCompatBase$RemoteInput) -> toBundle
    android.support.v4.app.RemoteInputCompatBase$RemoteInput[] fromBundleArray(android.os.Bundle[],android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> fromBundleArray
    android.os.Bundle[] toBundleArray(android.support.v4.app.RemoteInputCompatBase$RemoteInput[]) -> toBundleArray
    android.os.Bundle getResultsFromIntent(android.content.Intent) -> getResultsFromIntent
    void addResultsToIntent(android.support.v4.app.RemoteInputCompatBase$RemoteInput[],android.content.Intent,android.os.Bundle) -> addResultsToIntent
android.support.v4.app.ServiceCompat -> android.support.v4.app.ServiceCompat:
    int START_STICKY -> START_STICKY
android.support.v4.app.ShareCompat -> android.support.v4.app.ShareCompat:
    java.lang.String EXTRA_CALLING_PACKAGE -> EXTRA_CALLING_PACKAGE
    java.lang.String EXTRA_CALLING_ACTIVITY -> EXTRA_CALLING_ACTIVITY
    android.support.v4.app.ShareCompat$ShareCompatImpl IMPL -> IMPL
    java.lang.String getCallingPackage(android.app.Activity) -> getCallingPackage
    android.content.ComponentName getCallingActivity(android.app.Activity) -> getCallingActivity
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    void configureMenuItem(android.view.Menu,int,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    android.support.v4.app.ShareCompat$ShareCompatImpl access$000() -> access$000
android.support.v4.app.ShareCompat$IntentBuilder -> android.support.v4.app.ShareCompat$IntentBuilder:
    android.app.Activity mActivity -> mActivity
    android.content.Intent mIntent -> mIntent
    java.lang.CharSequence mChooserTitle -> mChooserTitle
    java.util.ArrayList mToAddresses -> mToAddresses
    java.util.ArrayList mCcAddresses -> mCcAddresses
    java.util.ArrayList mBccAddresses -> mBccAddresses
    java.util.ArrayList mStreams -> mStreams
    android.support.v4.app.ShareCompat$IntentBuilder from(android.app.Activity) -> from
    android.content.Intent getIntent() -> getIntent
    android.app.Activity getActivity() -> getActivity
    void combineArrayExtra(java.lang.String,java.util.ArrayList) -> combineArrayExtra
    void combineArrayExtra(java.lang.String,java.lang.String[]) -> combineArrayExtra
    android.content.Intent createChooserIntent() -> createChooserIntent
    void startChooser() -> startChooser
    android.support.v4.app.ShareCompat$IntentBuilder setChooserTitle(java.lang.CharSequence) -> setChooserTitle
    android.support.v4.app.ShareCompat$IntentBuilder setChooserTitle(int) -> setChooserTitle
    android.support.v4.app.ShareCompat$IntentBuilder setType(java.lang.String) -> setType
    android.support.v4.app.ShareCompat$IntentBuilder setText(java.lang.CharSequence) -> setText
    android.support.v4.app.ShareCompat$IntentBuilder setHtmlText(java.lang.String) -> setHtmlText
    android.support.v4.app.ShareCompat$IntentBuilder setStream(android.net.Uri) -> setStream
    android.support.v4.app.ShareCompat$IntentBuilder addStream(android.net.Uri) -> addStream
    android.support.v4.app.ShareCompat$IntentBuilder setEmailTo(java.lang.String[]) -> setEmailTo
    android.support.v4.app.ShareCompat$IntentBuilder addEmailTo(java.lang.String) -> addEmailTo
    android.support.v4.app.ShareCompat$IntentBuilder addEmailTo(java.lang.String[]) -> addEmailTo
    android.support.v4.app.ShareCompat$IntentBuilder setEmailCc(java.lang.String[]) -> setEmailCc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailCc(java.lang.String) -> addEmailCc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailCc(java.lang.String[]) -> addEmailCc
    android.support.v4.app.ShareCompat$IntentBuilder setEmailBcc(java.lang.String[]) -> setEmailBcc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailBcc(java.lang.String) -> addEmailBcc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailBcc(java.lang.String[]) -> addEmailBcc
    android.support.v4.app.ShareCompat$IntentBuilder setSubject(java.lang.String) -> setSubject
android.support.v4.app.ShareCompat$IntentReader -> android.support.v4.app.ShareCompat$IntentReader:
    java.lang.String TAG -> TAG
    android.app.Activity mActivity -> mActivity
    android.content.Intent mIntent -> mIntent
    java.lang.String mCallingPackage -> mCallingPackage
    android.content.ComponentName mCallingActivity -> mCallingActivity
    java.util.ArrayList mStreams -> mStreams
    android.support.v4.app.ShareCompat$IntentReader from(android.app.Activity) -> from
    boolean isShareIntent() -> isShareIntent
    boolean isSingleShare() -> isSingleShare
    boolean isMultipleShare() -> isMultipleShare
    java.lang.String getType() -> getType
    java.lang.CharSequence getText() -> getText
    java.lang.String getHtmlText() -> getHtmlText
    android.net.Uri getStream() -> getStream
    android.net.Uri getStream(int) -> getStream
    int getStreamCount() -> getStreamCount
    java.lang.String[] getEmailTo() -> getEmailTo
    java.lang.String[] getEmailCc() -> getEmailCc
    java.lang.String[] getEmailBcc() -> getEmailBcc
    java.lang.String getSubject() -> getSubject
    java.lang.String getCallingPackage() -> getCallingPackage
    android.content.ComponentName getCallingActivity() -> getCallingActivity
    android.graphics.drawable.Drawable getCallingActivityIcon() -> getCallingActivityIcon
    android.graphics.drawable.Drawable getCallingApplicationIcon() -> getCallingApplicationIcon
    java.lang.CharSequence getCallingApplicationLabel() -> getCallingApplicationLabel
android.support.v4.app.ShareCompat$ShareCompatImpl -> android.support.v4.app.ShareCompat$ShareCompatImpl:
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
android.support.v4.app.ShareCompat$ShareCompatImplBase -> android.support.v4.app.ShareCompat$ShareCompatImplBase:
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
    void withinStyle(java.lang.StringBuilder,java.lang.CharSequence,int,int) -> withinStyle
android.support.v4.app.ShareCompat$ShareCompatImplICS -> android.support.v4.app.ShareCompat$ShareCompatImplICS:
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    boolean shouldAddChooserIntent(android.view.MenuItem) -> shouldAddChooserIntent
android.support.v4.app.ShareCompat$ShareCompatImplJB -> android.support.v4.app.ShareCompat$ShareCompatImplJB:
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
    boolean shouldAddChooserIntent(android.view.MenuItem) -> shouldAddChooserIntent
android.support.v4.app.ShareCompatICS -> android.support.v4.app.ShareCompatICS:
    java.lang.String HISTORY_FILENAME_PREFIX -> HISTORY_FILENAME_PREFIX
    void configureMenuItem(android.view.MenuItem,android.app.Activity,android.content.Intent) -> configureMenuItem
android.support.v4.app.ShareCompatJB -> android.support.v4.app.ShareCompatJB:
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
android.support.v4.app.SuperNotCalledException -> android.support.v4.app.SuperNotCalledException:
android.support.v4.app.TaskStackBuilder -> android.support.v4.app.TaskStackBuilder:
    java.lang.String TAG -> TAG
    android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl IMPL -> IMPL
    java.util.ArrayList mIntents -> mIntents
    android.content.Context mSourceContext -> mSourceContext
    android.support.v4.app.TaskStackBuilder create(android.content.Context) -> create
    android.support.v4.app.TaskStackBuilder from(android.content.Context) -> from
    android.support.v4.app.TaskStackBuilder addNextIntent(android.content.Intent) -> addNextIntent
    android.support.v4.app.TaskStackBuilder addNextIntentWithParentStack(android.content.Intent) -> addNextIntentWithParentStack
    android.support.v4.app.TaskStackBuilder addParentStack(android.app.Activity) -> addParentStack
    android.support.v4.app.TaskStackBuilder addParentStack(java.lang.Class) -> addParentStack
    android.support.v4.app.TaskStackBuilder addParentStack(android.content.ComponentName) -> addParentStack
    int getIntentCount() -> getIntentCount
    android.content.Intent getIntent(int) -> getIntent
    android.content.Intent editIntentAt(int) -> editIntentAt
    java.util.Iterator iterator() -> iterator
    void startActivities() -> startActivities
    void startActivities(android.os.Bundle) -> startActivities
    android.app.PendingIntent getPendingIntent(int,int) -> getPendingIntent
    android.app.PendingIntent getPendingIntent(int,int,android.os.Bundle) -> getPendingIntent
    android.content.Intent[] getIntents() -> getIntents
android.support.v4.app.TaskStackBuilder$SupportParentable -> android.support.v4.app.TaskStackBuilder$SupportParentable:
    android.content.Intent getSupportParentActivityIntent() -> getSupportParentActivityIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplBase -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplBase:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplHoneycomb -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplHoneycomb:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplJellybean -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplJellybean:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilderHoneycomb -> android.support.v4.app.TaskStackBuilderHoneycomb:
    android.app.PendingIntent getActivitiesPendingIntent(android.content.Context,int,android.content.Intent[],int) -> getActivitiesPendingIntent
android.support.v4.app.TaskStackBuilderJellybean -> android.support.v4.app.TaskStackBuilderJellybean:
    android.app.PendingIntent getActivitiesPendingIntent(android.content.Context,int,android.content.Intent[],int,android.os.Bundle) -> getActivitiesPendingIntent
android.support.v4.content.AsyncTaskLoader -> android.support.v4.content.AsyncTaskLoader:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.support.v4.content.AsyncTaskLoader$LoadTask mTask -> mTask
    android.support.v4.content.AsyncTaskLoader$LoadTask mCancellingTask -> mCancellingTask
    long mUpdateThrottle -> mUpdateThrottle
    long mLastLoadCompleteTime -> mLastLoadCompleteTime
    android.os.Handler mHandler -> mHandler
    void setUpdateThrottle(long) -> setUpdateThrottle
    void onForceLoad() -> onForceLoad
    boolean cancelLoad() -> cancelLoad
    void onCanceled(java.lang.Object) -> onCanceled
    void executePendingTask() -> executePendingTask
    void dispatchOnCancelled(android.support.v4.content.AsyncTaskLoader$LoadTask,java.lang.Object) -> dispatchOnCancelled
    void dispatchOnLoadComplete(android.support.v4.content.AsyncTaskLoader$LoadTask,java.lang.Object) -> dispatchOnLoadComplete
    java.lang.Object loadInBackground() -> loadInBackground
    java.lang.Object onLoadInBackground() -> onLoadInBackground
    void waitForLoader() -> waitForLoader
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.content.AsyncTaskLoader$LoadTask -> android.support.v4.content.AsyncTaskLoader$LoadTask:
    java.lang.Object result -> result
    boolean waiting -> waiting
    java.util.concurrent.CountDownLatch done -> done
    android.support.v4.content.AsyncTaskLoader this$0 -> this$0
    java.lang.Object doInBackground(java.lang.Void[]) -> doInBackground
    void onPostExecute(java.lang.Object) -> onPostExecute
    void onCancelled() -> onCancelled
    void run() -> run
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    java.util.concurrent.CountDownLatch access$000(android.support.v4.content.AsyncTaskLoader$LoadTask) -> access$000
android.support.v4.content.ContextCompat -> android.support.v4.content.ContextCompat:
    java.lang.String DIR_ANDROID -> DIR_ANDROID
    java.lang.String DIR_DATA -> DIR_DATA
    java.lang.String DIR_OBB -> DIR_OBB
    java.lang.String DIR_FILES -> DIR_FILES
    java.lang.String DIR_CACHE -> DIR_CACHE
    boolean startActivities(android.content.Context,android.content.Intent[]) -> startActivities
    boolean startActivities(android.content.Context,android.content.Intent[],android.os.Bundle) -> startActivities
    java.io.File[] getObbDirs(android.content.Context) -> getObbDirs
    java.io.File[] getExternalFilesDirs(android.content.Context,java.lang.String) -> getExternalFilesDirs
    java.io.File[] getExternalCacheDirs(android.content.Context) -> getExternalCacheDirs
    java.io.File buildPath(java.io.File,java.lang.String[]) -> buildPath
android.support.v4.content.ContextCompatFroyo -> android.support.v4.content.ContextCompatFroyo:
    java.io.File getExternalCacheDir(android.content.Context) -> getExternalCacheDir
    java.io.File getExternalFilesDir(android.content.Context,java.lang.String) -> getExternalFilesDir
android.support.v4.content.ContextCompatHoneycomb -> android.support.v4.content.ContextCompatHoneycomb:
    void startActivities(android.content.Context,android.content.Intent[]) -> startActivities
    java.io.File getObbDir(android.content.Context) -> getObbDir
android.support.v4.content.ContextCompatJellybean -> android.support.v4.content.ContextCompatJellybean:
    void startActivities(android.content.Context,android.content.Intent[],android.os.Bundle) -> startActivities
android.support.v4.content.ContextCompatKitKat -> android.support.v4.content.ContextCompatKitKat:
    java.io.File[] getExternalCacheDirs(android.content.Context) -> getExternalCacheDirs
    java.io.File[] getExternalFilesDirs(android.content.Context,java.lang.String) -> getExternalFilesDirs
    java.io.File[] getObbDirs(android.content.Context) -> getObbDirs
android.support.v4.content.CursorLoader -> android.support.v4.content.CursorLoader:
    android.support.v4.content.Loader$ForceLoadContentObserver mObserver -> mObserver
    android.net.Uri mUri -> mUri
    java.lang.String[] mProjection -> mProjection
    java.lang.String mSelection -> mSelection
    java.lang.String[] mSelectionArgs -> mSelectionArgs
    java.lang.String mSortOrder -> mSortOrder
    android.database.Cursor mCursor -> mCursor
    android.database.Cursor loadInBackground() -> loadInBackground
    void deliverResult(android.database.Cursor) -> deliverResult
    void onStartLoading() -> onStartLoading
    void onStopLoading() -> onStopLoading
    void onCanceled(android.database.Cursor) -> onCanceled
    void onReset() -> onReset
    android.net.Uri getUri() -> getUri
    void setUri(android.net.Uri) -> setUri
    java.lang.String[] getProjection() -> getProjection
    void setProjection(java.lang.String[]) -> setProjection
    java.lang.String getSelection() -> getSelection
    void setSelection(java.lang.String) -> setSelection
    java.lang.String[] getSelectionArgs() -> getSelectionArgs
    void setSelectionArgs(java.lang.String[]) -> setSelectionArgs
    java.lang.String getSortOrder() -> getSortOrder
    void setSortOrder(java.lang.String) -> setSortOrder
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.Object loadInBackground() -> loadInBackground
    void onCanceled(java.lang.Object) -> onCanceled
    void deliverResult(java.lang.Object) -> deliverResult
android.support.v4.content.FileProvider -> android.support.v4.content.FileProvider:
    java.lang.String[] COLUMNS -> COLUMNS
    java.lang.String META_DATA_FILE_PROVIDER_PATHS -> META_DATA_FILE_PROVIDER_PATHS
    java.lang.String TAG_ROOT_PATH -> TAG_ROOT_PATH
    java.lang.String TAG_FILES_PATH -> TAG_FILES_PATH
    java.lang.String TAG_CACHE_PATH -> TAG_CACHE_PATH
    java.lang.String TAG_EXTERNAL -> TAG_EXTERNAL
    java.lang.String ATTR_NAME -> ATTR_NAME
    java.lang.String ATTR_PATH -> ATTR_PATH
    java.io.File DEVICE_ROOT -> DEVICE_ROOT
    java.util.HashMap sCache -> sCache
    android.support.v4.content.FileProvider$PathStrategy mStrategy -> mStrategy
    boolean onCreate() -> onCreate
    void attachInfo(android.content.Context,android.content.pm.ProviderInfo) -> attachInfo
    android.net.Uri getUriForFile(android.content.Context,java.lang.String,java.io.File) -> getUriForFile
    android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> query
    java.lang.String getType(android.net.Uri) -> getType
    android.net.Uri insert(android.net.Uri,android.content.ContentValues) -> insert
    int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
    int delete(android.net.Uri,java.lang.String,java.lang.String[]) -> delete
    android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String) -> openFile
    android.support.v4.content.FileProvider$PathStrategy getPathStrategy(android.content.Context,java.lang.String) -> getPathStrategy
    android.support.v4.content.FileProvider$PathStrategy parsePathStrategy(android.content.Context,java.lang.String) -> parsePathStrategy
    int modeToMode(java.lang.String) -> modeToMode
    java.io.File buildPath(java.io.File,java.lang.String[]) -> buildPath
    java.lang.String[] copyOf(java.lang.String[],int) -> copyOf
    java.lang.Object[] copyOf(java.lang.Object[],int) -> copyOf
android.support.v4.content.FileProvider$PathStrategy -> android.support.v4.content.FileProvider$PathStrategy:
    android.net.Uri getUriForFile(java.io.File) -> getUriForFile
    java.io.File getFileForUri(android.net.Uri) -> getFileForUri
android.support.v4.content.FileProvider$SimplePathStrategy -> android.support.v4.content.FileProvider$SimplePathStrategy:
    java.lang.String mAuthority -> mAuthority
    java.util.HashMap mRoots -> mRoots
    void addRoot(java.lang.String,java.io.File) -> addRoot
    android.net.Uri getUriForFile(java.io.File) -> getUriForFile
    java.io.File getFileForUri(android.net.Uri) -> getFileForUri
android.support.v4.content.IntentCompat -> android.support.v4.content.IntentCompat:
    android.support.v4.content.IntentCompat$IntentCompatImpl IMPL -> IMPL
    java.lang.String ACTION_EXTERNAL_APPLICATIONS_AVAILABLE -> ACTION_EXTERNAL_APPLICATIONS_AVAILABLE
    java.lang.String ACTION_EXTERNAL_APPLICATIONS_UNAVAILABLE -> ACTION_EXTERNAL_APPLICATIONS_UNAVAILABLE
    java.lang.String EXTRA_CHANGED_PACKAGE_LIST -> EXTRA_CHANGED_PACKAGE_LIST
    java.lang.String EXTRA_CHANGED_UID_LIST -> EXTRA_CHANGED_UID_LIST
    java.lang.String EXTRA_HTML_TEXT -> EXTRA_HTML_TEXT
    int FLAG_ACTIVITY_TASK_ON_HOME -> FLAG_ACTIVITY_TASK_ON_HOME
    int FLAG_ACTIVITY_CLEAR_TASK -> FLAG_ACTIVITY_CLEAR_TASK
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompat$IntentCompatImpl -> android.support.v4.content.IntentCompat$IntentCompatImpl:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompat$IntentCompatImplBase -> android.support.v4.content.IntentCompat$IntentCompatImplBase:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompat$IntentCompatImplHC -> android.support.v4.content.IntentCompat$IntentCompatImplHC:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompat$IntentCompatImplIcsMr1 -> android.support.v4.content.IntentCompat$IntentCompatImplIcsMr1:
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
android.support.v4.content.IntentCompatHoneycomb -> android.support.v4.content.IntentCompatHoneycomb:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompatIcsMr1 -> android.support.v4.content.IntentCompatIcsMr1:
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
android.support.v4.content.Loader -> android.support.v4.content.Loader:
    int mId -> mId
    android.support.v4.content.Loader$OnLoadCompleteListener mListener -> mListener
    android.content.Context mContext -> mContext
    boolean mStarted -> mStarted
    boolean mAbandoned -> mAbandoned
    boolean mReset -> mReset
    boolean mContentChanged -> mContentChanged
    boolean mProcessingChange -> mProcessingChange
    void deliverResult(java.lang.Object) -> deliverResult
    android.content.Context getContext() -> getContext
    int getId() -> getId
    void registerListener(int,android.support.v4.content.Loader$OnLoadCompleteListener) -> registerListener
    void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener) -> unregisterListener
    boolean isStarted() -> isStarted
    boolean isAbandoned() -> isAbandoned
    boolean isReset() -> isReset
    void startLoading() -> startLoading
    void onStartLoading() -> onStartLoading
    void forceLoad() -> forceLoad
    void onForceLoad() -> onForceLoad
    void stopLoading() -> stopLoading
    void onStopLoading() -> onStopLoading
    void abandon() -> abandon
    void onAbandon() -> onAbandon
    void reset() -> reset
    void onReset() -> onReset
    boolean takeContentChanged() -> takeContentChanged
    void commitContentChanged() -> commitContentChanged
    void rollbackContentChanged() -> rollbackContentChanged
    void onContentChanged() -> onContentChanged
    java.lang.String dataToString(java.lang.Object) -> dataToString
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.content.Loader$ForceLoadContentObserver -> android.support.v4.content.Loader$ForceLoadContentObserver:
    android.support.v4.content.Loader this$0 -> this$0
    boolean deliverSelfNotifications() -> deliverSelfNotifications
    void onChange(boolean) -> onChange
android.support.v4.content.Loader$OnLoadCompleteListener -> android.support.v4.content.Loader$OnLoadCompleteListener:
    void onLoadComplete(android.support.v4.content.Loader,java.lang.Object) -> onLoadComplete
android.support.v4.content.LocalBroadcastManager -> android.support.v4.content.LocalBroadcastManager:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.content.Context mAppContext -> mAppContext
    java.util.HashMap mReceivers -> mReceivers
    java.util.HashMap mActions -> mActions
    java.util.ArrayList mPendingBroadcasts -> mPendingBroadcasts
    int MSG_EXEC_PENDING_BROADCASTS -> MSG_EXEC_PENDING_BROADCASTS
    android.os.Handler mHandler -> mHandler
    java.lang.Object mLock -> mLock
    android.support.v4.content.LocalBroadcastManager mInstance -> mInstance
    android.support.v4.content.LocalBroadcastManager getInstance(android.content.Context) -> getInstance
    void registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter) -> registerReceiver
    void unregisterReceiver(android.content.BroadcastReceiver) -> unregisterReceiver
    boolean sendBroadcast(android.content.Intent) -> sendBroadcast
    void sendBroadcastSync(android.content.Intent) -> sendBroadcastSync
    void executePendingBroadcasts() -> executePendingBroadcasts
    void access$000(android.support.v4.content.LocalBroadcastManager) -> access$000
android.support.v4.content.LocalBroadcastManager$1 -> android.support.v4.content.LocalBroadcastManager$1:
    android.support.v4.content.LocalBroadcastManager this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.content.LocalBroadcastManager$BroadcastRecord -> android.support.v4.content.LocalBroadcastManager$BroadcastRecord:
    android.content.Intent intent -> intent
    java.util.ArrayList receivers -> receivers
android.support.v4.content.LocalBroadcastManager$ReceiverRecord -> android.support.v4.content.LocalBroadcastManager$ReceiverRecord:
    android.content.IntentFilter filter -> filter
    android.content.BroadcastReceiver receiver -> receiver
    boolean broadcasting -> broadcasting
    java.lang.String toString() -> toString
android.support.v4.content.ModernAsyncTask -> android.support.v4.content.ModernAsyncTask:
    java.lang.String LOG_TAG -> LOG_TAG
    int CORE_POOL_SIZE -> CORE_POOL_SIZE
    int MAXIMUM_POOL_SIZE -> MAXIMUM_POOL_SIZE
    int KEEP_ALIVE -> KEEP_ALIVE
    java.util.concurrent.ThreadFactory sThreadFactory -> sThreadFactory
    java.util.concurrent.BlockingQueue sPoolWorkQueue -> sPoolWorkQueue
    java.util.concurrent.Executor THREAD_POOL_EXECUTOR -> THREAD_POOL_EXECUTOR
    int MESSAGE_POST_RESULT -> MESSAGE_POST_RESULT
    int MESSAGE_POST_PROGRESS -> MESSAGE_POST_PROGRESS
    android.support.v4.content.ModernAsyncTask$InternalHandler sHandler -> sHandler
    java.util.concurrent.Executor sDefaultExecutor -> sDefaultExecutor
    android.support.v4.content.ModernAsyncTask$WorkerRunnable mWorker -> mWorker
    java.util.concurrent.FutureTask mFuture -> mFuture
    android.support.v4.content.ModernAsyncTask$Status mStatus -> mStatus
    java.util.concurrent.atomic.AtomicBoolean mTaskInvoked -> mTaskInvoked
    void init() -> init
    void setDefaultExecutor(java.util.concurrent.Executor) -> setDefaultExecutor
    void postResultIfNotInvoked(java.lang.Object) -> postResultIfNotInvoked
    java.lang.Object postResult(java.lang.Object) -> postResult
    android.support.v4.content.ModernAsyncTask$Status getStatus() -> getStatus
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onPreExecute() -> onPreExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
    void onCancelled(java.lang.Object) -> onCancelled
    void onCancelled() -> onCancelled
    boolean isCancelled() -> isCancelled
    boolean cancel(boolean) -> cancel
    java.lang.Object get() -> get
    java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
    android.support.v4.content.ModernAsyncTask execute(java.lang.Object[]) -> execute
    android.support.v4.content.ModernAsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[]) -> executeOnExecutor
    void execute(java.lang.Runnable) -> execute
    void publishProgress(java.lang.Object[]) -> publishProgress
    void finish(java.lang.Object) -> finish
    java.util.concurrent.atomic.AtomicBoolean access$200(android.support.v4.content.ModernAsyncTask) -> access$200
    java.lang.Object access$300(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> access$300
    void access$400(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> access$400
    void access$500(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> access$500
android.support.v4.content.ModernAsyncTask$1 -> android.support.v4.content.ModernAsyncTask$1:
    java.util.concurrent.atomic.AtomicInteger mCount -> mCount
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
android.support.v4.content.ModernAsyncTask$2 -> android.support.v4.content.ModernAsyncTask$2:
    android.support.v4.content.ModernAsyncTask this$0 -> this$0
    java.lang.Object call() -> call
android.support.v4.content.ModernAsyncTask$3 -> android.support.v4.content.ModernAsyncTask$3:
    android.support.v4.content.ModernAsyncTask this$0 -> this$0
    void done() -> done
android.support.v4.content.ModernAsyncTask$4 -> android.support.v4.content.ModernAsyncTask$4:
    int[] $SwitchMap$android$support$v4$content$ModernAsyncTask$Status -> $SwitchMap$android$support$v4$content$ModernAsyncTask$Status
android.support.v4.content.ModernAsyncTask$AsyncTaskResult -> android.support.v4.content.ModernAsyncTask$AsyncTaskResult:
    android.support.v4.content.ModernAsyncTask mTask -> mTask
    java.lang.Object[] mData -> mData
android.support.v4.content.ModernAsyncTask$InternalHandler -> android.support.v4.content.ModernAsyncTask$InternalHandler:
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.content.ModernAsyncTask$Status -> android.support.v4.content.ModernAsyncTask$Status:
    android.support.v4.content.ModernAsyncTask$Status PENDING -> PENDING
    android.support.v4.content.ModernAsyncTask$Status RUNNING -> RUNNING
    android.support.v4.content.ModernAsyncTask$Status FINISHED -> FINISHED
    android.support.v4.content.ModernAsyncTask$Status[] $VALUES -> $VALUES
    android.support.v4.content.ModernAsyncTask$Status[] values() -> values
    android.support.v4.content.ModernAsyncTask$Status valueOf(java.lang.String) -> valueOf
android.support.v4.content.ModernAsyncTask$WorkerRunnable -> android.support.v4.content.ModernAsyncTask$WorkerRunnable:
    java.lang.Object[] mParams -> mParams
android.support.v4.content.WakefulBroadcastReceiver -> android.support.v4.content.WakefulBroadcastReceiver:
    java.lang.String EXTRA_WAKE_LOCK_ID -> EXTRA_WAKE_LOCK_ID
    android.util.SparseArray mActiveWakeLocks -> mActiveWakeLocks
    int mNextId -> mNextId
    android.content.ComponentName startWakefulService(android.content.Context,android.content.Intent) -> startWakefulService
    boolean completeWakefulIntent(android.content.Intent) -> completeWakefulIntent
android.support.v4.content.pm.ActivityInfoCompat -> android.support.v4.content.pm.ActivityInfoCompat:
    int CONFIG_UI_MODE -> CONFIG_UI_MODE
android.support.v4.database.DatabaseUtilsCompat -> android.support.v4.database.DatabaseUtilsCompat:
    java.lang.String concatenateWhere(java.lang.String,java.lang.String) -> concatenateWhere
    java.lang.String[] appendSelectionArgs(java.lang.String[],java.lang.String[]) -> appendSelectionArgs
android.support.v4.graphics.drawable.DrawableCompat -> android.support.v4.graphics.drawable.DrawableCompat:
    android.support.v4.graphics.drawable.DrawableCompat$DrawableImpl IMPL -> IMPL
    void jumpToCurrentState(android.graphics.drawable.Drawable) -> jumpToCurrentState
    void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> setAutoMirrored
    boolean isAutoMirrored(android.graphics.drawable.Drawable) -> isAutoMirrored
android.support.v4.graphics.drawable.DrawableCompat$BaseDrawableImpl -> android.support.v4.graphics.drawable.DrawableCompat$BaseDrawableImpl:
    void jumpToCurrentState(android.graphics.drawable.Drawable) -> jumpToCurrentState
    void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> setAutoMirrored
    boolean isAutoMirrored(android.graphics.drawable.Drawable) -> isAutoMirrored
android.support.v4.graphics.drawable.DrawableCompat$DrawableImpl -> android.support.v4.graphics.drawable.DrawableCompat$DrawableImpl:
    void jumpToCurrentState(android.graphics.drawable.Drawable) -> jumpToCurrentState
    void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> setAutoMirrored
    boolean isAutoMirrored(android.graphics.drawable.Drawable) -> isAutoMirrored
android.support.v4.graphics.drawable.DrawableCompat$HoneycombDrawableImpl -> android.support.v4.graphics.drawable.DrawableCompat$HoneycombDrawableImpl:
    void jumpToCurrentState(android.graphics.drawable.Drawable) -> jumpToCurrentState
android.support.v4.graphics.drawable.DrawableCompat$KitKatDrawableImpl -> android.support.v4.graphics.drawable.DrawableCompat$KitKatDrawableImpl:
    void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> setAutoMirrored
    boolean isAutoMirrored(android.graphics.drawable.Drawable) -> isAutoMirrored
android.support.v4.graphics.drawable.DrawableCompatHoneycomb -> android.support.v4.graphics.drawable.DrawableCompatHoneycomb:
    void jumpToCurrentState(android.graphics.drawable.Drawable) -> jumpToCurrentState
android.support.v4.graphics.drawable.DrawableCompatKitKat -> android.support.v4.graphics.drawable.DrawableCompatKitKat:
    void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> setAutoMirrored
    boolean isAutoMirrored(android.graphics.drawable.Drawable) -> isAutoMirrored
android.support.v4.hardware.display.DisplayManagerCompat -> android.support.v4.hardware.display.DisplayManagerCompat:
    java.util.WeakHashMap sInstances -> sInstances
    java.lang.String DISPLAY_CATEGORY_PRESENTATION -> DISPLAY_CATEGORY_PRESENTATION
    android.support.v4.hardware.display.DisplayManagerCompat getInstance(android.content.Context) -> getInstance
    android.view.Display getDisplay(int) -> getDisplay
    android.view.Display[] getDisplays() -> getDisplays
    android.view.Display[] getDisplays(java.lang.String) -> getDisplays
android.support.v4.hardware.display.DisplayManagerCompat$JellybeanMr1Impl -> android.support.v4.hardware.display.DisplayManagerCompat$JellybeanMr1Impl:
    java.lang.Object mDisplayManagerObj -> mDisplayManagerObj
    android.view.Display getDisplay(int) -> getDisplay
    android.view.Display[] getDisplays() -> getDisplays
    android.view.Display[] getDisplays(java.lang.String) -> getDisplays
android.support.v4.hardware.display.DisplayManagerCompat$LegacyImpl -> android.support.v4.hardware.display.DisplayManagerCompat$LegacyImpl:
    android.view.WindowManager mWindowManager -> mWindowManager
    android.view.Display getDisplay(int) -> getDisplay
    android.view.Display[] getDisplays() -> getDisplays
    android.view.Display[] getDisplays(java.lang.String) -> getDisplays
android.support.v4.hardware.display.DisplayManagerJellybeanMr1 -> android.support.v4.hardware.display.DisplayManagerJellybeanMr1:
    java.lang.Object getDisplayManager(android.content.Context) -> getDisplayManager
    android.view.Display getDisplay(java.lang.Object,int) -> getDisplay
    android.view.Display[] getDisplays(java.lang.Object) -> getDisplays
    android.view.Display[] getDisplays(java.lang.Object,java.lang.String) -> getDisplays
android.support.v4.internal.view.SupportMenu -> android.support.v4.internal.view.SupportMenu:
    int USER_MASK -> USER_MASK
    int USER_SHIFT -> USER_SHIFT
    int CATEGORY_MASK -> CATEGORY_MASK
    int CATEGORY_SHIFT -> CATEGORY_SHIFT
android.support.v4.internal.view.SupportMenuItem -> android.support.v4.internal.view.SupportMenuItem:
    int SHOW_AS_ACTION_NEVER -> SHOW_AS_ACTION_NEVER
    int SHOW_AS_ACTION_IF_ROOM -> SHOW_AS_ACTION_IF_ROOM
    int SHOW_AS_ACTION_ALWAYS -> SHOW_AS_ACTION_ALWAYS
    int SHOW_AS_ACTION_WITH_TEXT -> SHOW_AS_ACTION_WITH_TEXT
    int SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW -> SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW
    void setShowAsAction(int) -> setShowAsAction
    android.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    android.view.MenuItem setActionView(android.view.View) -> setActionView
    android.view.MenuItem setActionView(int) -> setActionView
    android.view.View getActionView() -> getActionView
    android.support.v4.internal.view.SupportMenuItem setSupportActionProvider(android.support.v4.view.ActionProvider) -> setSupportActionProvider
    android.support.v4.view.ActionProvider getSupportActionProvider() -> getSupportActionProvider
    boolean expandActionView() -> expandActionView
    boolean collapseActionView() -> collapseActionView
    boolean isActionViewExpanded() -> isActionViewExpanded
    android.support.v4.internal.view.SupportMenuItem setSupportOnActionExpandListener(android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setSupportOnActionExpandListener
android.support.v4.internal.view.SupportSubMenu -> android.support.v4.internal.view.SupportSubMenu:
android.support.v4.media.TransportController -> android.support.v4.media.TransportController:
    void registerStateListener(android.support.v4.media.TransportStateListener) -> registerStateListener
    void unregisterStateListener(android.support.v4.media.TransportStateListener) -> unregisterStateListener
    void startPlaying() -> startPlaying
    void pausePlaying() -> pausePlaying
    void stopPlaying() -> stopPlaying
    long getDuration() -> getDuration
    long getCurrentPosition() -> getCurrentPosition
    void seekTo(long) -> seekTo
    boolean isPlaying() -> isPlaying
    int getBufferPercentage() -> getBufferPercentage
    int getTransportControlFlags() -> getTransportControlFlags
android.support.v4.media.TransportMediator -> android.support.v4.media.TransportMediator:
    android.content.Context mContext -> mContext
    android.support.v4.media.TransportPerformer mCallbacks -> mCallbacks
    android.media.AudioManager mAudioManager -> mAudioManager
    android.view.View mView -> mView
    java.lang.Object mDispatcherState -> mDispatcherState
    android.support.v4.media.TransportMediatorJellybeanMR2 mController -> mController
    java.util.ArrayList mListeners -> mListeners
    android.support.v4.media.TransportMediatorCallback mTransportKeyCallback -> mTransportKeyCallback
    int KEYCODE_MEDIA_PLAY -> KEYCODE_MEDIA_PLAY
    int KEYCODE_MEDIA_PAUSE -> KEYCODE_MEDIA_PAUSE
    int KEYCODE_MEDIA_RECORD -> KEYCODE_MEDIA_RECORD
    int FLAG_KEY_MEDIA_PREVIOUS -> FLAG_KEY_MEDIA_PREVIOUS
    int FLAG_KEY_MEDIA_REWIND -> FLAG_KEY_MEDIA_REWIND
    int FLAG_KEY_MEDIA_PLAY -> FLAG_KEY_MEDIA_PLAY
    int FLAG_KEY_MEDIA_PLAY_PAUSE -> FLAG_KEY_MEDIA_PLAY_PAUSE
    int FLAG_KEY_MEDIA_PAUSE -> FLAG_KEY_MEDIA_PAUSE
    int FLAG_KEY_MEDIA_STOP -> FLAG_KEY_MEDIA_STOP
    int FLAG_KEY_MEDIA_FAST_FORWARD -> FLAG_KEY_MEDIA_FAST_FORWARD
    int FLAG_KEY_MEDIA_NEXT -> FLAG_KEY_MEDIA_NEXT
    android.view.KeyEvent$Callback mKeyEventCallback -> mKeyEventCallback
    boolean isMediaKey(int) -> isMediaKey
    java.lang.Object getRemoteControlClient() -> getRemoteControlClient
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    void registerStateListener(android.support.v4.media.TransportStateListener) -> registerStateListener
    void unregisterStateListener(android.support.v4.media.TransportStateListener) -> unregisterStateListener
    android.support.v4.media.TransportStateListener[] getListeners() -> getListeners
    void reportPlayingChanged() -> reportPlayingChanged
    void reportTransportControlsChanged() -> reportTransportControlsChanged
    void pushControllerState() -> pushControllerState
    void refreshState() -> refreshState
    void startPlaying() -> startPlaying
    void pausePlaying() -> pausePlaying
    void stopPlaying() -> stopPlaying
    long getDuration() -> getDuration
    long getCurrentPosition() -> getCurrentPosition
    void seekTo(long) -> seekTo
    boolean isPlaying() -> isPlaying
    int getBufferPercentage() -> getBufferPercentage
    int getTransportControlFlags() -> getTransportControlFlags
    void destroy() -> destroy
android.support.v4.media.TransportMediator$1 -> android.support.v4.media.TransportMediator$1:
    android.support.v4.media.TransportMediator this$0 -> this$0
    void handleKey(android.view.KeyEvent) -> handleKey
    void handleAudioFocusChange(int) -> handleAudioFocusChange
    long getPlaybackPosition() -> getPlaybackPosition
    void playbackPositionUpdate(long) -> playbackPositionUpdate
android.support.v4.media.TransportMediator$2 -> android.support.v4.media.TransportMediator$2:
    android.support.v4.media.TransportMediator this$0 -> this$0
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyLongPress(int,android.view.KeyEvent) -> onKeyLongPress
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    boolean onKeyMultiple(int,int,android.view.KeyEvent) -> onKeyMultiple
android.support.v4.media.TransportMediatorCallback -> android.support.v4.media.TransportMediatorCallback:
    void handleKey(android.view.KeyEvent) -> handleKey
    void handleAudioFocusChange(int) -> handleAudioFocusChange
    long getPlaybackPosition() -> getPlaybackPosition
    void playbackPositionUpdate(long) -> playbackPositionUpdate
android.support.v4.media.TransportMediatorJellybeanMR2 -> android.support.v4.media.TransportMediatorJellybeanMR2:
    android.content.Context mContext -> mContext
    android.media.AudioManager mAudioManager -> mAudioManager
    android.view.View mTargetView -> mTargetView
    android.support.v4.media.TransportMediatorCallback mTransportCallback -> mTransportCallback
    java.lang.String mReceiverAction -> mReceiverAction
    android.content.IntentFilter mReceiverFilter -> mReceiverFilter
    android.content.Intent mIntent -> mIntent
    android.view.ViewTreeObserver$OnWindowAttachListener mWindowAttachListener -> mWindowAttachListener
    android.view.ViewTreeObserver$OnWindowFocusChangeListener mWindowFocusListener -> mWindowFocusListener
    android.content.BroadcastReceiver mMediaButtonReceiver -> mMediaButtonReceiver
    android.media.AudioManager$OnAudioFocusChangeListener mAudioFocusChangeListener -> mAudioFocusChangeListener
    android.app.PendingIntent mPendingIntent -> mPendingIntent
    android.media.RemoteControlClient mRemoteControl -> mRemoteControl
    boolean mFocused -> mFocused
    int mPlayState -> mPlayState
    boolean mAudioFocused -> mAudioFocused
    java.lang.Object getRemoteControlClient() -> getRemoteControlClient
    void destroy() -> destroy
    void windowAttached() -> windowAttached
    void gainFocus() -> gainFocus
    void takeAudioFocus() -> takeAudioFocus
    void startPlaying() -> startPlaying
    long onGetPlaybackPosition() -> onGetPlaybackPosition
    void onPlaybackPositionUpdate(long) -> onPlaybackPositionUpdate
    void refreshState(boolean,long,int) -> refreshState
    void pausePlaying() -> pausePlaying
    void stopPlaying() -> stopPlaying
    void dropAudioFocus() -> dropAudioFocus
    void loseFocus() -> loseFocus
    void windowDetached() -> windowDetached
android.support.v4.media.TransportMediatorJellybeanMR2$1 -> android.support.v4.media.TransportMediatorJellybeanMR2$1:
    android.support.v4.media.TransportMediatorJellybeanMR2 this$0 -> this$0
    void onWindowAttached() -> onWindowAttached
    void onWindowDetached() -> onWindowDetached
android.support.v4.media.TransportMediatorJellybeanMR2$2 -> android.support.v4.media.TransportMediatorJellybeanMR2$2:
    android.support.v4.media.TransportMediatorJellybeanMR2 this$0 -> this$0
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
android.support.v4.media.TransportMediatorJellybeanMR2$3 -> android.support.v4.media.TransportMediatorJellybeanMR2$3:
    android.support.v4.media.TransportMediatorJellybeanMR2 this$0 -> this$0
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
android.support.v4.media.TransportMediatorJellybeanMR2$4 -> android.support.v4.media.TransportMediatorJellybeanMR2$4:
    android.support.v4.media.TransportMediatorJellybeanMR2 this$0 -> this$0
    void onAudioFocusChange(int) -> onAudioFocusChange
android.support.v4.media.TransportPerformer -> android.support.v4.media.TransportPerformer:
    int AUDIOFOCUS_GAIN -> AUDIOFOCUS_GAIN
    int AUDIOFOCUS_GAIN_TRANSIENT -> AUDIOFOCUS_GAIN_TRANSIENT
    int AUDIOFOCUS_GAIN_TRANSIENT_MAY_DUCK -> AUDIOFOCUS_GAIN_TRANSIENT_MAY_DUCK
    int AUDIOFOCUS_LOSS -> AUDIOFOCUS_LOSS
    int AUDIOFOCUS_LOSS_TRANSIENT -> AUDIOFOCUS_LOSS_TRANSIENT
    int AUDIOFOCUS_LOSS_TRANSIENT_CAN_DUCK -> AUDIOFOCUS_LOSS_TRANSIENT_CAN_DUCK
    void onStart() -> onStart
    void onPause() -> onPause
    void onStop() -> onStop
    long onGetDuration() -> onGetDuration
    long onGetCurrentPosition() -> onGetCurrentPosition
    void onSeekTo(long) -> onSeekTo
    boolean onIsPlaying() -> onIsPlaying
    int onGetBufferPercentage() -> onGetBufferPercentage
    int onGetTransportControlFlags() -> onGetTransportControlFlags
    boolean onMediaButtonDown(int,android.view.KeyEvent) -> onMediaButtonDown
    boolean onMediaButtonUp(int,android.view.KeyEvent) -> onMediaButtonUp
    void onAudioFocusChange(int) -> onAudioFocusChange
android.support.v4.media.TransportStateListener -> android.support.v4.media.TransportStateListener:
    void onPlayingChanged(android.support.v4.media.TransportController) -> onPlayingChanged
    void onTransportControlsChanged(android.support.v4.media.TransportController) -> onTransportControlsChanged
android.support.v4.net.ConnectivityManagerCompat -> android.support.v4.net.ConnectivityManagerCompat:
    android.support.v4.net.ConnectivityManagerCompat$ConnectivityManagerCompatImpl IMPL -> IMPL
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
    android.net.NetworkInfo getNetworkInfoFromBroadcast(android.net.ConnectivityManager,android.content.Intent) -> getNetworkInfoFromBroadcast
android.support.v4.net.ConnectivityManagerCompat$BaseConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$BaseConnectivityManagerCompatImpl:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompat$ConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$ConnectivityManagerCompatImpl:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompat$GingerbreadConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$GingerbreadConnectivityManagerCompatImpl:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompat$HoneycombMR2ConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$HoneycombMR2ConnectivityManagerCompatImpl:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompat$JellyBeanConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$JellyBeanConnectivityManagerCompatImpl:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompatGingerbread -> android.support.v4.net.ConnectivityManagerCompatGingerbread:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompatHoneycombMR2 -> android.support.v4.net.ConnectivityManagerCompatHoneycombMR2:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompatJellyBean -> android.support.v4.net.ConnectivityManagerCompatJellyBean:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.TrafficStatsCompat -> android.support.v4.net.TrafficStatsCompat:
    android.support.v4.net.TrafficStatsCompat$TrafficStatsCompatImpl IMPL -> IMPL
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.net.TrafficStatsCompat$1 -> android.support.v4.net.TrafficStatsCompat$1:
android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl -> android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl:
    java.lang.ThreadLocal mThreadSocketTags -> mThreadSocketTags
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$1 -> android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$1:
    android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl this$0 -> this$0
    android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$SocketTags initialValue() -> initialValue
    java.lang.Object initialValue() -> initialValue
android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$SocketTags -> android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$SocketTags:
    int statsTag -> statsTag
android.support.v4.net.TrafficStatsCompat$IcsTrafficStatsCompatImpl -> android.support.v4.net.TrafficStatsCompat$IcsTrafficStatsCompatImpl:
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.net.TrafficStatsCompat$TrafficStatsCompatImpl -> android.support.v4.net.TrafficStatsCompat$TrafficStatsCompatImpl:
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.net.TrafficStatsCompatIcs -> android.support.v4.net.TrafficStatsCompatIcs:
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.os.EnvironmentCompat -> android.support.v4.os.EnvironmentCompat:
    java.lang.String TAG -> TAG
    java.lang.String MEDIA_UNKNOWN -> MEDIA_UNKNOWN
    java.lang.String getStorageState(java.io.File) -> getStorageState
android.support.v4.os.EnvironmentCompatKitKat -> android.support.v4.os.EnvironmentCompatKitKat:
    java.lang.String getStorageState(java.io.File) -> getStorageState
android.support.v4.os.ParcelableCompat -> android.support.v4.os.ParcelableCompat:
    android.os.Parcelable$Creator newCreator(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> newCreator
android.support.v4.os.ParcelableCompat$CompatCreator -> android.support.v4.os.ParcelableCompat$CompatCreator:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> mCallbacks
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorCallbacks -> android.support.v4.os.ParcelableCompatCreatorCallbacks:
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2 -> android.support.v4.os.ParcelableCompatCreatorHoneycombMR2:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> mCallbacks
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub -> android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub:
    android.os.Parcelable$Creator instantiate(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> instantiate
android.support.v4.print.PrintHelper -> android.support.v4.print.PrintHelper:
    int SCALE_MODE_FIT -> SCALE_MODE_FIT
    int SCALE_MODE_FILL -> SCALE_MODE_FILL
    int COLOR_MODE_MONOCHROME -> COLOR_MODE_MONOCHROME
    int COLOR_MODE_COLOR -> COLOR_MODE_COLOR
    int ORIENTATION_LANDSCAPE -> ORIENTATION_LANDSCAPE
    int ORIENTATION_PORTRAIT -> ORIENTATION_PORTRAIT
    android.support.v4.print.PrintHelper$PrintHelperVersionImpl mImpl -> mImpl
    boolean systemSupportsPrint() -> systemSupportsPrint
    void setScaleMode(int) -> setScaleMode
    int getScaleMode() -> getScaleMode
    void setColorMode(int) -> setColorMode
    int getColorMode() -> getColorMode
    void setOrientation(int) -> setOrientation
    int getOrientation() -> getOrientation
    void printBitmap(java.lang.String,android.graphics.Bitmap) -> printBitmap
    void printBitmap(java.lang.String,android.net.Uri) -> printBitmap
android.support.v4.print.PrintHelper$1 -> android.support.v4.print.PrintHelper$1:
android.support.v4.print.PrintHelper$PrintHelperKitkatImpl -> android.support.v4.print.PrintHelper$PrintHelperKitkatImpl:
    android.support.v4.print.PrintHelperKitkat mPrintHelper -> mPrintHelper
    void setScaleMode(int) -> setScaleMode
    int getScaleMode() -> getScaleMode
    void setColorMode(int) -> setColorMode
    int getColorMode() -> getColorMode
    void setOrientation(int) -> setOrientation
    int getOrientation() -> getOrientation
    void printBitmap(java.lang.String,android.graphics.Bitmap) -> printBitmap
    void printBitmap(java.lang.String,android.net.Uri) -> printBitmap
android.support.v4.print.PrintHelper$PrintHelperStubImpl -> android.support.v4.print.PrintHelper$PrintHelperStubImpl:
    int mScaleMode -> mScaleMode
    int mColorMode -> mColorMode
    int mOrientation -> mOrientation
    void setScaleMode(int) -> setScaleMode
    int getColorMode() -> getColorMode
    void setColorMode(int) -> setColorMode
    void setOrientation(int) -> setOrientation
    int getOrientation() -> getOrientation
    int getScaleMode() -> getScaleMode
    void printBitmap(java.lang.String,android.graphics.Bitmap) -> printBitmap
    void printBitmap(java.lang.String,android.net.Uri) -> printBitmap
android.support.v4.print.PrintHelper$PrintHelperVersionImpl -> android.support.v4.print.PrintHelper$PrintHelperVersionImpl:
    void setScaleMode(int) -> setScaleMode
    int getScaleMode() -> getScaleMode
    void setColorMode(int) -> setColorMode
    int getColorMode() -> getColorMode
    void setOrientation(int) -> setOrientation
    int getOrientation() -> getOrientation
    void printBitmap(java.lang.String,android.graphics.Bitmap) -> printBitmap
    void printBitmap(java.lang.String,android.net.Uri) -> printBitmap
android.support.v4.print.PrintHelperKitkat -> android.support.v4.print.PrintHelperKitkat:
    java.lang.String LOG_TAG -> LOG_TAG
    int MAX_PRINT_SIZE -> MAX_PRINT_SIZE
    android.content.Context mContext -> mContext
    android.graphics.BitmapFactory$Options mDecodeOptions -> mDecodeOptions
    java.lang.Object mLock -> mLock
    int SCALE_MODE_FIT -> SCALE_MODE_FIT
    int SCALE_MODE_FILL -> SCALE_MODE_FILL
    int ORIENTATION_LANDSCAPE -> ORIENTATION_LANDSCAPE
    int ORIENTATION_PORTRAIT -> ORIENTATION_PORTRAIT
    int COLOR_MODE_MONOCHROME -> COLOR_MODE_MONOCHROME
    int COLOR_MODE_COLOR -> COLOR_MODE_COLOR
    int mScaleMode -> mScaleMode
    int mColorMode -> mColorMode
    int mOrientation -> mOrientation
    void setScaleMode(int) -> setScaleMode
    int getScaleMode() -> getScaleMode
    void setColorMode(int) -> setColorMode
    void setOrientation(int) -> setOrientation
    int getOrientation() -> getOrientation
    int getColorMode() -> getColorMode
    void printBitmap(java.lang.String,android.graphics.Bitmap) -> printBitmap
    android.graphics.Matrix getMatrix(int,int,android.graphics.RectF,int) -> getMatrix
    void printBitmap(java.lang.String,android.net.Uri) -> printBitmap
    android.graphics.Bitmap loadConstrainedBitmap(android.net.Uri,int) -> loadConstrainedBitmap
    android.graphics.Bitmap loadBitmap(android.net.Uri,android.graphics.BitmapFactory$Options) -> loadBitmap
    android.graphics.Matrix access$000(android.support.v4.print.PrintHelperKitkat,int,int,android.graphics.RectF,int) -> access$000
    android.graphics.Bitmap access$200(android.support.v4.print.PrintHelperKitkat,android.net.Uri,int) -> access$200
    java.lang.Object access$300(android.support.v4.print.PrintHelperKitkat) -> access$300
android.support.v4.print.PrintHelperKitkat$1 -> android.support.v4.print.PrintHelperKitkat$1:
    android.print.PrintAttributes mAttributes -> mAttributes
    java.lang.String val$jobName -> val$jobName
    android.graphics.Bitmap val$bitmap -> val$bitmap
    int val$fittingMode -> val$fittingMode
    android.support.v4.print.PrintHelperKitkat this$0 -> this$0
    void onLayout(android.print.PrintAttributes,android.print.PrintAttributes,android.os.CancellationSignal,android.print.PrintDocumentAdapter$LayoutResultCallback,android.os.Bundle) -> onLayout
    void onWrite(android.print.PageRange[],android.os.ParcelFileDescriptor,android.os.CancellationSignal,android.print.PrintDocumentAdapter$WriteResultCallback) -> onWrite
android.support.v4.print.PrintHelperKitkat$2 -> android.support.v4.print.PrintHelperKitkat$2:
    android.print.PrintAttributes mAttributes -> mAttributes
    android.os.AsyncTask loadBitmap -> loadBitmap
    android.graphics.Bitmap mBitmap -> mBitmap
    java.lang.String val$jobName -> val$jobName
    android.net.Uri val$imageFile -> val$imageFile
    int val$fittingMode -> val$fittingMode
    android.support.v4.print.PrintHelperKitkat this$0 -> this$0
    void onLayout(android.print.PrintAttributes,android.print.PrintAttributes,android.os.CancellationSignal,android.print.PrintDocumentAdapter$LayoutResultCallback,android.os.Bundle) -> onLayout
    void cancelLoad() -> cancelLoad
    void onFinish() -> onFinish
    void onWrite(android.print.PageRange[],android.os.ParcelFileDescriptor,android.os.CancellationSignal,android.print.PrintDocumentAdapter$WriteResultCallback) -> onWrite
    void access$100(android.support.v4.print.PrintHelperKitkat$2) -> access$100
android.support.v4.print.PrintHelperKitkat$2$1 -> android.support.v4.print.PrintHelperKitkat$2$1:
    android.os.CancellationSignal val$cancellationSignal -> val$cancellationSignal
    android.print.PrintAttributes val$newPrintAttributes -> val$newPrintAttributes
    android.print.PrintAttributes val$oldPrintAttributes -> val$oldPrintAttributes
    android.print.PrintDocumentAdapter$LayoutResultCallback val$layoutResultCallback -> val$layoutResultCallback
    android.support.v4.print.PrintHelperKitkat$2 this$1 -> this$1
    void onPreExecute() -> onPreExecute
    android.graphics.Bitmap doInBackground(android.net.Uri[]) -> doInBackground
    void onPostExecute(android.graphics.Bitmap) -> onPostExecute
    void onCancelled(android.graphics.Bitmap) -> onCancelled
    void onCancelled(java.lang.Object) -> onCancelled
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
android.support.v4.print.PrintHelperKitkat$2$1$1 -> android.support.v4.print.PrintHelperKitkat$2$1$1:
    android.support.v4.print.PrintHelperKitkat$2$1 this$2 -> this$2
    void onCancel() -> onCancel
android.support.v4.text.BidiFormatter -> android.support.v4.text.BidiFormatter:
    android.support.v4.text.TextDirectionHeuristicCompat DEFAULT_TEXT_DIRECTION_HEURISTIC -> DEFAULT_TEXT_DIRECTION_HEURISTIC
    char LRE -> LRE
    char RLE -> RLE
    char PDF -> PDF
    char LRM -> LRM
    char RLM -> RLM
    java.lang.String LRM_STRING -> LRM_STRING
    java.lang.String RLM_STRING -> RLM_STRING
    java.lang.String EMPTY_STRING -> EMPTY_STRING
    int FLAG_STEREO_RESET -> FLAG_STEREO_RESET
    int DEFAULT_FLAGS -> DEFAULT_FLAGS
    android.support.v4.text.BidiFormatter DEFAULT_LTR_INSTANCE -> DEFAULT_LTR_INSTANCE
    android.support.v4.text.BidiFormatter DEFAULT_RTL_INSTANCE -> DEFAULT_RTL_INSTANCE
    boolean mIsRtlContext -> mIsRtlContext
    int mFlags -> mFlags
    android.support.v4.text.TextDirectionHeuristicCompat mDefaultTextDirectionHeuristicCompat -> mDefaultTextDirectionHeuristicCompat
    int DIR_LTR -> DIR_LTR
    int DIR_UNKNOWN -> DIR_UNKNOWN
    int DIR_RTL -> DIR_RTL
    android.support.v4.text.BidiFormatter getInstance() -> getInstance
    android.support.v4.text.BidiFormatter getInstance(boolean) -> getInstance
    android.support.v4.text.BidiFormatter getInstance(java.util.Locale) -> getInstance
    boolean isRtlContext() -> isRtlContext
    boolean getStereoReset() -> getStereoReset
    java.lang.String markAfter(java.lang.String,android.support.v4.text.TextDirectionHeuristicCompat) -> markAfter
    java.lang.String markBefore(java.lang.String,android.support.v4.text.TextDirectionHeuristicCompat) -> markBefore
    boolean isRtl(java.lang.String) -> isRtl
    java.lang.String unicodeWrap(java.lang.String,android.support.v4.text.TextDirectionHeuristicCompat,boolean) -> unicodeWrap
    java.lang.String unicodeWrap(java.lang.String,android.support.v4.text.TextDirectionHeuristicCompat) -> unicodeWrap
    java.lang.String unicodeWrap(java.lang.String,boolean) -> unicodeWrap
    java.lang.String unicodeWrap(java.lang.String) -> unicodeWrap
    boolean isRtlLocale(java.util.Locale) -> isRtlLocale
    int getExitDir(java.lang.String) -> getExitDir
    int getEntryDir(java.lang.String) -> getEntryDir
    boolean access$000(java.util.Locale) -> access$000
    android.support.v4.text.TextDirectionHeuristicCompat access$100() -> access$100
    android.support.v4.text.BidiFormatter access$200() -> access$200
    android.support.v4.text.BidiFormatter access$300() -> access$300
android.support.v4.text.BidiFormatter$1 -> android.support.v4.text.BidiFormatter$1:
android.support.v4.text.BidiFormatter$Builder -> android.support.v4.text.BidiFormatter$Builder:
    boolean mIsRtlContext -> mIsRtlContext
    int mFlags -> mFlags
    android.support.v4.text.TextDirectionHeuristicCompat mTextDirectionHeuristicCompat -> mTextDirectionHeuristicCompat
    void initialize(boolean) -> initialize
    android.support.v4.text.BidiFormatter$Builder stereoReset(boolean) -> stereoReset
    android.support.v4.text.BidiFormatter$Builder setTextDirectionHeuristic(android.support.v4.text.TextDirectionHeuristicCompat) -> setTextDirectionHeuristic
    android.support.v4.text.BidiFormatter getDefaultInstanceFromContext(boolean) -> getDefaultInstanceFromContext
    android.support.v4.text.BidiFormatter build() -> build
android.support.v4.text.BidiFormatter$DirectionalityEstimator -> android.support.v4.text.BidiFormatter$DirectionalityEstimator:
    int DIR_TYPE_CACHE_SIZE -> DIR_TYPE_CACHE_SIZE
    byte[] DIR_TYPE_CACHE -> DIR_TYPE_CACHE
    java.lang.String text -> text
    boolean isHtml -> isHtml
    int length -> length
    int charIndex -> charIndex
    char lastChar -> lastChar
    int getEntryDir() -> getEntryDir
    int getExitDir() -> getExitDir
    byte getCachedDirectionality(char) -> getCachedDirectionality
    byte dirTypeForward() -> dirTypeForward
    byte dirTypeBackward() -> dirTypeBackward
    byte skipTagForward() -> skipTagForward
    byte skipTagBackward() -> skipTagBackward
    byte skipEntityForward() -> skipEntityForward
    byte skipEntityBackward() -> skipEntityBackward
android.support.v4.text.ICUCompat -> android.support.v4.text.ICUCompat:
    android.support.v4.text.ICUCompat$ICUCompatImpl IMPL -> IMPL
    java.lang.String getScript(java.lang.String) -> getScript
    java.lang.String addLikelySubtags(java.lang.String) -> addLikelySubtags
android.support.v4.text.ICUCompat$ICUCompatImpl -> android.support.v4.text.ICUCompat$ICUCompatImpl:
    java.lang.String getScript(java.lang.String) -> getScript
    java.lang.String addLikelySubtags(java.lang.String) -> addLikelySubtags
android.support.v4.text.ICUCompat$ICUCompatImplBase -> android.support.v4.text.ICUCompat$ICUCompatImplBase:
    java.lang.String getScript(java.lang.String) -> getScript
    java.lang.String addLikelySubtags(java.lang.String) -> addLikelySubtags
android.support.v4.text.ICUCompat$ICUCompatImplIcs -> android.support.v4.text.ICUCompat$ICUCompatImplIcs:
    java.lang.String getScript(java.lang.String) -> getScript
    java.lang.String addLikelySubtags(java.lang.String) -> addLikelySubtags
android.support.v4.text.ICUCompatIcs -> android.support.v4.text.ICUCompatIcs:
    java.lang.String TAG -> TAG
    java.lang.reflect.Method sGetScriptMethod -> sGetScriptMethod
    java.lang.reflect.Method sAddLikelySubtagsMethod -> sAddLikelySubtagsMethod
    java.lang.String getScript(java.lang.String) -> getScript
    java.lang.String addLikelySubtags(java.lang.String) -> addLikelySubtags
android.support.v4.text.TextDirectionHeuristicCompat -> android.support.v4.text.TextDirectionHeuristicCompat:
    boolean isRtl(char[],int,int) -> isRtl
    boolean isRtl(java.lang.CharSequence,int,int) -> isRtl
android.support.v4.text.TextDirectionHeuristicsCompat -> android.support.v4.text.TextDirectionHeuristicsCompat:
    android.support.v4.text.TextDirectionHeuristicCompat LTR -> LTR
    android.support.v4.text.TextDirectionHeuristicCompat RTL -> RTL
    android.support.v4.text.TextDirectionHeuristicCompat FIRSTSTRONG_LTR -> FIRSTSTRONG_LTR
    android.support.v4.text.TextDirectionHeuristicCompat FIRSTSTRONG_RTL -> FIRSTSTRONG_RTL
    android.support.v4.text.TextDirectionHeuristicCompat ANYRTL_LTR -> ANYRTL_LTR
    android.support.v4.text.TextDirectionHeuristicCompat LOCALE -> LOCALE
    int STATE_TRUE -> STATE_TRUE
    int STATE_FALSE -> STATE_FALSE
    int STATE_UNKNOWN -> STATE_UNKNOWN
    int isRtlText(int) -> isRtlText
    int isRtlTextOrFormat(int) -> isRtlTextOrFormat
    int access$100(int) -> access$100
    int access$200(int) -> access$200
android.support.v4.text.TextDirectionHeuristicsCompat$1 -> android.support.v4.text.TextDirectionHeuristicsCompat$1:
android.support.v4.text.TextDirectionHeuristicsCompat$AnyStrong -> android.support.v4.text.TextDirectionHeuristicsCompat$AnyStrong:
    boolean mLookForRtl -> mLookForRtl
    android.support.v4.text.TextDirectionHeuristicsCompat$AnyStrong INSTANCE_RTL -> INSTANCE_RTL
    android.support.v4.text.TextDirectionHeuristicsCompat$AnyStrong INSTANCE_LTR -> INSTANCE_LTR
    int checkRtl(java.lang.CharSequence,int,int) -> checkRtl
android.support.v4.text.TextDirectionHeuristicsCompat$FirstStrong -> android.support.v4.text.TextDirectionHeuristicsCompat$FirstStrong:
    android.support.v4.text.TextDirectionHeuristicsCompat$FirstStrong INSTANCE -> INSTANCE
    int checkRtl(java.lang.CharSequence,int,int) -> checkRtl
android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm -> android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm:
    int checkRtl(java.lang.CharSequence,int,int) -> checkRtl
android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl -> android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl:
    android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm mAlgorithm -> mAlgorithm
    boolean defaultIsRtl() -> defaultIsRtl
    boolean isRtl(char[],int,int) -> isRtl
    boolean isRtl(java.lang.CharSequence,int,int) -> isRtl
    boolean doCheck(java.lang.CharSequence,int,int) -> doCheck
android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicInternal -> android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicInternal:
    boolean mDefaultIsRtl -> mDefaultIsRtl
    boolean defaultIsRtl() -> defaultIsRtl
android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale -> android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale:
    android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale INSTANCE -> INSTANCE
    boolean defaultIsRtl() -> defaultIsRtl
android.support.v4.text.TextUtilsCompat -> android.support.v4.text.TextUtilsCompat:
    java.util.Locale ROOT -> ROOT
    java.lang.String ARAB_SCRIPT_SUBTAG -> ARAB_SCRIPT_SUBTAG
    java.lang.String HEBR_SCRIPT_SUBTAG -> HEBR_SCRIPT_SUBTAG
    java.lang.String htmlEncode(java.lang.String) -> htmlEncode
    int getLayoutDirectionFromLocale(java.util.Locale) -> getLayoutDirectionFromLocale
    int getLayoutDirectionFromFirstChar(java.util.Locale) -> getLayoutDirectionFromFirstChar
android.support.v4.util.ArrayMap -> android.support.v4.util.ArrayMap:
    android.support.v4.util.MapCollections mCollections -> mCollections
    android.support.v4.util.MapCollections getCollection() -> getCollection
    boolean containsAll(java.util.Collection) -> containsAll
    void putAll(java.util.Map) -> putAll
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    java.util.Set entrySet() -> entrySet
    java.util.Set keySet() -> keySet
    java.util.Collection values() -> values
android.support.v4.util.ArrayMap$1 -> android.support.v4.util.ArrayMap$1:
    android.support.v4.util.ArrayMap this$0 -> this$0
    int colGetSize() -> colGetSize
    java.lang.Object colGetEntry(int,int) -> colGetEntry
    int colIndexOfKey(java.lang.Object) -> colIndexOfKey
    int colIndexOfValue(java.lang.Object) -> colIndexOfValue
    java.util.Map colGetMap() -> colGetMap
    void colPut(java.lang.Object,java.lang.Object) -> colPut
    java.lang.Object colSetValue(int,java.lang.Object) -> colSetValue
    void colRemoveAt(int) -> colRemoveAt
    void colClear() -> colClear
android.support.v4.util.AtomicFile -> android.support.v4.util.AtomicFile:
    java.io.File mBaseName -> mBaseName
    java.io.File mBackupName -> mBackupName
    java.io.File getBaseFile() -> getBaseFile
    void delete() -> delete
    java.io.FileOutputStream startWrite() -> startWrite
    void finishWrite(java.io.FileOutputStream) -> finishWrite
    void failWrite(java.io.FileOutputStream) -> failWrite
    java.io.FileInputStream openRead() -> openRead
    byte[] readFully() -> readFully
    boolean sync(java.io.FileOutputStream) -> sync
android.support.v4.util.CircularArray -> android.support.v4.util.CircularArray:
    java.lang.Object[] mElements -> mElements
    int mHead -> mHead
    int mTail -> mTail
    int mCapacityBitmask -> mCapacityBitmask
    void doubleCapacity() -> doubleCapacity
    void addFirst(java.lang.Object) -> addFirst
    void addLast(java.lang.Object) -> addLast
    java.lang.Object popFirst() -> popFirst
    java.lang.Object popLast() -> popLast
    java.lang.Object getFirst() -> getFirst
    java.lang.Object getLast() -> getLast
    java.lang.Object get(int) -> get
    int size() -> size
    boolean isEmpty() -> isEmpty
android.support.v4.util.ContainerHelpers -> android.support.v4.util.ContainerHelpers:
    int[] EMPTY_INTS -> EMPTY_INTS
    long[] EMPTY_LONGS -> EMPTY_LONGS
    java.lang.Object[] EMPTY_OBJECTS -> EMPTY_OBJECTS
    int idealIntArraySize(int) -> idealIntArraySize
    int idealLongArraySize(int) -> idealLongArraySize
    int idealByteArraySize(int) -> idealByteArraySize
    boolean equal(java.lang.Object,java.lang.Object) -> equal
    int binarySearch(int[],int,int) -> binarySearch
    int binarySearch(long[],int,long) -> binarySearch
android.support.v4.util.DebugUtils -> android.support.v4.util.DebugUtils:
    void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> buildShortClassTag
android.support.v4.util.LogWriter -> android.support.v4.util.LogWriter:
    java.lang.String mTag -> mTag
    java.lang.StringBuilder mBuilder -> mBuilder
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void flushBuilder() -> flushBuilder
android.support.v4.util.LongSparseArray -> android.support.v4.util.LongSparseArray:
    java.lang.Object DELETED -> DELETED
    boolean mGarbage -> mGarbage
    long[] mKeys -> mKeys
    java.lang.Object[] mValues -> mValues
    int mSize -> mSize
    android.support.v4.util.LongSparseArray clone() -> clone
    java.lang.Object get(long) -> get
    java.lang.Object get(long,java.lang.Object) -> get
    void delete(long) -> delete
    void remove(long) -> remove
    void removeAt(int) -> removeAt
    void gc() -> gc
    void put(long,java.lang.Object) -> put
    int size() -> size
    long keyAt(int) -> keyAt
    java.lang.Object valueAt(int) -> valueAt
    void setValueAt(int,java.lang.Object) -> setValueAt
    int indexOfKey(long) -> indexOfKey
    int indexOfValue(java.lang.Object) -> indexOfValue
    void clear() -> clear
    void append(long,java.lang.Object) -> append
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
android.support.v4.util.LruCache -> android.support.v4.util.LruCache:
    java.util.LinkedHashMap map -> map
    int size -> size
    int maxSize -> maxSize
    int putCount -> putCount
    int createCount -> createCount
    int evictionCount -> evictionCount
    int hitCount -> hitCount
    int missCount -> missCount
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    void trimToSize(int) -> trimToSize
    java.lang.Object remove(java.lang.Object) -> remove
    void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object) -> entryRemoved
    java.lang.Object create(java.lang.Object) -> create
    int safeSizeOf(java.lang.Object,java.lang.Object) -> safeSizeOf
    int sizeOf(java.lang.Object,java.lang.Object) -> sizeOf
    void evictAll() -> evictAll
    int size() -> size
    int maxSize() -> maxSize
    int hitCount() -> hitCount
    int missCount() -> missCount
    int createCount() -> createCount
    int putCount() -> putCount
    int evictionCount() -> evictionCount
    java.util.Map snapshot() -> snapshot
    java.lang.String toString() -> toString
android.support.v4.util.MapCollections -> android.support.v4.util.MapCollections:
    android.support.v4.util.MapCollections$EntrySet mEntrySet -> mEntrySet
    android.support.v4.util.MapCollections$KeySet mKeySet -> mKeySet
    android.support.v4.util.MapCollections$ValuesCollection mValues -> mValues
    boolean containsAllHelper(java.util.Map,java.util.Collection) -> containsAllHelper
    boolean removeAllHelper(java.util.Map,java.util.Collection) -> removeAllHelper
    boolean retainAllHelper(java.util.Map,java.util.Collection) -> retainAllHelper
    java.lang.Object[] toArrayHelper(int) -> toArrayHelper
    java.lang.Object[] toArrayHelper(java.lang.Object[],int) -> toArrayHelper
    boolean equalsSetHelper(java.util.Set,java.lang.Object) -> equalsSetHelper
    java.util.Set getEntrySet() -> getEntrySet
    java.util.Set getKeySet() -> getKeySet
    java.util.Collection getValues() -> getValues
    int colGetSize() -> colGetSize
    java.lang.Object colGetEntry(int,int) -> colGetEntry
    int colIndexOfKey(java.lang.Object) -> colIndexOfKey
    int colIndexOfValue(java.lang.Object) -> colIndexOfValue
    java.util.Map colGetMap() -> colGetMap
    void colPut(java.lang.Object,java.lang.Object) -> colPut
    java.lang.Object colSetValue(int,java.lang.Object) -> colSetValue
    void colRemoveAt(int) -> colRemoveAt
    void colClear() -> colClear
android.support.v4.util.MapCollections$ArrayIterator -> android.support.v4.util.MapCollections$ArrayIterator:
    int mOffset -> mOffset
    int mSize -> mSize
    int mIndex -> mIndex
    boolean mCanRemove -> mCanRemove
    android.support.v4.util.MapCollections this$0 -> this$0
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
android.support.v4.util.MapCollections$EntrySet -> android.support.v4.util.MapCollections$EntrySet:
    android.support.v4.util.MapCollections this$0 -> this$0
    boolean add(java.util.Map$Entry) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    boolean add(java.lang.Object) -> add
android.support.v4.util.MapCollections$KeySet -> android.support.v4.util.MapCollections$KeySet:
    android.support.v4.util.MapCollections this$0 -> this$0
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
android.support.v4.util.MapCollections$MapIterator -> android.support.v4.util.MapCollections$MapIterator:
    int mEnd -> mEnd
    int mIndex -> mIndex
    boolean mEntryValid -> mEntryValid
    android.support.v4.util.MapCollections this$0 -> this$0
    boolean hasNext() -> hasNext
    java.util.Map$Entry next() -> next
    void remove() -> remove
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.Object next() -> next
android.support.v4.util.MapCollections$ValuesCollection -> android.support.v4.util.MapCollections$ValuesCollection:
    android.support.v4.util.MapCollections this$0 -> this$0
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
android.support.v4.util.Pools -> android.support.v4.util.Pools:
android.support.v4.util.Pools$Pool -> android.support.v4.util.Pools$Pool:
    java.lang.Object acquire() -> acquire
    boolean release(java.lang.Object) -> release
android.support.v4.util.Pools$SimplePool -> android.support.v4.util.Pools$SimplePool:
    java.lang.Object[] mPool -> mPool
    int mPoolSize -> mPoolSize
    java.lang.Object acquire() -> acquire
    boolean release(java.lang.Object) -> release
    boolean isInPool(java.lang.Object) -> isInPool
android.support.v4.util.Pools$SynchronizedPool -> android.support.v4.util.Pools$SynchronizedPool:
    java.lang.Object mLock -> mLock
    java.lang.Object acquire() -> acquire
    boolean release(java.lang.Object) -> release
android.support.v4.util.SimpleArrayMap -> android.support.v4.util.SimpleArrayMap:
    boolean DEBUG -> DEBUG
    java.lang.String TAG -> TAG
    int BASE_SIZE -> BASE_SIZE
    int CACHE_SIZE -> CACHE_SIZE
    java.lang.Object[] mBaseCache -> mBaseCache
    int mBaseCacheSize -> mBaseCacheSize
    java.lang.Object[] mTwiceBaseCache -> mTwiceBaseCache
    int mTwiceBaseCacheSize -> mTwiceBaseCacheSize
    int[] mHashes -> mHashes
    java.lang.Object[] mArray -> mArray
    int mSize -> mSize
    int indexOf(java.lang.Object,int) -> indexOf
    int indexOfNull() -> indexOfNull
    void allocArrays(int) -> allocArrays
    void freeArrays(int[],java.lang.Object[],int) -> freeArrays
    void clear() -> clear
    void ensureCapacity(int) -> ensureCapacity
    boolean containsKey(java.lang.Object) -> containsKey
    int indexOfValue(java.lang.Object) -> indexOfValue
    boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object keyAt(int) -> keyAt
    java.lang.Object valueAt(int) -> valueAt
    java.lang.Object setValueAt(int,java.lang.Object) -> setValueAt
    boolean isEmpty() -> isEmpty
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    void putAll(android.support.v4.util.SimpleArrayMap) -> putAll
    java.lang.Object remove(java.lang.Object) -> remove
    java.lang.Object removeAt(int) -> removeAt
    int size() -> size
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
android.support.v4.util.SparseArrayCompat -> android.support.v4.util.SparseArrayCompat:
    java.lang.Object DELETED -> DELETED
    boolean mGarbage -> mGarbage
    int[] mKeys -> mKeys
    java.lang.Object[] mValues -> mValues
    int mSize -> mSize
    android.support.v4.util.SparseArrayCompat clone() -> clone
    java.lang.Object get(int) -> get
    java.lang.Object get(int,java.lang.Object) -> get
    void delete(int) -> delete
    void remove(int) -> remove
    void removeAt(int) -> removeAt
    void removeAtRange(int,int) -> removeAtRange
    void gc() -> gc
    void put(int,java.lang.Object) -> put
    int size() -> size
    int keyAt(int) -> keyAt
    java.lang.Object valueAt(int) -> valueAt
    void setValueAt(int,java.lang.Object) -> setValueAt
    int indexOfKey(int) -> indexOfKey
    int indexOfValue(java.lang.Object) -> indexOfValue
    void clear() -> clear
    void append(int,java.lang.Object) -> append
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
android.support.v4.util.TimeUtils -> android.support.v4.util.TimeUtils:
    int HUNDRED_DAY_FIELD_LEN -> HUNDRED_DAY_FIELD_LEN
    int SECONDS_PER_MINUTE -> SECONDS_PER_MINUTE
    int SECONDS_PER_HOUR -> SECONDS_PER_HOUR
    int SECONDS_PER_DAY -> SECONDS_PER_DAY
    java.lang.Object sFormatSync -> sFormatSync
    char[] sFormatStr -> sFormatStr
    int accumField(int,int,boolean,int) -> accumField
    int printField(char[],int,char,int,boolean,int) -> printField
    int formatDurationLocked(long,int) -> formatDurationLocked
    void formatDuration(long,java.lang.StringBuilder) -> formatDuration
    void formatDuration(long,java.io.PrintWriter,int) -> formatDuration
    void formatDuration(long,java.io.PrintWriter) -> formatDuration
    void formatDuration(long,long,java.io.PrintWriter) -> formatDuration
android.support.v4.view.AccessibilityDelegateCompat -> android.support.v4.view.AccessibilityDelegateCompat:
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl IMPL -> IMPL
    java.lang.Object DEFAULT_DELEGATE -> DEFAULT_DELEGATE
    java.lang.Object mBridge -> mBridge
    java.lang.Object getBridge() -> getBridge
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> newAccessiblityDelegateDefaultImpl
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> newAccessiblityDelegateBridge
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1 -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> val$compat
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl this$0 -> this$0
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> newAccessiblityDelegateDefaultImpl
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> newAccessiblityDelegateBridge
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl:
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> newAccessiblityDelegateBridge
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1 -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> val$compat
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl this$0 -> this$0
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> newAccessiblityDelegateDefaultImpl
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> newAccessiblityDelegateBridge
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompatIcs -> android.support.v4.view.AccessibilityDelegateCompatIcs:
    java.lang.Object newAccessibilityDelegateDefaultImpl() -> newAccessibilityDelegateDefaultImpl
    java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge) -> newAccessibilityDelegateBridge
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatIcs$1 -> android.support.v4.view.AccessibilityDelegateCompatIcs$1:
    android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge val$bridge -> val$bridge
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge -> android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatJellyBean -> android.support.v4.view.AccessibilityDelegateCompatJellyBean:
    java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean) -> newAccessibilityDelegateBridge
    java.lang.Object getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompatJellyBean$1 -> android.support.v4.view.AccessibilityDelegateCompatJellyBean$1:
    android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean val$bridge -> val$bridge
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean -> android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.ActionProvider -> android.support.v4.view.ActionProvider:
    java.lang.String TAG -> TAG
    android.content.Context mContext -> mContext
    android.support.v4.view.ActionProvider$SubUiVisibilityListener mSubUiVisibilityListener -> mSubUiVisibilityListener
    android.support.v4.view.ActionProvider$VisibilityListener mVisibilityListener -> mVisibilityListener
    android.content.Context getContext() -> getContext
    android.view.View onCreateActionView() -> onCreateActionView
    android.view.View onCreateActionView(android.view.MenuItem) -> onCreateActionView
    boolean overridesItemVisibility() -> overridesItemVisibility
    boolean isVisible() -> isVisible
    void refreshVisibility() -> refreshVisibility
    boolean onPerformDefaultAction() -> onPerformDefaultAction
    boolean hasSubMenu() -> hasSubMenu
    void onPrepareSubMenu(android.view.SubMenu) -> onPrepareSubMenu
    void subUiVisibilityChanged(boolean) -> subUiVisibilityChanged
    void setSubUiVisibilityListener(android.support.v4.view.ActionProvider$SubUiVisibilityListener) -> setSubUiVisibilityListener
    void setVisibilityListener(android.support.v4.view.ActionProvider$VisibilityListener) -> setVisibilityListener
android.support.v4.view.ActionProvider$SubUiVisibilityListener -> android.support.v4.view.ActionProvider$SubUiVisibilityListener:
    void onSubUiVisibilityChanged(boolean) -> onSubUiVisibilityChanged
android.support.v4.view.ActionProvider$VisibilityListener -> android.support.v4.view.ActionProvider$VisibilityListener:
    void onActionProviderVisibilityChanged(boolean) -> onActionProviderVisibilityChanged
android.support.v4.view.GestureDetectorCompat -> android.support.v4.view.GestureDetectorCompat:
    android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImpl mImpl -> mImpl
    boolean isLongpressEnabled() -> isLongpressEnabled
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImpl -> android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImpl:
    boolean isLongpressEnabled() -> isLongpressEnabled
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase -> android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase:
    int mTouchSlopSquare -> mTouchSlopSquare
    int mDoubleTapSlopSquare -> mDoubleTapSlopSquare
    int mMinimumFlingVelocity -> mMinimumFlingVelocity
    int mMaximumFlingVelocity -> mMaximumFlingVelocity
    int LONGPRESS_TIMEOUT -> LONGPRESS_TIMEOUT
    int TAP_TIMEOUT -> TAP_TIMEOUT
    int DOUBLE_TAP_TIMEOUT -> DOUBLE_TAP_TIMEOUT
    int SHOW_PRESS -> SHOW_PRESS
    int LONG_PRESS -> LONG_PRESS
    int TAP -> TAP
    android.os.Handler mHandler -> mHandler
    android.view.GestureDetector$OnGestureListener mListener -> mListener
    android.view.GestureDetector$OnDoubleTapListener mDoubleTapListener -> mDoubleTapListener
    boolean mStillDown -> mStillDown
    boolean mDeferConfirmSingleTap -> mDeferConfirmSingleTap
    boolean mInLongPress -> mInLongPress
    boolean mAlwaysInTapRegion -> mAlwaysInTapRegion
    boolean mAlwaysInBiggerTapRegion -> mAlwaysInBiggerTapRegion
    android.view.MotionEvent mCurrentDownEvent -> mCurrentDownEvent
    android.view.MotionEvent mPreviousUpEvent -> mPreviousUpEvent
    boolean mIsDoubleTapping -> mIsDoubleTapping
    float mLastFocusX -> mLastFocusX
    float mLastFocusY -> mLastFocusY
    float mDownFocusX -> mDownFocusX
    float mDownFocusY -> mDownFocusY
    boolean mIsLongpressEnabled -> mIsLongpressEnabled
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    void init(android.content.Context) -> init
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
    void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    boolean isLongpressEnabled() -> isLongpressEnabled
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void cancel() -> cancel
    void cancelTaps() -> cancelTaps
    boolean isConsideredDoubleTap(android.view.MotionEvent,android.view.MotionEvent,android.view.MotionEvent) -> isConsideredDoubleTap
    void dispatchLongPress() -> dispatchLongPress
    android.view.MotionEvent access$000(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> access$000
    android.view.GestureDetector$OnGestureListener access$100(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> access$100
    void access$200(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> access$200
    android.view.GestureDetector$OnDoubleTapListener access$300(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> access$300
    boolean access$400(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> access$400
    boolean access$502(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase,boolean) -> access$502
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase$GestureHandler -> android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase$GestureHandler:
    android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplJellybeanMr2 -> android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplJellybeanMr2:
    android.view.GestureDetector mDetector -> mDetector
    boolean isLongpressEnabled() -> isLongpressEnabled
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
android.support.v4.view.GravityCompat -> android.support.v4.view.GravityCompat:
    android.support.v4.view.GravityCompat$GravityCompatImpl IMPL -> IMPL
    int RELATIVE_LAYOUT_DIRECTION -> RELATIVE_LAYOUT_DIRECTION
    int START -> START
    int END -> END
    int RELATIVE_HORIZONTAL_GRAVITY_MASK -> RELATIVE_HORIZONTAL_GRAVITY_MASK
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> apply
    void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> applyDisplay
    int getAbsoluteGravity(int,int) -> getAbsoluteGravity
android.support.v4.view.GravityCompat$GravityCompatImpl -> android.support.v4.view.GravityCompat$GravityCompatImpl:
    int getAbsoluteGravity(int,int) -> getAbsoluteGravity
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> apply
    void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> applyDisplay
android.support.v4.view.GravityCompat$GravityCompatImplBase -> android.support.v4.view.GravityCompat$GravityCompatImplBase:
    int getAbsoluteGravity(int,int) -> getAbsoluteGravity
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> apply
    void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> applyDisplay
android.support.v4.view.GravityCompat$GravityCompatImplJellybeanMr1 -> android.support.v4.view.GravityCompat$GravityCompatImplJellybeanMr1:
    int getAbsoluteGravity(int,int) -> getAbsoluteGravity
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> apply
    void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> applyDisplay
android.support.v4.view.GravityCompatJellybeanMr1 -> android.support.v4.view.GravityCompatJellybeanMr1:
    int getAbsoluteGravity(int,int) -> getAbsoluteGravity
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> apply
    void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> applyDisplay
android.support.v4.view.KeyEventCompat -> android.support.v4.view.KeyEventCompat:
    android.support.v4.view.KeyEventCompat$KeyEventVersionImpl IMPL -> IMPL
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
    boolean hasModifiers(android.view.KeyEvent,int) -> hasModifiers
    boolean hasNoModifiers(android.view.KeyEvent) -> hasNoModifiers
    void startTracking(android.view.KeyEvent) -> startTracking
    boolean isTracking(android.view.KeyEvent) -> isTracking
    java.lang.Object getKeyDispatcherState(android.view.View) -> getKeyDispatcherState
    boolean dispatch(android.view.KeyEvent,android.view.KeyEvent$Callback,java.lang.Object,java.lang.Object) -> dispatch
android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl -> android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl:
    int META_MODIFIER_MASK -> META_MODIFIER_MASK
    int META_ALL_MASK -> META_ALL_MASK
    int metaStateFilterDirectionalModifiers(int,int,int,int,int) -> metaStateFilterDirectionalModifiers
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
    void startTracking(android.view.KeyEvent) -> startTracking
    boolean isTracking(android.view.KeyEvent) -> isTracking
    java.lang.Object getKeyDispatcherState(android.view.View) -> getKeyDispatcherState
    boolean dispatch(android.view.KeyEvent,android.view.KeyEvent$Callback,java.lang.Object,java.lang.Object) -> dispatch
android.support.v4.view.KeyEventCompat$EclairKeyEventVersionImpl -> android.support.v4.view.KeyEventCompat$EclairKeyEventVersionImpl:
    void startTracking(android.view.KeyEvent) -> startTracking
    boolean isTracking(android.view.KeyEvent) -> isTracking
    java.lang.Object getKeyDispatcherState(android.view.View) -> getKeyDispatcherState
    boolean dispatch(android.view.KeyEvent,android.view.KeyEvent$Callback,java.lang.Object,java.lang.Object) -> dispatch
android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl -> android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl:
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
android.support.v4.view.KeyEventCompat$KeyEventVersionImpl -> android.support.v4.view.KeyEventCompat$KeyEventVersionImpl:
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
    void startTracking(android.view.KeyEvent) -> startTracking
    boolean isTracking(android.view.KeyEvent) -> isTracking
    java.lang.Object getKeyDispatcherState(android.view.View) -> getKeyDispatcherState
    boolean dispatch(android.view.KeyEvent,android.view.KeyEvent$Callback,java.lang.Object,java.lang.Object) -> dispatch
android.support.v4.view.KeyEventCompatEclair -> android.support.v4.view.KeyEventCompatEclair:
    java.lang.Object getKeyDispatcherState(android.view.View) -> getKeyDispatcherState
    boolean dispatch(android.view.KeyEvent,android.view.KeyEvent$Callback,java.lang.Object,java.lang.Object) -> dispatch
    void startTracking(android.view.KeyEvent) -> startTracking
    boolean isTracking(android.view.KeyEvent) -> isTracking
android.support.v4.view.KeyEventCompatHoneycomb -> android.support.v4.view.KeyEventCompatHoneycomb:
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
android.support.v4.view.MarginLayoutParamsCompat -> android.support.v4.view.MarginLayoutParamsCompat:
    android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImpl IMPL -> IMPL
    int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> getMarginStart
    int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> getMarginEnd
    void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginStart
    void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginEnd
    boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams) -> isMarginRelative
    int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams) -> getLayoutDirection
    void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> setLayoutDirection
    void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> resolveLayoutDirection
android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImpl -> android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImpl:
    int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> getMarginStart
    int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> getMarginEnd
    void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginStart
    void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginEnd
    boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams) -> isMarginRelative
    int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams) -> getLayoutDirection
    void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> setLayoutDirection
    void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> resolveLayoutDirection
android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImplBase -> android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImplBase:
    int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> getMarginStart
    int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> getMarginEnd
    void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginStart
    void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginEnd
    boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams) -> isMarginRelative
    int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams) -> getLayoutDirection
    void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> setLayoutDirection
    void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> resolveLayoutDirection
android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImplJbMr1 -> android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImplJbMr1:
    int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> getMarginStart
    int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> getMarginEnd
    void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginStart
    void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginEnd
    boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams) -> isMarginRelative
    int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams) -> getLayoutDirection
    void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> setLayoutDirection
    void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> resolveLayoutDirection
android.support.v4.view.MarginLayoutParamsCompatJellybeanMr1 -> android.support.v4.view.MarginLayoutParamsCompatJellybeanMr1:
    int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> getMarginStart
    int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> getMarginEnd
    void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginStart
    void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginEnd
    boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams) -> isMarginRelative
    int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams) -> getLayoutDirection
    void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> setLayoutDirection
    void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> resolveLayoutDirection
android.support.v4.view.MenuCompat -> android.support.v4.view.MenuCompat:
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
android.support.v4.view.MenuItemCompat -> android.support.v4.view.MenuItemCompat:
    java.lang.String TAG -> TAG
    int SHOW_AS_ACTION_NEVER -> SHOW_AS_ACTION_NEVER
    int SHOW_AS_ACTION_IF_ROOM -> SHOW_AS_ACTION_IF_ROOM
    int SHOW_AS_ACTION_ALWAYS -> SHOW_AS_ACTION_ALWAYS
    int SHOW_AS_ACTION_WITH_TEXT -> SHOW_AS_ACTION_WITH_TEXT
    int SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW -> SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW
    android.support.v4.view.MenuItemCompat$MenuVersionImpl IMPL -> IMPL
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
    android.view.MenuItem setActionView(android.view.MenuItem,int) -> setActionView
    android.view.View getActionView(android.view.MenuItem) -> getActionView
    android.view.MenuItem setActionProvider(android.view.MenuItem,android.support.v4.view.ActionProvider) -> setActionProvider
    android.support.v4.view.ActionProvider getActionProvider(android.view.MenuItem) -> getActionProvider
    boolean expandActionView(android.view.MenuItem) -> expandActionView
    boolean collapseActionView(android.view.MenuItem) -> collapseActionView
    boolean isActionViewExpanded(android.view.MenuItem) -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setOnActionExpandListener
android.support.v4.view.MenuItemCompat$BaseMenuVersionImpl -> android.support.v4.view.MenuItemCompat$BaseMenuVersionImpl:
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
    android.view.MenuItem setActionView(android.view.MenuItem,int) -> setActionView
    android.view.View getActionView(android.view.MenuItem) -> getActionView
    boolean expandActionView(android.view.MenuItem) -> expandActionView
    boolean collapseActionView(android.view.MenuItem) -> collapseActionView
    boolean isActionViewExpanded(android.view.MenuItem) -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setOnActionExpandListener
android.support.v4.view.MenuItemCompat$HoneycombMenuVersionImpl -> android.support.v4.view.MenuItemCompat$HoneycombMenuVersionImpl:
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
    android.view.MenuItem setActionView(android.view.MenuItem,int) -> setActionView
    android.view.View getActionView(android.view.MenuItem) -> getActionView
    boolean expandActionView(android.view.MenuItem) -> expandActionView
    boolean collapseActionView(android.view.MenuItem) -> collapseActionView
    boolean isActionViewExpanded(android.view.MenuItem) -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setOnActionExpandListener
android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl -> android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl:
    boolean expandActionView(android.view.MenuItem) -> expandActionView
    boolean collapseActionView(android.view.MenuItem) -> collapseActionView
    boolean isActionViewExpanded(android.view.MenuItem) -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setOnActionExpandListener
android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl$1 -> android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl$1:
    android.support.v4.view.MenuItemCompat$OnActionExpandListener val$listener -> val$listener
    android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl this$0 -> this$0
    boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
    boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
android.support.v4.view.MenuItemCompat$MenuVersionImpl -> android.support.v4.view.MenuItemCompat$MenuVersionImpl:
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
    android.view.MenuItem setActionView(android.view.MenuItem,int) -> setActionView
    android.view.View getActionView(android.view.MenuItem) -> getActionView
    boolean expandActionView(android.view.MenuItem) -> expandActionView
    boolean collapseActionView(android.view.MenuItem) -> collapseActionView
    boolean isActionViewExpanded(android.view.MenuItem) -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setOnActionExpandListener
android.support.v4.view.MenuItemCompat$OnActionExpandListener -> android.support.v4.view.MenuItemCompat$OnActionExpandListener:
    boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
    boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
android.support.v4.view.MenuItemCompatHoneycomb -> android.support.v4.view.MenuItemCompatHoneycomb:
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
    android.view.MenuItem setActionView(android.view.MenuItem,int) -> setActionView
    android.view.View getActionView(android.view.MenuItem) -> getActionView
android.support.v4.view.MenuItemCompatIcs -> android.support.v4.view.MenuItemCompatIcs:
    boolean expandActionView(android.view.MenuItem) -> expandActionView
    boolean collapseActionView(android.view.MenuItem) -> collapseActionView
    boolean isActionViewExpanded(android.view.MenuItem) -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompatIcs$SupportActionExpandProxy) -> setOnActionExpandListener
android.support.v4.view.MenuItemCompatIcs$OnActionExpandListenerWrapper -> android.support.v4.view.MenuItemCompatIcs$OnActionExpandListenerWrapper:
    android.support.v4.view.MenuItemCompatIcs$SupportActionExpandProxy mWrapped -> mWrapped
    boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
    boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
android.support.v4.view.MenuItemCompatIcs$SupportActionExpandProxy -> android.support.v4.view.MenuItemCompatIcs$SupportActionExpandProxy:
    boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
    boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
android.support.v4.view.MotionEventCompat -> android.support.v4.view.MotionEventCompat:
    android.support.v4.view.MotionEventCompat$MotionEventVersionImpl IMPL -> IMPL
    int ACTION_MASK -> ACTION_MASK
    int ACTION_POINTER_DOWN -> ACTION_POINTER_DOWN
    int ACTION_POINTER_UP -> ACTION_POINTER_UP
    int ACTION_HOVER_MOVE -> ACTION_HOVER_MOVE
    int ACTION_SCROLL -> ACTION_SCROLL
    int ACTION_POINTER_INDEX_MASK -> ACTION_POINTER_INDEX_MASK
    int ACTION_POINTER_INDEX_SHIFT -> ACTION_POINTER_INDEX_SHIFT
    int ACTION_HOVER_ENTER -> ACTION_HOVER_ENTER
    int ACTION_HOVER_EXIT -> ACTION_HOVER_EXIT
    int getActionMasked(android.view.MotionEvent) -> getActionMasked
    int getActionIndex(android.view.MotionEvent) -> getActionIndex
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl -> android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl:
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl -> android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl:
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.MotionEventCompat$MotionEventVersionImpl -> android.support.v4.view.MotionEventCompat$MotionEventVersionImpl:
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.MotionEventCompatEclair -> android.support.v4.view.MotionEventCompatEclair:
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.PagerAdapter -> android.support.v4.view.PagerAdapter:
    android.database.DataSetObservable mObservable -> mObservable
    int POSITION_UNCHANGED -> POSITION_UNCHANGED
    int POSITION_NONE -> POSITION_NONE
    int getCount() -> getCount
    void startUpdate(android.view.ViewGroup) -> startUpdate
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.ViewGroup) -> finishUpdate
    void startUpdate(android.view.View) -> startUpdate
    java.lang.Object instantiateItem(android.view.View,int) -> instantiateItem
    void destroyItem(android.view.View,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.View,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.View) -> finishUpdate
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    android.os.Parcelable saveState() -> saveState
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
    int getItemPosition(java.lang.Object) -> getItemPosition
    void notifyDataSetChanged() -> notifyDataSetChanged
    void registerDataSetObserver(android.database.DataSetObserver) -> registerDataSetObserver
    void unregisterDataSetObserver(android.database.DataSetObserver) -> unregisterDataSetObserver
    java.lang.CharSequence getPageTitle(int) -> getPageTitle
    float getPageWidth(int) -> getPageWidth
android.support.v4.view.PagerTabStrip -> android.support.v4.view.PagerTabStrip:
    java.lang.String TAG -> TAG
    int INDICATOR_HEIGHT -> INDICATOR_HEIGHT
    int MIN_PADDING_BOTTOM -> MIN_PADDING_BOTTOM
    int TAB_PADDING -> TAB_PADDING
    int TAB_SPACING -> TAB_SPACING
    int MIN_TEXT_SPACING -> MIN_TEXT_SPACING
    int FULL_UNDERLINE_HEIGHT -> FULL_UNDERLINE_HEIGHT
    int MIN_STRIP_HEIGHT -> MIN_STRIP_HEIGHT
    int mIndicatorColor -> mIndicatorColor
    int mIndicatorHeight -> mIndicatorHeight
    int mMinPaddingBottom -> mMinPaddingBottom
    int mMinTextSpacing -> mMinTextSpacing
    int mMinStripHeight -> mMinStripHeight
    int mTabPadding -> mTabPadding
    android.graphics.Paint mTabPaint -> mTabPaint
    android.graphics.Rect mTempRect -> mTempRect
    int mTabAlpha -> mTabAlpha
    boolean mDrawFullUnderline -> mDrawFullUnderline
    boolean mDrawFullUnderlineSet -> mDrawFullUnderlineSet
    int mFullUnderlineHeight -> mFullUnderlineHeight
    boolean mIgnoreTap -> mIgnoreTap
    float mInitialMotionX -> mInitialMotionX
    float mInitialMotionY -> mInitialMotionY
    int mTouchSlop -> mTouchSlop
    void setTabIndicatorColor(int) -> setTabIndicatorColor
    void setTabIndicatorColorResource(int) -> setTabIndicatorColorResource
    int getTabIndicatorColor() -> getTabIndicatorColor
    void setPadding(int,int,int,int) -> setPadding
    void setTextSpacing(int) -> setTextSpacing
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    void setBackgroundColor(int) -> setBackgroundColor
    void setBackgroundResource(int) -> setBackgroundResource
    void setDrawFullUnderline(boolean) -> setDrawFullUnderline
    boolean getDrawFullUnderline() -> getDrawFullUnderline
    int getMinHeight() -> getMinHeight
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onDraw(android.graphics.Canvas) -> onDraw
    void updateTextPositions(int,float,boolean) -> updateTextPositions
android.support.v4.view.PagerTabStrip$1 -> android.support.v4.view.PagerTabStrip$1:
    android.support.v4.view.PagerTabStrip this$0 -> this$0
    void onClick(android.view.View) -> onClick
android.support.v4.view.PagerTabStrip$2 -> android.support.v4.view.PagerTabStrip$2:
    android.support.v4.view.PagerTabStrip this$0 -> this$0
    void onClick(android.view.View) -> onClick
android.support.v4.view.PagerTitleStrip -> android.support.v4.view.PagerTitleStrip:
    java.lang.String TAG -> TAG
    android.support.v4.view.ViewPager mPager -> mPager
    android.widget.TextView mPrevText -> mPrevText
    android.widget.TextView mCurrText -> mCurrText
    android.widget.TextView mNextText -> mNextText
    int mLastKnownCurrentPage -> mLastKnownCurrentPage
    float mLastKnownPositionOffset -> mLastKnownPositionOffset
    int mScaledTextSpacing -> mScaledTextSpacing
    int mGravity -> mGravity
    boolean mUpdatingText -> mUpdatingText
    boolean mUpdatingPositions -> mUpdatingPositions
    android.support.v4.view.PagerTitleStrip$PageListener mPageListener -> mPageListener
    java.lang.ref.WeakReference mWatchingAdapter -> mWatchingAdapter
    int[] ATTRS -> ATTRS
    int[] TEXT_ATTRS -> TEXT_ATTRS
    float SIDE_ALPHA -> SIDE_ALPHA
    int TEXT_SPACING -> TEXT_SPACING
    int mNonPrimaryAlpha -> mNonPrimaryAlpha
    int mTextColor -> mTextColor
    android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl IMPL -> IMPL
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
    void setTextSpacing(int) -> setTextSpacing
    int getTextSpacing() -> getTextSpacing
    void setNonPrimaryAlpha(float) -> setNonPrimaryAlpha
    void setTextColor(int) -> setTextColor
    void setTextSize(int,float) -> setTextSize
    void setGravity(int) -> setGravity
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void updateText(int,android.support.v4.view.PagerAdapter) -> updateText
    void requestLayout() -> requestLayout
    void updateAdapter(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> updateAdapter
    void updateTextPositions(int,float,boolean) -> updateTextPositions
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    int getMinHeight() -> getMinHeight
    float access$100(android.support.v4.view.PagerTitleStrip) -> access$100
android.support.v4.view.PagerTitleStrip$1 -> android.support.v4.view.PagerTitleStrip$1:
android.support.v4.view.PagerTitleStrip$PageListener -> android.support.v4.view.PagerTitleStrip$PageListener:
    int mScrollState -> mScrollState
    android.support.v4.view.PagerTitleStrip this$0 -> this$0
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> onAdapterChanged
    void onChanged() -> onChanged
android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl -> android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl:
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
android.support.v4.view.PagerTitleStrip$PagerTitleStripImplBase -> android.support.v4.view.PagerTitleStrip$PagerTitleStripImplBase:
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
android.support.v4.view.PagerTitleStrip$PagerTitleStripImplIcs -> android.support.v4.view.PagerTitleStrip$PagerTitleStripImplIcs:
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
android.support.v4.view.PagerTitleStripIcs -> android.support.v4.view.PagerTitleStripIcs:
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
android.support.v4.view.PagerTitleStripIcs$SingleLineAllCapsTransform -> android.support.v4.view.PagerTitleStripIcs$SingleLineAllCapsTransform:
    java.lang.String TAG -> TAG
    java.util.Locale mLocale -> mLocale
    java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View) -> getTransformation
android.support.v4.view.ScaleGestureDetectorCompat -> android.support.v4.view.ScaleGestureDetectorCompat:
    android.support.v4.view.ScaleGestureDetectorCompat$ScaleGestureDetectorImpl IMPL -> IMPL
    void setQuickScaleEnabled(java.lang.Object,boolean) -> setQuickScaleEnabled
    boolean isQuickScaleEnabled(java.lang.Object) -> isQuickScaleEnabled
android.support.v4.view.ScaleGestureDetectorCompat$1 -> android.support.v4.view.ScaleGestureDetectorCompat$1:
android.support.v4.view.ScaleGestureDetectorCompat$BaseScaleGestureDetectorImpl -> android.support.v4.view.ScaleGestureDetectorCompat$BaseScaleGestureDetectorImpl:
    void setQuickScaleEnabled(java.lang.Object,boolean) -> setQuickScaleEnabled
    boolean isQuickScaleEnabled(java.lang.Object) -> isQuickScaleEnabled
android.support.v4.view.ScaleGestureDetectorCompat$ScaleGestureDetectorCompatKitKatImpl -> android.support.v4.view.ScaleGestureDetectorCompat$ScaleGestureDetectorCompatKitKatImpl:
    void setQuickScaleEnabled(java.lang.Object,boolean) -> setQuickScaleEnabled
    boolean isQuickScaleEnabled(java.lang.Object) -> isQuickScaleEnabled
android.support.v4.view.ScaleGestureDetectorCompat$ScaleGestureDetectorImpl -> android.support.v4.view.ScaleGestureDetectorCompat$ScaleGestureDetectorImpl:
    void setQuickScaleEnabled(java.lang.Object,boolean) -> setQuickScaleEnabled
    boolean isQuickScaleEnabled(java.lang.Object) -> isQuickScaleEnabled
android.support.v4.view.ScaleGestureDetectorCompatKitKat -> android.support.v4.view.ScaleGestureDetectorCompatKitKat:
    void setQuickScaleEnabled(java.lang.Object,boolean) -> setQuickScaleEnabled
    boolean isQuickScaleEnabled(java.lang.Object) -> isQuickScaleEnabled
android.support.v4.view.VelocityTrackerCompat -> android.support.v4.view.VelocityTrackerCompat:
    android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl IMPL -> IMPL
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl -> android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl:
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl -> android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl:
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl -> android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl:
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.VelocityTrackerCompatHoneycomb -> android.support.v4.view.VelocityTrackerCompatHoneycomb:
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.ViewCompat -> android.support.v4.view.ViewCompat:
    java.lang.String TAG -> TAG
    int OVER_SCROLL_ALWAYS -> OVER_SCROLL_ALWAYS
    int OVER_SCROLL_IF_CONTENT_SCROLLS -> OVER_SCROLL_IF_CONTENT_SCROLLS
    int OVER_SCROLL_NEVER -> OVER_SCROLL_NEVER
    long FAKE_FRAME_TIME -> FAKE_FRAME_TIME
    int IMPORTANT_FOR_ACCESSIBILITY_AUTO -> IMPORTANT_FOR_ACCESSIBILITY_AUTO
    int IMPORTANT_FOR_ACCESSIBILITY_YES -> IMPORTANT_FOR_ACCESSIBILITY_YES
    int IMPORTANT_FOR_ACCESSIBILITY_NO -> IMPORTANT_FOR_ACCESSIBILITY_NO
    int IMPORTANT_FOR_ACCESSIBILITY_NO_HIDE_DESCENDANTS -> IMPORTANT_FOR_ACCESSIBILITY_NO_HIDE_DESCENDANTS
    int ACCESSIBILITY_LIVE_REGION_NONE -> ACCESSIBILITY_LIVE_REGION_NONE
    int ACCESSIBILITY_LIVE_REGION_POLITE -> ACCESSIBILITY_LIVE_REGION_POLITE
    int ACCESSIBILITY_LIVE_REGION_ASSERTIVE -> ACCESSIBILITY_LIVE_REGION_ASSERTIVE
    int LAYER_TYPE_NONE -> LAYER_TYPE_NONE
    int LAYER_TYPE_SOFTWARE -> LAYER_TYPE_SOFTWARE
    int LAYER_TYPE_HARDWARE -> LAYER_TYPE_HARDWARE
    int LAYOUT_DIRECTION_LTR -> LAYOUT_DIRECTION_LTR
    int LAYOUT_DIRECTION_RTL -> LAYOUT_DIRECTION_RTL
    int LAYOUT_DIRECTION_INHERIT -> LAYOUT_DIRECTION_INHERIT
    int LAYOUT_DIRECTION_LOCALE -> LAYOUT_DIRECTION_LOCALE
    int MEASURED_SIZE_MASK -> MEASURED_SIZE_MASK
    int MEASURED_STATE_MASK -> MEASURED_STATE_MASK
    int MEASURED_HEIGHT_STATE_SHIFT -> MEASURED_HEIGHT_STATE_SHIFT
    int MEASURED_STATE_TOO_SMALL -> MEASURED_STATE_TOO_SMALL
    android.support.v4.view.ViewCompat$ViewCompatImpl IMPL -> IMPL
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    float getAlpha(android.view.View) -> getAlpha
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int getLayoutDirection(android.view.View) -> getLayoutDirection
    void setLayoutDirection(android.view.View,int) -> setLayoutDirection
    android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
    boolean isOpaque(android.view.View) -> isOpaque
    int resolveSizeAndState(int,int,int) -> resolveSizeAndState
    int getMeasuredWidthAndState(android.view.View) -> getMeasuredWidthAndState
    int getMeasuredHeightAndState(android.view.View) -> getMeasuredHeightAndState
    int getMeasuredState(android.view.View) -> getMeasuredState
    int getAccessibilityLiveRegion(android.view.View) -> getAccessibilityLiveRegion
    void setAccessibilityLiveRegion(android.view.View,int) -> setAccessibilityLiveRegion
    int getPaddingStart(android.view.View) -> getPaddingStart
    int getPaddingEnd(android.view.View) -> getPaddingEnd
    void setPaddingRelative(android.view.View,int,int,int,int) -> setPaddingRelative
    void dispatchStartTemporaryDetach(android.view.View) -> dispatchStartTemporaryDetach
    void dispatchFinishTemporaryDetach(android.view.View) -> dispatchFinishTemporaryDetach
    float getTranslationX(android.view.View) -> getTranslationX
    float getTranslationY(android.view.View) -> getTranslationY
    int getMinimumWidth(android.view.View) -> getMinimumWidth
    int getMinimumHeight(android.view.View) -> getMinimumHeight
    android.support.v4.view.ViewPropertyAnimatorCompat animate(android.view.View) -> animate
    void setTranslationX(android.view.View,float) -> setTranslationX
    void setTranslationY(android.view.View,float) -> setTranslationY
    void setAlpha(android.view.View,float) -> setAlpha
    void setX(android.view.View,float) -> setX
    void setY(android.view.View,float) -> setY
    void setRotation(android.view.View,float) -> setRotation
    void setRotationX(android.view.View,float) -> setRotationX
    void setRotationY(android.view.View,float) -> setRotationY
    void setScaleX(android.view.View,float) -> setScaleX
    void setScaleY(android.view.View,float) -> setScaleY
    float getPivotX(android.view.View) -> getPivotX
    void setPivotX(android.view.View,float) -> setPivotX
    float getPivotY(android.view.View) -> getPivotY
    void setPivotY(android.view.View,float) -> setPivotY
    float getRotation(android.view.View) -> getRotation
    float getRotationX(android.view.View) -> getRotationX
    float getRotationY(android.view.View) -> getRotationY
    float getScaleX(android.view.View) -> getScaleX
    float getScaleY(android.view.View) -> getScaleY
    float getX(android.view.View) -> getX
    float getY(android.view.View) -> getY
android.support.v4.view.ViewCompat$AccessibilityLiveRegion -> android.support.v4.view.ViewCompat$AccessibilityLiveRegion:
android.support.v4.view.ViewCompat$BaseViewCompatImpl -> android.support.v4.view.ViewCompat$BaseViewCompatImpl:
    java.lang.reflect.Method mDispatchStartTemporaryDetach -> mDispatchStartTemporaryDetach
    java.lang.reflect.Method mDispatchFinishTemporaryDetach -> mDispatchFinishTemporaryDetach
    boolean mTempDetachBound -> mTempDetachBound
    java.util.WeakHashMap mViewPropertyAnimatorCompatMap -> mViewPropertyAnimatorCompatMap
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    long getFrameTime() -> getFrameTime
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    float getAlpha(android.view.View) -> getAlpha
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int getLayoutDirection(android.view.View) -> getLayoutDirection
    void setLayoutDirection(android.view.View,int) -> setLayoutDirection
    android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
    boolean isOpaque(android.view.View) -> isOpaque
    int resolveSizeAndState(int,int,int) -> resolveSizeAndState
    int getMeasuredWidthAndState(android.view.View) -> getMeasuredWidthAndState
    int getMeasuredHeightAndState(android.view.View) -> getMeasuredHeightAndState
    int getMeasuredState(android.view.View) -> getMeasuredState
    int getAccessibilityLiveRegion(android.view.View) -> getAccessibilityLiveRegion
    void setAccessibilityLiveRegion(android.view.View,int) -> setAccessibilityLiveRegion
    int getPaddingStart(android.view.View) -> getPaddingStart
    int getPaddingEnd(android.view.View) -> getPaddingEnd
    void setPaddingRelative(android.view.View,int,int,int,int) -> setPaddingRelative
    void dispatchStartTemporaryDetach(android.view.View) -> dispatchStartTemporaryDetach
    void dispatchFinishTemporaryDetach(android.view.View) -> dispatchFinishTemporaryDetach
    void bindTempDetach() -> bindTempDetach
    float getTranslationX(android.view.View) -> getTranslationX
    float getTranslationY(android.view.View) -> getTranslationY
    float getX(android.view.View) -> getX
    float getY(android.view.View) -> getY
    float getRotation(android.view.View) -> getRotation
    float getRotationX(android.view.View) -> getRotationX
    float getRotationY(android.view.View) -> getRotationY
    float getScaleX(android.view.View) -> getScaleX
    float getScaleY(android.view.View) -> getScaleY
    int getMinimumWidth(android.view.View) -> getMinimumWidth
    int getMinimumHeight(android.view.View) -> getMinimumHeight
    android.support.v4.view.ViewPropertyAnimatorCompat animate(android.view.View) -> animate
    void setRotation(android.view.View,float) -> setRotation
    void setTranslationX(android.view.View,float) -> setTranslationX
    void setTranslationY(android.view.View,float) -> setTranslationY
    void setAlpha(android.view.View,float) -> setAlpha
    void setRotationX(android.view.View,float) -> setRotationX
    void setRotationY(android.view.View,float) -> setRotationY
    void setScaleX(android.view.View,float) -> setScaleX
    void setScaleY(android.view.View,float) -> setScaleY
    void setX(android.view.View,float) -> setX
    void setY(android.view.View,float) -> setY
    void setPivotX(android.view.View,float) -> setPivotX
    void setPivotY(android.view.View,float) -> setPivotY
    float getPivotX(android.view.View) -> getPivotX
    float getPivotY(android.view.View) -> getPivotY
android.support.v4.view.ViewCompat$EclairMr1ViewCompatImpl -> android.support.v4.view.ViewCompat$EclairMr1ViewCompatImpl:
    boolean isOpaque(android.view.View) -> isOpaque
android.support.v4.view.ViewCompat$GBViewCompatImpl -> android.support.v4.view.ViewCompat$GBViewCompatImpl:
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
android.support.v4.view.ViewCompat$HCViewCompatImpl -> android.support.v4.view.ViewCompat$HCViewCompatImpl:
    long getFrameTime() -> getFrameTime
    float getAlpha(android.view.View) -> getAlpha
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int resolveSizeAndState(int,int,int) -> resolveSizeAndState
    int getMeasuredWidthAndState(android.view.View) -> getMeasuredWidthAndState
    int getMeasuredHeightAndState(android.view.View) -> getMeasuredHeightAndState
    int getMeasuredState(android.view.View) -> getMeasuredState
    float getTranslationX(android.view.View) -> getTranslationX
    float getTranslationY(android.view.View) -> getTranslationY
    void setTranslationX(android.view.View,float) -> setTranslationX
    void setTranslationY(android.view.View,float) -> setTranslationY
    void setAlpha(android.view.View,float) -> setAlpha
    void setX(android.view.View,float) -> setX
    void setY(android.view.View,float) -> setY
    void setRotation(android.view.View,float) -> setRotation
    void setRotationX(android.view.View,float) -> setRotationX
    void setRotationY(android.view.View,float) -> setRotationY
    void setScaleX(android.view.View,float) -> setScaleX
    void setScaleY(android.view.View,float) -> setScaleY
    void setPivotX(android.view.View,float) -> setPivotX
    void setPivotY(android.view.View,float) -> setPivotY
    float getX(android.view.View) -> getX
    float getY(android.view.View) -> getY
    float getRotation(android.view.View) -> getRotation
    float getRotationX(android.view.View) -> getRotationX
    float getRotationY(android.view.View) -> getRotationY
    float getScaleX(android.view.View) -> getScaleX
    float getScaleY(android.view.View) -> getScaleY
    float getPivotX(android.view.View) -> getPivotX
    float getPivotY(android.view.View) -> getPivotY
android.support.v4.view.ViewCompat$ICSViewCompatImpl -> android.support.v4.view.ViewCompat$ICSViewCompatImpl:
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
    android.support.v4.view.ViewPropertyAnimatorCompat animate(android.view.View) -> animate
android.support.v4.view.ViewCompat$ImportantForAccessibility -> android.support.v4.view.ViewCompat$ImportantForAccessibility:
android.support.v4.view.ViewCompat$JBViewCompatImpl -> android.support.v4.view.ViewCompat$JBViewCompatImpl:
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
    int getMinimumWidth(android.view.View) -> getMinimumWidth
    int getMinimumHeight(android.view.View) -> getMinimumHeight
android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl -> android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl:
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int getLayoutDirection(android.view.View) -> getLayoutDirection
    void setLayoutDirection(android.view.View,int) -> setLayoutDirection
    int getPaddingStart(android.view.View) -> getPaddingStart
    int getPaddingEnd(android.view.View) -> getPaddingEnd
    void setPaddingRelative(android.view.View,int,int,int,int) -> setPaddingRelative
android.support.v4.view.ViewCompat$KitKatViewCompatImpl -> android.support.v4.view.ViewCompat$KitKatViewCompatImpl:
    int getAccessibilityLiveRegion(android.view.View) -> getAccessibilityLiveRegion
    void setAccessibilityLiveRegion(android.view.View,int) -> setAccessibilityLiveRegion
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
android.support.v4.view.ViewCompat$LayerType -> android.support.v4.view.ViewCompat$LayerType:
android.support.v4.view.ViewCompat$LayoutDirectionMode -> android.support.v4.view.ViewCompat$LayoutDirectionMode:
android.support.v4.view.ViewCompat$OverScroll -> android.support.v4.view.ViewCompat$OverScroll:
android.support.v4.view.ViewCompat$ResolvedLayoutDirectionMode -> android.support.v4.view.ViewCompat$ResolvedLayoutDirectionMode:
android.support.v4.view.ViewCompat$ViewCompatImpl -> android.support.v4.view.ViewCompat$ViewCompatImpl:
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    float getAlpha(android.view.View) -> getAlpha
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int getLayoutDirection(android.view.View) -> getLayoutDirection
    void setLayoutDirection(android.view.View,int) -> setLayoutDirection
    android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
    boolean isOpaque(android.view.View) -> isOpaque
    int resolveSizeAndState(int,int,int) -> resolveSizeAndState
    int getMeasuredWidthAndState(android.view.View) -> getMeasuredWidthAndState
    int getMeasuredHeightAndState(android.view.View) -> getMeasuredHeightAndState
    int getMeasuredState(android.view.View) -> getMeasuredState
    int getAccessibilityLiveRegion(android.view.View) -> getAccessibilityLiveRegion
    void setAccessibilityLiveRegion(android.view.View,int) -> setAccessibilityLiveRegion
    int getPaddingStart(android.view.View) -> getPaddingStart
    int getPaddingEnd(android.view.View) -> getPaddingEnd
    void setPaddingRelative(android.view.View,int,int,int,int) -> setPaddingRelative
    void dispatchStartTemporaryDetach(android.view.View) -> dispatchStartTemporaryDetach
    void dispatchFinishTemporaryDetach(android.view.View) -> dispatchFinishTemporaryDetach
    float getX(android.view.View) -> getX
    float getY(android.view.View) -> getY
    float getRotation(android.view.View) -> getRotation
    float getRotationX(android.view.View) -> getRotationX
    float getRotationY(android.view.View) -> getRotationY
    float getScaleX(android.view.View) -> getScaleX
    float getScaleY(android.view.View) -> getScaleY
    float getTranslationX(android.view.View) -> getTranslationX
    float getTranslationY(android.view.View) -> getTranslationY
    int getMinimumWidth(android.view.View) -> getMinimumWidth
    int getMinimumHeight(android.view.View) -> getMinimumHeight
    android.support.v4.view.ViewPropertyAnimatorCompat animate(android.view.View) -> animate
    void setRotation(android.view.View,float) -> setRotation
    void setRotationX(android.view.View,float) -> setRotationX
    void setRotationY(android.view.View,float) -> setRotationY
    void setScaleX(android.view.View,float) -> setScaleX
    void setScaleY(android.view.View,float) -> setScaleY
    void setTranslationX(android.view.View,float) -> setTranslationX
    void setTranslationY(android.view.View,float) -> setTranslationY
    void setX(android.view.View,float) -> setX
    void setY(android.view.View,float) -> setY
    void setAlpha(android.view.View,float) -> setAlpha
    void setPivotX(android.view.View,float) -> setPivotX
    void setPivotY(android.view.View,float) -> setPivotY
    float getPivotX(android.view.View) -> getPivotX
    float getPivotY(android.view.View) -> getPivotY
android.support.v4.view.ViewCompatEclairMr1 -> android.support.v4.view.ViewCompatEclairMr1:
    boolean isOpaque(android.view.View) -> isOpaque
android.support.v4.view.ViewCompatGingerbread -> android.support.v4.view.ViewCompatGingerbread:
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
android.support.v4.view.ViewCompatHC -> android.support.v4.view.ViewCompatHC:
    long getFrameTime() -> getFrameTime
    float getAlpha(android.view.View) -> getAlpha
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
    int resolveSizeAndState(int,int,int) -> resolveSizeAndState
    int getMeasuredWidthAndState(android.view.View) -> getMeasuredWidthAndState
    int getMeasuredHeightAndState(android.view.View) -> getMeasuredHeightAndState
    int getMeasuredState(android.view.View) -> getMeasuredState
    float getTranslationX(android.view.View) -> getTranslationX
    float getTranslationY(android.view.View) -> getTranslationY
    float getX(android.view.View) -> getX
    float getY(android.view.View) -> getY
    float getRotation(android.view.View) -> getRotation
    float getRotationX(android.view.View) -> getRotationX
    float getRotationY(android.view.View) -> getRotationY
    float getScaleX(android.view.View) -> getScaleX
    float getScaleY(android.view.View) -> getScaleY
    void setTranslationX(android.view.View,float) -> setTranslationX
    void setTranslationY(android.view.View,float) -> setTranslationY
    void setAlpha(android.view.View,float) -> setAlpha
    void setX(android.view.View,float) -> setX
    void setY(android.view.View,float) -> setY
    void setRotation(android.view.View,float) -> setRotation
    void setRotationX(android.view.View,float) -> setRotationX
    void setRotationY(android.view.View,float) -> setRotationY
    void setScaleX(android.view.View,float) -> setScaleX
    void setScaleY(android.view.View,float) -> setScaleY
    void setPivotX(android.view.View,float) -> setPivotX
    void setPivotY(android.view.View,float) -> setPivotY
    float getPivotX(android.view.View) -> getPivotX
    float getPivotY(android.view.View) -> getPivotY
android.support.v4.view.ViewCompatICS -> android.support.v4.view.ViewCompatICS:
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    void setAccessibilityDelegate(android.view.View,java.lang.Object) -> setAccessibilityDelegate
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
android.support.v4.view.ViewCompatJB -> android.support.v4.view.ViewCompatJB:
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
    int getMinimumWidth(android.view.View) -> getMinimumWidth
    int getMinimumHeight(android.view.View) -> getMinimumHeight
android.support.v4.view.ViewCompatJellybeanMr1 -> android.support.v4.view.ViewCompatJellybeanMr1:
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int getLayoutDirection(android.view.View) -> getLayoutDirection
    void setLayoutDirection(android.view.View,int) -> setLayoutDirection
    int getPaddingStart(android.view.View) -> getPaddingStart
    int getPaddingEnd(android.view.View) -> getPaddingEnd
    void setPaddingRelative(android.view.View,int,int,int,int) -> setPaddingRelative
android.support.v4.view.ViewCompatKitKat -> android.support.v4.view.ViewCompatKitKat:
    int getAccessibilityLiveRegion(android.view.View) -> getAccessibilityLiveRegion
    void setAccessibilityLiveRegion(android.view.View,int) -> setAccessibilityLiveRegion
android.support.v4.view.ViewConfigurationCompat -> android.support.v4.view.ViewConfigurationCompat:
    android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl IMPL -> IMPL
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
android.support.v4.view.ViewConfigurationCompat$BaseViewConfigurationVersionImpl -> android.support.v4.view.ViewConfigurationCompat$BaseViewConfigurationVersionImpl:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
android.support.v4.view.ViewConfigurationCompat$FroyoViewConfigurationVersionImpl -> android.support.v4.view.ViewConfigurationCompat$FroyoViewConfigurationVersionImpl:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl -> android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
android.support.v4.view.ViewConfigurationCompatFroyo -> android.support.v4.view.ViewConfigurationCompatFroyo:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
android.support.v4.view.ViewGroupCompat -> android.support.v4.view.ViewGroupCompat:
    int LAYOUT_MODE_CLIP_BOUNDS -> LAYOUT_MODE_CLIP_BOUNDS
    int LAYOUT_MODE_OPTICAL_BOUNDS -> LAYOUT_MODE_OPTICAL_BOUNDS
    android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl IMPL -> IMPL
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> setMotionEventSplittingEnabled
    int getLayoutMode(android.view.ViewGroup) -> getLayoutMode
    void setLayoutMode(android.view.ViewGroup,int) -> setLayoutMode
android.support.v4.view.ViewGroupCompat$ViewGroupCompatHCImpl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatHCImpl:
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> setMotionEventSplittingEnabled
android.support.v4.view.ViewGroupCompat$ViewGroupCompatIcsImpl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatIcsImpl:
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl:
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> setMotionEventSplittingEnabled
    int getLayoutMode(android.view.ViewGroup) -> getLayoutMode
    void setLayoutMode(android.view.ViewGroup,int) -> setLayoutMode
android.support.v4.view.ViewGroupCompat$ViewGroupCompatJellybeanMR2Impl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatJellybeanMR2Impl:
    int getLayoutMode(android.view.ViewGroup) -> getLayoutMode
    void setLayoutMode(android.view.ViewGroup,int) -> setLayoutMode
android.support.v4.view.ViewGroupCompat$ViewGroupCompatStubImpl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatStubImpl:
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> setMotionEventSplittingEnabled
    int getLayoutMode(android.view.ViewGroup) -> getLayoutMode
    void setLayoutMode(android.view.ViewGroup,int) -> setLayoutMode
android.support.v4.view.ViewGroupCompatHC -> android.support.v4.view.ViewGroupCompatHC:
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> setMotionEventSplittingEnabled
android.support.v4.view.ViewGroupCompatIcs -> android.support.v4.view.ViewGroupCompatIcs:
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
android.support.v4.view.ViewGroupCompatJellybeanMR2 -> android.support.v4.view.ViewGroupCompatJellybeanMR2:
    int getLayoutMode(android.view.ViewGroup) -> getLayoutMode
    void setLayoutMode(android.view.ViewGroup,int) -> setLayoutMode
android.support.v4.view.ViewPager -> android.support.v4.view.ViewPager:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    boolean USE_CACHE -> USE_CACHE
    int DEFAULT_OFFSCREEN_PAGES -> DEFAULT_OFFSCREEN_PAGES
    int MAX_SETTLE_DURATION -> MAX_SETTLE_DURATION
    int MIN_DISTANCE_FOR_FLING -> MIN_DISTANCE_FOR_FLING
    int DEFAULT_GUTTER_SIZE -> DEFAULT_GUTTER_SIZE
    int MIN_FLING_VELOCITY -> MIN_FLING_VELOCITY
    int[] LAYOUT_ATTRS -> LAYOUT_ATTRS
    int mExpectedAdapterCount -> mExpectedAdapterCount
    java.util.Comparator COMPARATOR -> COMPARATOR
    android.view.animation.Interpolator sInterpolator -> sInterpolator
    java.util.ArrayList mItems -> mItems
    android.support.v4.view.ViewPager$ItemInfo mTempItem -> mTempItem
    android.graphics.Rect mTempRect -> mTempRect
    android.support.v4.view.PagerAdapter mAdapter -> mAdapter
    int mCurItem -> mCurItem
    int mRestoredCurItem -> mRestoredCurItem
    android.os.Parcelable mRestoredAdapterState -> mRestoredAdapterState
    java.lang.ClassLoader mRestoredClassLoader -> mRestoredClassLoader
    android.widget.Scroller mScroller -> mScroller
    android.support.v4.view.ViewPager$PagerObserver mObserver -> mObserver
    int mPageMargin -> mPageMargin
    android.graphics.drawable.Drawable mMarginDrawable -> mMarginDrawable
    int mTopPageBounds -> mTopPageBounds
    int mBottomPageBounds -> mBottomPageBounds
    float mFirstOffset -> mFirstOffset
    float mLastOffset -> mLastOffset
    int mChildWidthMeasureSpec -> mChildWidthMeasureSpec
    int mChildHeightMeasureSpec -> mChildHeightMeasureSpec
    boolean mInLayout -> mInLayout
    boolean mScrollingCacheEnabled -> mScrollingCacheEnabled
    boolean mPopulatePending -> mPopulatePending
    int mOffscreenPageLimit -> mOffscreenPageLimit
    boolean mIsBeingDragged -> mIsBeingDragged
    boolean mIsUnableToDrag -> mIsUnableToDrag
    boolean mIgnoreGutter -> mIgnoreGutter
    int mDefaultGutterSize -> mDefaultGutterSize
    int mGutterSize -> mGutterSize
    int mTouchSlop -> mTouchSlop
    float mLastMotionX -> mLastMotionX
    float mLastMotionY -> mLastMotionY
    float mInitialMotionX -> mInitialMotionX
    float mInitialMotionY -> mInitialMotionY
    int mActivePointerId -> mActivePointerId
    int INVALID_POINTER -> INVALID_POINTER
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    int mMinimumVelocity -> mMinimumVelocity
    int mMaximumVelocity -> mMaximumVelocity
    int mFlingDistance -> mFlingDistance
    int mCloseEnough -> mCloseEnough
    int CLOSE_ENOUGH -> CLOSE_ENOUGH
    boolean mFakeDragging -> mFakeDragging
    long mFakeDragBeginTime -> mFakeDragBeginTime
    android.support.v4.widget.EdgeEffectCompat mLeftEdge -> mLeftEdge
    android.support.v4.widget.EdgeEffectCompat mRightEdge -> mRightEdge
    boolean mFirstLayout -> mFirstLayout
    boolean mNeedCalculatePageOffsets -> mNeedCalculatePageOffsets
    boolean mCalledSuper -> mCalledSuper
    int mDecorChildCount -> mDecorChildCount
    android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener -> mOnPageChangeListener
    android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener -> mInternalPageChangeListener
    android.support.v4.view.ViewPager$OnAdapterChangeListener mAdapterChangeListener -> mAdapterChangeListener
    android.support.v4.view.ViewPager$PageTransformer mPageTransformer -> mPageTransformer
    java.lang.reflect.Method mSetChildrenDrawingOrderEnabled -> mSetChildrenDrawingOrderEnabled
    int DRAW_ORDER_DEFAULT -> DRAW_ORDER_DEFAULT
    int DRAW_ORDER_FORWARD -> DRAW_ORDER_FORWARD
    int DRAW_ORDER_REVERSE -> DRAW_ORDER_REVERSE
    int mDrawingOrder -> mDrawingOrder
    java.util.ArrayList mDrawingOrderedChildren -> mDrawingOrderedChildren
    android.support.v4.view.ViewPager$ViewPositionComparator sPositionComparator -> sPositionComparator
    int SCROLL_STATE_IDLE -> SCROLL_STATE_IDLE
    int SCROLL_STATE_DRAGGING -> SCROLL_STATE_DRAGGING
    int SCROLL_STATE_SETTLING -> SCROLL_STATE_SETTLING
    java.lang.Runnable mEndScrollRunnable -> mEndScrollRunnable
    int mScrollState -> mScrollState
    void initViewPager() -> initViewPager
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setScrollState(int) -> setScrollState
    void setAdapter(android.support.v4.view.PagerAdapter) -> setAdapter
    void removeNonDecorViews() -> removeNonDecorViews
    android.support.v4.view.PagerAdapter getAdapter() -> getAdapter
    void setOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener) -> setOnAdapterChangeListener
    int getClientWidth() -> getClientWidth
    void setCurrentItem(int) -> setCurrentItem
    void setCurrentItem(int,boolean) -> setCurrentItem
    int getCurrentItem() -> getCurrentItem
    void setCurrentItemInternal(int,boolean,boolean) -> setCurrentItemInternal
    void setCurrentItemInternal(int,boolean,boolean,int) -> setCurrentItemInternal
    void scrollToItem(int,boolean,int,boolean) -> scrollToItem
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    void setPageTransformer(boolean,android.support.v4.view.ViewPager$PageTransformer) -> setPageTransformer
    void setChildrenDrawingOrderEnabledCompat(boolean) -> setChildrenDrawingOrderEnabledCompat
    int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    android.support.v4.view.ViewPager$OnPageChangeListener setInternalPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setInternalPageChangeListener
    int getOffscreenPageLimit() -> getOffscreenPageLimit
    void setOffscreenPageLimit(int) -> setOffscreenPageLimit
    void setPageMargin(int) -> setPageMargin
    int getPageMargin() -> getPageMargin
    void setPageMarginDrawable(android.graphics.drawable.Drawable) -> setPageMarginDrawable
    void setPageMarginDrawable(int) -> setPageMarginDrawable
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void drawableStateChanged() -> drawableStateChanged
    float distanceInfluenceForSnapDuration(float) -> distanceInfluenceForSnapDuration
    void smoothScrollTo(int,int) -> smoothScrollTo
    void smoothScrollTo(int,int,int) -> smoothScrollTo
    android.support.v4.view.ViewPager$ItemInfo addNewItem(int,int) -> addNewItem
    void dataSetChanged() -> dataSetChanged
    void populate() -> populate
    void populate(int) -> populate
    void sortChildDrawingOrder() -> sortChildDrawingOrder
    void calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo) -> calculatePageOffsets
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    void removeView(android.view.View) -> removeView
    android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View) -> infoForChild
    android.support.v4.view.ViewPager$ItemInfo infoForAnyChild(android.view.View) -> infoForAnyChild
    android.support.v4.view.ViewPager$ItemInfo infoForPosition(int) -> infoForPosition
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void recomputeScrollPosition(int,int,int,int) -> recomputeScrollPosition
    void onLayout(boolean,int,int,int,int) -> onLayout
    void computeScroll() -> computeScroll
    boolean pageScrolled(int) -> pageScrolled
    void onPageScrolled(int,float,int) -> onPageScrolled
    void completeScroll(boolean) -> completeScroll
    boolean isGutterDrag(float,float) -> isGutterDrag
    void enableLayers(boolean) -> enableLayers
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void requestParentDisallowInterceptTouchEvent(boolean) -> requestParentDisallowInterceptTouchEvent
    boolean performDrag(float) -> performDrag
    android.support.v4.view.ViewPager$ItemInfo infoForCurrentScrollPosition() -> infoForCurrentScrollPosition
    int determineTargetPage(int,float,int,int) -> determineTargetPage
    void draw(android.graphics.Canvas) -> draw
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean beginFakeDrag() -> beginFakeDrag
    void endFakeDrag() -> endFakeDrag
    void fakeDragBy(float) -> fakeDragBy
    boolean isFakeDragging() -> isFakeDragging
    void onSecondaryPointerUp(android.view.MotionEvent) -> onSecondaryPointerUp
    void endDrag() -> endDrag
    void setScrollingCacheEnabled(boolean) -> setScrollingCacheEnabled
    boolean canScrollHorizontally(int) -> canScrollHorizontally
    boolean canScroll(android.view.View,boolean,int,int,int) -> canScroll
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean executeKeyEvent(android.view.KeyEvent) -> executeKeyEvent
    boolean arrowScroll(int) -> arrowScroll
    android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View) -> getChildRectInPagerCoordinates
    boolean pageLeft() -> pageLeft
    boolean pageRight() -> pageRight
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    void addTouchables(java.util.ArrayList) -> addTouchables
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    void access$000(android.support.v4.view.ViewPager,int) -> access$000
    android.support.v4.view.PagerAdapter access$200(android.support.v4.view.ViewPager) -> access$200
    int access$300(android.support.v4.view.ViewPager) -> access$300
    int[] access$400() -> access$400
android.support.v4.view.ViewPager$1 -> android.support.v4.view.ViewPager$1:
    int compare(android.support.v4.view.ViewPager$ItemInfo,android.support.v4.view.ViewPager$ItemInfo) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewPager$2 -> android.support.v4.view.ViewPager$2:
    float getInterpolation(float) -> getInterpolation
android.support.v4.view.ViewPager$3 -> android.support.v4.view.ViewPager$3:
    android.support.v4.view.ViewPager this$0 -> this$0
    void run() -> run
android.support.v4.view.ViewPager$Decor -> android.support.v4.view.ViewPager$Decor:
android.support.v4.view.ViewPager$ItemInfo -> android.support.v4.view.ViewPager$ItemInfo:
    java.lang.Object object -> object
    int position -> position
    boolean scrolling -> scrolling
    float widthFactor -> widthFactor
    float offset -> offset
android.support.v4.view.ViewPager$LayoutParams -> android.support.v4.view.ViewPager$LayoutParams:
    boolean isDecor -> isDecor
    int gravity -> gravity
    float widthFactor -> widthFactor
    boolean needsMeasure -> needsMeasure
    int position -> position
    int childIndex -> childIndex
android.support.v4.view.ViewPager$MyAccessibilityDelegate -> android.support.v4.view.ViewPager$MyAccessibilityDelegate:
    android.support.v4.view.ViewPager this$0 -> this$0
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    boolean canScroll() -> canScroll
android.support.v4.view.ViewPager$OnAdapterChangeListener -> android.support.v4.view.ViewPager$OnAdapterChangeListener:
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> onAdapterChanged
android.support.v4.view.ViewPager$OnPageChangeListener -> android.support.v4.view.ViewPager$OnPageChangeListener:
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
android.support.v4.view.ViewPager$PageTransformer -> android.support.v4.view.ViewPager$PageTransformer:
    void transformPage(android.view.View,float) -> transformPage
android.support.v4.view.ViewPager$PagerObserver -> android.support.v4.view.ViewPager$PagerObserver:
    android.support.v4.view.ViewPager this$0 -> this$0
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.view.ViewPager$SavedState -> android.support.v4.view.ViewPager$SavedState:
    int position -> position
    android.os.Parcelable adapterState -> adapterState
    java.lang.ClassLoader loader -> loader
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.view.ViewPager$SavedState$1 -> android.support.v4.view.ViewPager$SavedState$1:
    android.support.v4.view.ViewPager$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    android.support.v4.view.ViewPager$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
android.support.v4.view.ViewPager$SimpleOnPageChangeListener -> android.support.v4.view.ViewPager$SimpleOnPageChangeListener:
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
android.support.v4.view.ViewPager$ViewPositionComparator -> android.support.v4.view.ViewPager$ViewPositionComparator:
    int compare(android.view.View,android.view.View) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewParentCompat -> android.support.v4.view.ViewParentCompat:
    android.support.v4.view.ViewParentCompat$ViewParentCompatImpl IMPL -> IMPL
    boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent) -> requestSendAccessibilityEvent
android.support.v4.view.ViewParentCompat$ViewParentCompatICSImpl -> android.support.v4.view.ViewParentCompat$ViewParentCompatICSImpl:
    boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent) -> requestSendAccessibilityEvent
android.support.v4.view.ViewParentCompat$ViewParentCompatImpl -> android.support.v4.view.ViewParentCompat$ViewParentCompatImpl:
    boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent) -> requestSendAccessibilityEvent
android.support.v4.view.ViewParentCompat$ViewParentCompatStubImpl -> android.support.v4.view.ViewParentCompat$ViewParentCompatStubImpl:
    boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent) -> requestSendAccessibilityEvent
android.support.v4.view.ViewParentCompatICS -> android.support.v4.view.ViewParentCompatICS:
    boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent) -> requestSendAccessibilityEvent
android.support.v4.view.ViewPropertyAnimatorCompat -> android.support.v4.view.ViewPropertyAnimatorCompat:
    java.lang.String TAG -> TAG
    java.lang.ref.WeakReference mView -> mView
    android.support.v4.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorCompatImpl IMPL -> IMPL
    android.support.v4.view.ViewPropertyAnimatorCompat setDuration(long) -> setDuration
    android.support.v4.view.ViewPropertyAnimatorCompat alpha(float) -> alpha
    android.support.v4.view.ViewPropertyAnimatorCompat alphaBy(float) -> alphaBy
    android.support.v4.view.ViewPropertyAnimatorCompat translationX(float) -> translationX
    android.support.v4.view.ViewPropertyAnimatorCompat translationY(float) -> translationY
    android.support.v4.view.ViewPropertyAnimatorCompat withEndAction(java.lang.Runnable) -> withEndAction
    long getDuration() -> getDuration
    android.support.v4.view.ViewPropertyAnimatorCompat setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    android.view.animation.Interpolator getInterpolator() -> getInterpolator
    android.support.v4.view.ViewPropertyAnimatorCompat setStartDelay(long) -> setStartDelay
    long getStartDelay() -> getStartDelay
    android.support.v4.view.ViewPropertyAnimatorCompat rotation(float) -> rotation
    android.support.v4.view.ViewPropertyAnimatorCompat rotationBy(float) -> rotationBy
    android.support.v4.view.ViewPropertyAnimatorCompat rotationX(float) -> rotationX
    android.support.v4.view.ViewPropertyAnimatorCompat rotationXBy(float) -> rotationXBy
    android.support.v4.view.ViewPropertyAnimatorCompat rotationY(float) -> rotationY
    android.support.v4.view.ViewPropertyAnimatorCompat rotationYBy(float) -> rotationYBy
    android.support.v4.view.ViewPropertyAnimatorCompat scaleX(float) -> scaleX
    android.support.v4.view.ViewPropertyAnimatorCompat scaleXBy(float) -> scaleXBy
    android.support.v4.view.ViewPropertyAnimatorCompat scaleY(float) -> scaleY
    android.support.v4.view.ViewPropertyAnimatorCompat scaleYBy(float) -> scaleYBy
    void cancel() -> cancel
    android.support.v4.view.ViewPropertyAnimatorCompat x(float) -> x
    android.support.v4.view.ViewPropertyAnimatorCompat xBy(float) -> xBy
    android.support.v4.view.ViewPropertyAnimatorCompat y(float) -> y
    android.support.v4.view.ViewPropertyAnimatorCompat yBy(float) -> yBy
    android.support.v4.view.ViewPropertyAnimatorCompat translationXBy(float) -> translationXBy
    android.support.v4.view.ViewPropertyAnimatorCompat translationYBy(float) -> translationYBy
    void start() -> start
    android.support.v4.view.ViewPropertyAnimatorCompat withLayer() -> withLayer
    android.support.v4.view.ViewPropertyAnimatorCompat withStartAction(java.lang.Runnable) -> withStartAction
    android.support.v4.view.ViewPropertyAnimatorCompat setListener(android.support.v4.view.ViewPropertyAnimatorListener) -> setListener
android.support.v4.view.ViewPropertyAnimatorCompat$BaseViewPropertyAnimatorCompatImpl -> android.support.v4.view.ViewPropertyAnimatorCompat$BaseViewPropertyAnimatorCompatImpl:
    void setDuration(android.view.View,long) -> setDuration
    void alpha(android.view.View,float) -> alpha
    void translationX(android.view.View,float) -> translationX
    void translationY(android.view.View,float) -> translationY
    void withEndAction(android.view.View,java.lang.Runnable) -> withEndAction
    long getDuration(android.view.View) -> getDuration
    void setInterpolator(android.view.View,android.view.animation.Interpolator) -> setInterpolator
    android.view.animation.Interpolator getInterpolator(android.view.View) -> getInterpolator
    void setStartDelay(android.view.View,long) -> setStartDelay
    long getStartDelay(android.view.View) -> getStartDelay
    void alphaBy(android.view.View,float) -> alphaBy
    void rotation(android.view.View,float) -> rotation
    void rotationBy(android.view.View,float) -> rotationBy
    void rotationX(android.view.View,float) -> rotationX
    void rotationXBy(android.view.View,float) -> rotationXBy
    void rotationY(android.view.View,float) -> rotationY
    void rotationYBy(android.view.View,float) -> rotationYBy
    void scaleX(android.view.View,float) -> scaleX
    void scaleXBy(android.view.View,float) -> scaleXBy
    void scaleY(android.view.View,float) -> scaleY
    void scaleYBy(android.view.View,float) -> scaleYBy
    void cancel(android.view.View) -> cancel
    void x(android.view.View,float) -> x
    void xBy(android.view.View,float) -> xBy
    void y(android.view.View,float) -> y
    void yBy(android.view.View,float) -> yBy
    void translationXBy(android.view.View,float) -> translationXBy
    void translationYBy(android.view.View,float) -> translationYBy
    void start(android.view.View) -> start
    void withLayer(android.view.View) -> withLayer
    void withStartAction(android.view.View,java.lang.Runnable) -> withStartAction
    void setListener(android.view.View,android.support.v4.view.ViewPropertyAnimatorListener) -> setListener
android.support.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl -> android.support.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl:
    void setDuration(android.view.View,long) -> setDuration
    void alpha(android.view.View,float) -> alpha
    void translationX(android.view.View,float) -> translationX
    void translationY(android.view.View,float) -> translationY
    long getDuration(android.view.View) -> getDuration
    void setInterpolator(android.view.View,android.view.animation.Interpolator) -> setInterpolator
    void setStartDelay(android.view.View,long) -> setStartDelay
    long getStartDelay(android.view.View) -> getStartDelay
    void alphaBy(android.view.View,float) -> alphaBy
    void rotation(android.view.View,float) -> rotation
    void rotationBy(android.view.View,float) -> rotationBy
    void rotationX(android.view.View,float) -> rotationX
    void rotationXBy(android.view.View,float) -> rotationXBy
    void rotationY(android.view.View,float) -> rotationY
    void rotationYBy(android.view.View,float) -> rotationYBy
    void scaleX(android.view.View,float) -> scaleX
    void scaleXBy(android.view.View,float) -> scaleXBy
    void scaleY(android.view.View,float) -> scaleY
    void scaleYBy(android.view.View,float) -> scaleYBy
    void cancel(android.view.View) -> cancel
    void x(android.view.View,float) -> x
    void xBy(android.view.View,float) -> xBy
    void y(android.view.View,float) -> y
    void yBy(android.view.View,float) -> yBy
    void translationXBy(android.view.View,float) -> translationXBy
    void translationYBy(android.view.View,float) -> translationYBy
    void start(android.view.View) -> start
    void setListener(android.view.View,android.support.v4.view.ViewPropertyAnimatorListener) -> setListener
    void withEndAction(android.view.View,java.lang.Runnable) -> withEndAction
    void withStartAction(android.view.View,java.lang.Runnable) -> withStartAction
    void withLayer(android.view.View) -> withLayer
android.support.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl$1 -> android.support.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl$1:
    java.lang.Runnable val$runnable -> val$runnable
    android.support.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl this$0 -> this$0
    void onAnimationStart(android.view.View) -> onAnimationStart
    void onAnimationEnd(android.view.View) -> onAnimationEnd
    void onAnimationCancel(android.view.View) -> onAnimationCancel
android.support.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl$2 -> android.support.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl$2:
    java.lang.Runnable val$runnable -> val$runnable
    android.support.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl this$0 -> this$0
    void onAnimationStart(android.view.View) -> onAnimationStart
    void onAnimationEnd(android.view.View) -> onAnimationEnd
    void onAnimationCancel(android.view.View) -> onAnimationCancel
android.support.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl$3 -> android.support.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl$3:
    int val$currentLayerType -> val$currentLayerType
    android.support.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl this$0 -> this$0
    void onAnimationStart(android.view.View) -> onAnimationStart
    void onAnimationEnd(android.view.View) -> onAnimationEnd
    void onAnimationCancel(android.view.View) -> onAnimationCancel
android.support.v4.view.ViewPropertyAnimatorCompat$JBMr2ViewPropertyAnimatorCompatImpl -> android.support.v4.view.ViewPropertyAnimatorCompat$JBMr2ViewPropertyAnimatorCompatImpl:
    android.view.animation.Interpolator getInterpolator(android.view.View) -> getInterpolator
android.support.v4.view.ViewPropertyAnimatorCompat$JBViewPropertyAnimatorCompatImpl -> android.support.v4.view.ViewPropertyAnimatorCompat$JBViewPropertyAnimatorCompatImpl:
    void withStartAction(android.view.View,java.lang.Runnable) -> withStartAction
    void withEndAction(android.view.View,java.lang.Runnable) -> withEndAction
    void withLayer(android.view.View) -> withLayer
android.support.v4.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorCompatImpl -> android.support.v4.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorCompatImpl:
    void setDuration(android.view.View,long) -> setDuration
    long getDuration(android.view.View) -> getDuration
    void setInterpolator(android.view.View,android.view.animation.Interpolator) -> setInterpolator
    android.view.animation.Interpolator getInterpolator(android.view.View) -> getInterpolator
    void setStartDelay(android.view.View,long) -> setStartDelay
    long getStartDelay(android.view.View) -> getStartDelay
    void alpha(android.view.View,float) -> alpha
    void alphaBy(android.view.View,float) -> alphaBy
    void rotation(android.view.View,float) -> rotation
    void rotationBy(android.view.View,float) -> rotationBy
    void rotationX(android.view.View,float) -> rotationX
    void rotationXBy(android.view.View,float) -> rotationXBy
    void rotationY(android.view.View,float) -> rotationY
    void rotationYBy(android.view.View,float) -> rotationYBy
    void scaleX(android.view.View,float) -> scaleX
    void scaleXBy(android.view.View,float) -> scaleXBy
    void scaleY(android.view.View,float) -> scaleY
    void scaleYBy(android.view.View,float) -> scaleYBy
    void cancel(android.view.View) -> cancel
    void x(android.view.View,float) -> x
    void xBy(android.view.View,float) -> xBy
    void y(android.view.View,float) -> y
    void yBy(android.view.View,float) -> yBy
    void translationX(android.view.View,float) -> translationX
    void translationXBy(android.view.View,float) -> translationXBy
    void translationY(android.view.View,float) -> translationY
    void translationYBy(android.view.View,float) -> translationYBy
    void start(android.view.View) -> start
    void withLayer(android.view.View) -> withLayer
    void withStartAction(android.view.View,java.lang.Runnable) -> withStartAction
    void withEndAction(android.view.View,java.lang.Runnable) -> withEndAction
    void setListener(android.view.View,android.support.v4.view.ViewPropertyAnimatorListener) -> setListener
android.support.v4.view.ViewPropertyAnimatorCompatICS -> android.support.v4.view.ViewPropertyAnimatorCompatICS:
    void setDuration(android.view.View,long) -> setDuration
    void alpha(android.view.View,float) -> alpha
    void translationX(android.view.View,float) -> translationX
    void translationY(android.view.View,float) -> translationY
    long getDuration(android.view.View) -> getDuration
    void setInterpolator(android.view.View,android.view.animation.Interpolator) -> setInterpolator
    void setStartDelay(android.view.View,long) -> setStartDelay
    long getStartDelay(android.view.View) -> getStartDelay
    void alphaBy(android.view.View,float) -> alphaBy
    void rotation(android.view.View,float) -> rotation
    void rotationBy(android.view.View,float) -> rotationBy
    void rotationX(android.view.View,float) -> rotationX
    void rotationXBy(android.view.View,float) -> rotationXBy
    void rotationY(android.view.View,float) -> rotationY
    void rotationYBy(android.view.View,float) -> rotationYBy
    void scaleX(android.view.View,float) -> scaleX
    void scaleXBy(android.view.View,float) -> scaleXBy
    void scaleY(android.view.View,float) -> scaleY
    void scaleYBy(android.view.View,float) -> scaleYBy
    void cancel(android.view.View) -> cancel
    void x(android.view.View,float) -> x
    void xBy(android.view.View,float) -> xBy
    void y(android.view.View,float) -> y
    void yBy(android.view.View,float) -> yBy
    void translationXBy(android.view.View,float) -> translationXBy
    void translationYBy(android.view.View,float) -> translationYBy
    void start(android.view.View) -> start
    void setListener(android.view.View,android.support.v4.view.ViewPropertyAnimatorListener) -> setListener
android.support.v4.view.ViewPropertyAnimatorCompatICS$1 -> android.support.v4.view.ViewPropertyAnimatorCompatICS$1:
    android.support.v4.view.ViewPropertyAnimatorListener val$listener -> val$listener
    android.view.View val$view -> val$view
    void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    void onAnimationStart(android.animation.Animator) -> onAnimationStart
android.support.v4.view.ViewPropertyAnimatorCompatJB -> android.support.v4.view.ViewPropertyAnimatorCompatJB:
    void withStartAction(android.view.View,java.lang.Runnable) -> withStartAction
    void withEndAction(android.view.View,java.lang.Runnable) -> withEndAction
    void withLayer(android.view.View) -> withLayer
android.support.v4.view.ViewPropertyAnimatorCompatJellybeanMr2 -> android.support.v4.view.ViewPropertyAnimatorCompatJellybeanMr2:
    android.view.animation.Interpolator getInterpolator(android.view.View) -> getInterpolator
android.support.v4.view.ViewPropertyAnimatorListener -> android.support.v4.view.ViewPropertyAnimatorListener:
    void onAnimationStart(android.view.View) -> onAnimationStart
    void onAnimationEnd(android.view.View) -> onAnimationEnd
    void onAnimationCancel(android.view.View) -> onAnimationCancel
android.support.v4.view.WindowCompat -> android.support.v4.view.WindowCompat:
    int FEATURE_ACTION_BAR -> FEATURE_ACTION_BAR
    int FEATURE_ACTION_BAR_OVERLAY -> FEATURE_ACTION_BAR_OVERLAY
    int FEATURE_ACTION_MODE_OVERLAY -> FEATURE_ACTION_MODE_OVERLAY
android.support.v4.view.accessibility.AccessibilityEventCompat -> android.support.v4.view.accessibility.AccessibilityEventCompat:
    android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventVersionImpl IMPL -> IMPL
    int TYPE_VIEW_HOVER_ENTER -> TYPE_VIEW_HOVER_ENTER
    int TYPE_VIEW_HOVER_EXIT -> TYPE_VIEW_HOVER_EXIT
    int TYPE_TOUCH_EXPLORATION_GESTURE_START -> TYPE_TOUCH_EXPLORATION_GESTURE_START
    int TYPE_TOUCH_EXPLORATION_GESTURE_END -> TYPE_TOUCH_EXPLORATION_GESTURE_END
    int TYPE_WINDOW_CONTENT_CHANGED -> TYPE_WINDOW_CONTENT_CHANGED
    int TYPE_VIEW_SCROLLED -> TYPE_VIEW_SCROLLED
    int TYPE_VIEW_TEXT_SELECTION_CHANGED -> TYPE_VIEW_TEXT_SELECTION_CHANGED
    int TYPE_ANNOUNCEMENT -> TYPE_ANNOUNCEMENT
    int TYPE_VIEW_ACCESSIBILITY_FOCUSED -> TYPE_VIEW_ACCESSIBILITY_FOCUSED
    int TYPE_VIEW_ACCESSIBILITY_FOCUS_CLEARED -> TYPE_VIEW_ACCESSIBILITY_FOCUS_CLEARED
    int TYPE_VIEW_TEXT_TRAVERSED_AT_MOVEMENT_GRANULARITY -> TYPE_VIEW_TEXT_TRAVERSED_AT_MOVEMENT_GRANULARITY
    int TYPE_GESTURE_DETECTION_START -> TYPE_GESTURE_DETECTION_START
    int TYPE_GESTURE_DETECTION_END -> TYPE_GESTURE_DETECTION_END
    int TYPE_TOUCH_INTERACTION_START -> TYPE_TOUCH_INTERACTION_START
    int TYPE_TOUCH_INTERACTION_END -> TYPE_TOUCH_INTERACTION_END
    int TYPES_ALL_MASK -> TYPES_ALL_MASK
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
    void appendRecord(android.view.accessibility.AccessibilityEvent,android.support.v4.view.accessibility.AccessibilityRecordCompat) -> appendRecord
    android.support.v4.view.accessibility.AccessibilityRecordCompat getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
    android.support.v4.view.accessibility.AccessibilityRecordCompat asRecord(android.view.accessibility.AccessibilityEvent) -> asRecord
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventIcsImpl -> android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventIcsImpl:
    void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> appendRecord
    java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventStubImpl -> android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventStubImpl:
    void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> appendRecord
    java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventVersionImpl -> android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventVersionImpl:
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
    void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> appendRecord
    java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
android.support.v4.view.accessibility.AccessibilityEventCompatIcs -> android.support.v4.view.accessibility.AccessibilityEventCompatIcs:
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
    void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> appendRecord
    java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
android.support.v4.view.accessibility.AccessibilityManagerCompat -> android.support.v4.view.accessibility.AccessibilityManagerCompat:
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl IMPL -> IMPL
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> removeAccessibilityStateChangeListener
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl access$000() -> access$000
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl:
    java.lang.Object newAccessiblityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> newAccessiblityStateChangeListener
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> removeAccessibilityStateChangeListener
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl$1 -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl$1:
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat val$listener -> val$listener
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl this$0 -> this$0
    void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerStubImpl -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerStubImpl:
    java.lang.Object newAccessiblityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> newAccessiblityStateChangeListener
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> removeAccessibilityStateChangeListener
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl:
    java.lang.Object newAccessiblityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> newAccessiblityStateChangeListener
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> removeAccessibilityStateChangeListener
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat:
    java.lang.Object mListener -> mListener
    void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
android.support.v4.view.accessibility.AccessibilityManagerCompatIcs -> android.support.v4.view.accessibility.AccessibilityManagerCompatIcs:
    java.lang.Object newAccessibilityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge) -> newAccessibilityStateChangeListener
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,java.lang.Object) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,java.lang.Object) -> removeAccessibilityStateChangeListener
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$1 -> android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$1:
    android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge val$bridge -> val$bridge
    void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge -> android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge:
    void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat:
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl IMPL -> IMPL
    java.lang.Object mInfo -> mInfo
    int ACTION_FOCUS -> ACTION_FOCUS
    int ACTION_CLEAR_FOCUS -> ACTION_CLEAR_FOCUS
    int ACTION_SELECT -> ACTION_SELECT
    int ACTION_CLEAR_SELECTION -> ACTION_CLEAR_SELECTION
    int ACTION_CLICK -> ACTION_CLICK
    int ACTION_LONG_CLICK -> ACTION_LONG_CLICK
    int ACTION_ACCESSIBILITY_FOCUS -> ACTION_ACCESSIBILITY_FOCUS
    int ACTION_CLEAR_ACCESSIBILITY_FOCUS -> ACTION_CLEAR_ACCESSIBILITY_FOCUS
    int ACTION_NEXT_AT_MOVEMENT_GRANULARITY -> ACTION_NEXT_AT_MOVEMENT_GRANULARITY
    int ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY -> ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY
    int ACTION_NEXT_HTML_ELEMENT -> ACTION_NEXT_HTML_ELEMENT
    int ACTION_PREVIOUS_HTML_ELEMENT -> ACTION_PREVIOUS_HTML_ELEMENT
    int ACTION_SCROLL_FORWARD -> ACTION_SCROLL_FORWARD
    int ACTION_SCROLL_BACKWARD -> ACTION_SCROLL_BACKWARD
    int ACTION_COPY -> ACTION_COPY
    int ACTION_PASTE -> ACTION_PASTE
    int ACTION_CUT -> ACTION_CUT
    int ACTION_SET_SELECTION -> ACTION_SET_SELECTION
    java.lang.String ACTION_ARGUMENT_MOVEMENT_GRANULARITY_INT -> ACTION_ARGUMENT_MOVEMENT_GRANULARITY_INT
    java.lang.String ACTION_ARGUMENT_HTML_ELEMENT_STRING -> ACTION_ARGUMENT_HTML_ELEMENT_STRING
    java.lang.String ACTION_ARGUMENT_EXTEND_SELECTION_BOOLEAN -> ACTION_ARGUMENT_EXTEND_SELECTION_BOOLEAN
    java.lang.String ACTION_ARGUMENT_SELECTION_START_INT -> ACTION_ARGUMENT_SELECTION_START_INT
    java.lang.String ACTION_ARGUMENT_SELECTION_END_INT -> ACTION_ARGUMENT_SELECTION_END_INT
    int FOCUS_INPUT -> FOCUS_INPUT
    int FOCUS_ACCESSIBILITY -> FOCUS_ACCESSIBILITY
    int MOVEMENT_GRANULARITY_CHARACTER -> MOVEMENT_GRANULARITY_CHARACTER
    int MOVEMENT_GRANULARITY_WORD -> MOVEMENT_GRANULARITY_WORD
    int MOVEMENT_GRANULARITY_LINE -> MOVEMENT_GRANULARITY_LINE
    int MOVEMENT_GRANULARITY_PARAGRAPH -> MOVEMENT_GRANULARITY_PARAGRAPH
    int MOVEMENT_GRANULARITY_PAGE -> MOVEMENT_GRANULARITY_PAGE
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat wrapNonNullInstance(java.lang.Object) -> wrapNonNullInstance
    java.lang.Object getInfo() -> getInfo
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.view.View) -> obtain
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.view.View,int) -> obtain
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain() -> obtain
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> obtain
    void setSource(android.view.View) -> setSource
    void setSource(android.view.View,int) -> setSource
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat findFocus(int) -> findFocus
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat focusSearch(int) -> focusSearch
    int getWindowId() -> getWindowId
    int getChildCount() -> getChildCount
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getChild(int) -> getChild
    void addChild(android.view.View) -> addChild
    void addChild(android.view.View,int) -> addChild
    int getActions() -> getActions
    void addAction(int) -> addAction
    boolean performAction(int) -> performAction
    boolean performAction(int,android.os.Bundle) -> performAction
    void setMovementGranularities(int) -> setMovementGranularities
    int getMovementGranularities() -> getMovementGranularities
    java.util.List findAccessibilityNodeInfosByText(java.lang.String) -> findAccessibilityNodeInfosByText
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getParent() -> getParent
    void setParent(android.view.View) -> setParent
    void setParent(android.view.View,int) -> setParent
    void getBoundsInParent(android.graphics.Rect) -> getBoundsInParent
    void setBoundsInParent(android.graphics.Rect) -> setBoundsInParent
    void getBoundsInScreen(android.graphics.Rect) -> getBoundsInScreen
    void setBoundsInScreen(android.graphics.Rect) -> setBoundsInScreen
    boolean isCheckable() -> isCheckable
    void setCheckable(boolean) -> setCheckable
    boolean isChecked() -> isChecked
    void setChecked(boolean) -> setChecked
    boolean isFocusable() -> isFocusable
    void setFocusable(boolean) -> setFocusable
    boolean isFocused() -> isFocused
    void setFocused(boolean) -> setFocused
    boolean isVisibleToUser() -> isVisibleToUser
    void setVisibleToUser(boolean) -> setVisibleToUser
    boolean isAccessibilityFocused() -> isAccessibilityFocused
    void setAccessibilityFocused(boolean) -> setAccessibilityFocused
    boolean isSelected() -> isSelected
    void setSelected(boolean) -> setSelected
    boolean isClickable() -> isClickable
    void setClickable(boolean) -> setClickable
    boolean isLongClickable() -> isLongClickable
    void setLongClickable(boolean) -> setLongClickable
    boolean isEnabled() -> isEnabled
    void setEnabled(boolean) -> setEnabled
    boolean isPassword() -> isPassword
    void setPassword(boolean) -> setPassword
    boolean isScrollable() -> isScrollable
    void setScrollable(boolean) -> setScrollable
    java.lang.CharSequence getPackageName() -> getPackageName
    void setPackageName(java.lang.CharSequence) -> setPackageName
    java.lang.CharSequence getClassName() -> getClassName
    void setClassName(java.lang.CharSequence) -> setClassName
    java.lang.CharSequence getText() -> getText
    void setText(java.lang.CharSequence) -> setText
    java.lang.CharSequence getContentDescription() -> getContentDescription
    void setContentDescription(java.lang.CharSequence) -> setContentDescription
    void recycle() -> recycle
    void setViewIdResourceName(java.lang.String) -> setViewIdResourceName
    java.lang.String getViewIdResourceName() -> getViewIdResourceName
    int getLiveRegion() -> getLiveRegion
    void setLiveRegion(int) -> setLiveRegion
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    java.lang.String getActionSymbolicName(int) -> getActionSymbolicName
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(android.view.View) -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    void addAction(java.lang.Object,int) -> addAction
    void addChild(java.lang.Object,android.view.View) -> addChild
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByText
    int getActions(java.lang.Object) -> getActions
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> getBoundsInParent
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> getBoundsInScreen
    java.lang.Object getChild(java.lang.Object,int) -> getChild
    int getChildCount(java.lang.Object) -> getChildCount
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    java.lang.CharSequence getPackageName(java.lang.Object) -> getPackageName
    java.lang.Object getParent(java.lang.Object) -> getParent
    java.lang.CharSequence getText(java.lang.Object) -> getText
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isCheckable(java.lang.Object) -> isCheckable
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isClickable(java.lang.Object) -> isClickable
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFocusable(java.lang.Object) -> isFocusable
    boolean isFocused(java.lang.Object) -> isFocused
    boolean isLongClickable(java.lang.Object) -> isLongClickable
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    boolean isSelected(java.lang.Object) -> isSelected
    boolean performAction(java.lang.Object,int) -> performAction
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> setBoundsInParent
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> setBoundsInScreen
    void setCheckable(java.lang.Object,boolean) -> setCheckable
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setClickable(java.lang.Object,boolean) -> setClickable
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFocusable(java.lang.Object,boolean) -> setFocusable
    void setFocused(java.lang.Object,boolean) -> setFocused
    void setLongClickable(java.lang.Object,boolean) -> setLongClickable
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> setPackageName
    void setParent(java.lang.Object,android.view.View) -> setParent
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSelected(java.lang.Object,boolean) -> setSelected
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setText(java.lang.Object,java.lang.CharSequence) -> setText
    void recycle(java.lang.Object) -> recycle
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(android.view.View) -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    java.lang.Object obtain(android.view.View,int) -> obtain
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    java.lang.Object findFocus(java.lang.Object,int) -> findFocus
    java.lang.Object focusSearch(java.lang.Object,int) -> focusSearch
    int getWindowId(java.lang.Object) -> getWindowId
    int getChildCount(java.lang.Object) -> getChildCount
    java.lang.Object getChild(java.lang.Object,int) -> getChild
    void addChild(java.lang.Object,android.view.View) -> addChild
    void addChild(java.lang.Object,android.view.View,int) -> addChild
    int getActions(java.lang.Object) -> getActions
    void addAction(java.lang.Object,int) -> addAction
    boolean performAction(java.lang.Object,int) -> performAction
    boolean performAction(java.lang.Object,int,android.os.Bundle) -> performAction
    void setMovementGranularities(java.lang.Object,int) -> setMovementGranularities
    int getMovementGranularities(java.lang.Object) -> getMovementGranularities
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByText
    java.lang.Object getParent(java.lang.Object) -> getParent
    void setParent(java.lang.Object,android.view.View,int) -> setParent
    void setParent(java.lang.Object,android.view.View) -> setParent
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> getBoundsInParent
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> setBoundsInParent
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> getBoundsInScreen
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> setBoundsInScreen
    boolean isCheckable(java.lang.Object) -> isCheckable
    void setCheckable(java.lang.Object,boolean) -> setCheckable
    boolean isChecked(java.lang.Object) -> isChecked
    void setChecked(java.lang.Object,boolean) -> setChecked
    boolean isFocusable(java.lang.Object) -> isFocusable
    void setFocusable(java.lang.Object,boolean) -> setFocusable
    boolean isFocused(java.lang.Object) -> isFocused
    void setFocused(java.lang.Object,boolean) -> setFocused
    boolean isVisibleToUser(java.lang.Object) -> isVisibleToUser
    void setVisibleToUser(java.lang.Object,boolean) -> setVisibleToUser
    boolean isAccessibilityFocused(java.lang.Object) -> isAccessibilityFocused
    void setAccessibilityFocused(java.lang.Object,boolean) -> setAccessibilityFocused
    boolean isSelected(java.lang.Object) -> isSelected
    void setSelected(java.lang.Object,boolean) -> setSelected
    boolean isClickable(java.lang.Object) -> isClickable
    void setClickable(java.lang.Object,boolean) -> setClickable
    boolean isLongClickable(java.lang.Object) -> isLongClickable
    void setLongClickable(java.lang.Object,boolean) -> setLongClickable
    boolean isEnabled(java.lang.Object) -> isEnabled
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    boolean isPassword(java.lang.Object) -> isPassword
    void setPassword(java.lang.Object,boolean) -> setPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    java.lang.CharSequence getPackageName(java.lang.Object) -> getPackageName
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> setPackageName
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    java.lang.CharSequence getText(java.lang.Object) -> getText
    void setText(java.lang.Object,java.lang.CharSequence) -> setText
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void recycle(java.lang.Object) -> recycle
    java.lang.String getViewIdResourceName(java.lang.Object) -> getViewIdResourceName
    void setViewIdResourceName(java.lang.Object,java.lang.String) -> setViewIdResourceName
    int getLiveRegion(java.lang.Object) -> getLiveRegion
    void setLiveRegion(java.lang.Object,int) -> setLiveRegion
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl:
    java.lang.Object obtain(android.view.View,int) -> obtain
    java.lang.Object findFocus(java.lang.Object,int) -> findFocus
    java.lang.Object focusSearch(java.lang.Object,int) -> focusSearch
    void addChild(java.lang.Object,android.view.View,int) -> addChild
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    boolean isVisibleToUser(java.lang.Object) -> isVisibleToUser
    void setVisibleToUser(java.lang.Object,boolean) -> setVisibleToUser
    boolean isAccessibilityFocused(java.lang.Object) -> isAccessibilityFocused
    void setAccessibilityFocused(java.lang.Object,boolean) -> setAccessibilityFocused
    boolean performAction(java.lang.Object,int,android.os.Bundle) -> performAction
    void setMovementGranularities(java.lang.Object,int) -> setMovementGranularities
    int getMovementGranularities(java.lang.Object) -> getMovementGranularities
    void setParent(java.lang.Object,android.view.View,int) -> setParent
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanMr2Impl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanMr2Impl:
    java.lang.String getViewIdResourceName(java.lang.Object) -> getViewIdResourceName
    void setViewIdResourceName(java.lang.Object,java.lang.String) -> setViewIdResourceName
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoKitKatImpl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoKitKatImpl:
    int getLiveRegion(java.lang.Object) -> getLiveRegion
    void setLiveRegion(java.lang.Object,int) -> setLiveRegion
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(android.view.View) -> obtain
    java.lang.Object obtain(android.view.View,int) -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    void addAction(java.lang.Object,int) -> addAction
    void addChild(java.lang.Object,android.view.View) -> addChild
    void addChild(java.lang.Object,android.view.View,int) -> addChild
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByText
    int getActions(java.lang.Object) -> getActions
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> getBoundsInParent
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> getBoundsInScreen
    java.lang.Object getChild(java.lang.Object,int) -> getChild
    int getChildCount(java.lang.Object) -> getChildCount
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    java.lang.CharSequence getPackageName(java.lang.Object) -> getPackageName
    java.lang.Object getParent(java.lang.Object) -> getParent
    java.lang.CharSequence getText(java.lang.Object) -> getText
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isCheckable(java.lang.Object) -> isCheckable
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isClickable(java.lang.Object) -> isClickable
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFocusable(java.lang.Object) -> isFocusable
    boolean isFocused(java.lang.Object) -> isFocused
    boolean isVisibleToUser(java.lang.Object) -> isVisibleToUser
    boolean isAccessibilityFocused(java.lang.Object) -> isAccessibilityFocused
    boolean isLongClickable(java.lang.Object) -> isLongClickable
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    boolean isSelected(java.lang.Object) -> isSelected
    boolean performAction(java.lang.Object,int) -> performAction
    boolean performAction(java.lang.Object,int,android.os.Bundle) -> performAction
    void setMovementGranularities(java.lang.Object,int) -> setMovementGranularities
    int getMovementGranularities(java.lang.Object) -> getMovementGranularities
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> setBoundsInParent
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> setBoundsInScreen
    void setCheckable(java.lang.Object,boolean) -> setCheckable
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setClickable(java.lang.Object,boolean) -> setClickable
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFocusable(java.lang.Object,boolean) -> setFocusable
    void setFocused(java.lang.Object,boolean) -> setFocused
    void setVisibleToUser(java.lang.Object,boolean) -> setVisibleToUser
    void setAccessibilityFocused(java.lang.Object,boolean) -> setAccessibilityFocused
    void setLongClickable(java.lang.Object,boolean) -> setLongClickable
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> setPackageName
    void setParent(java.lang.Object,android.view.View) -> setParent
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSelected(java.lang.Object,boolean) -> setSelected
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    java.lang.Object findFocus(java.lang.Object,int) -> findFocus
    java.lang.Object focusSearch(java.lang.Object,int) -> focusSearch
    void setText(java.lang.Object,java.lang.CharSequence) -> setText
    void recycle(java.lang.Object) -> recycle
    void setParent(java.lang.Object,android.view.View,int) -> setParent
    java.lang.String getViewIdResourceName(java.lang.Object) -> getViewIdResourceName
    void setViewIdResourceName(java.lang.Object,java.lang.String) -> setViewIdResourceName
    int getLiveRegion(java.lang.Object) -> getLiveRegion
    void setLiveRegion(java.lang.Object,int) -> setLiveRegion
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(android.view.View) -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    void addAction(java.lang.Object,int) -> addAction
    void addChild(java.lang.Object,android.view.View) -> addChild
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByText
    int getActions(java.lang.Object) -> getActions
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> getBoundsInParent
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> getBoundsInScreen
    java.lang.Object getChild(java.lang.Object,int) -> getChild
    int getChildCount(java.lang.Object) -> getChildCount
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    java.lang.CharSequence getPackageName(java.lang.Object) -> getPackageName
    java.lang.Object getParent(java.lang.Object) -> getParent
    java.lang.CharSequence getText(java.lang.Object) -> getText
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isCheckable(java.lang.Object) -> isCheckable
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isClickable(java.lang.Object) -> isClickable
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFocusable(java.lang.Object) -> isFocusable
    boolean isFocused(java.lang.Object) -> isFocused
    boolean isLongClickable(java.lang.Object) -> isLongClickable
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    boolean isSelected(java.lang.Object) -> isSelected
    boolean performAction(java.lang.Object,int) -> performAction
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> setBoundsInParent
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> setBoundsInScreen
    void setCheckable(java.lang.Object,boolean) -> setCheckable
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setClickable(java.lang.Object,boolean) -> setClickable
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFocusable(java.lang.Object,boolean) -> setFocusable
    void setFocused(java.lang.Object,boolean) -> setFocused
    void setLongClickable(java.lang.Object,boolean) -> setLongClickable
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> setPackageName
    void setParent(java.lang.Object,android.view.View) -> setParent
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSelected(java.lang.Object,boolean) -> setSelected
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setText(java.lang.Object,java.lang.CharSequence) -> setText
    void recycle(java.lang.Object) -> recycle
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean:
    void addChild(java.lang.Object,android.view.View,int) -> addChild
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    boolean isVisibleToUser(java.lang.Object) -> isVisibleToUser
    void setVisibleToUser(java.lang.Object,boolean) -> setVisibleToUser
    boolean performAction(java.lang.Object,int,android.os.Bundle) -> performAction
    void setMovementGranularities(java.lang.Object,int) -> setMovementGranularities
    int getMovementGranularities(java.lang.Object) -> getMovementGranularities
    java.lang.Object obtain(android.view.View,int) -> obtain
    java.lang.Object findFocus(java.lang.Object,int) -> findFocus
    java.lang.Object focusSearch(java.lang.Object,int) -> focusSearch
    void setParent(java.lang.Object,android.view.View,int) -> setParent
    boolean isAccessibilityFocused(java.lang.Object) -> isAccessibilityFocused
    void setAccesibilityFocused(java.lang.Object,boolean) -> setAccesibilityFocused
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellybeanMr2 -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellybeanMr2:
    void setViewIdResourceName(java.lang.Object,java.lang.String) -> setViewIdResourceName
    java.lang.String getViewIdResourceName(java.lang.Object) -> getViewIdResourceName
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatKitKat -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatKitKat:
    int getLiveRegion(java.lang.Object) -> getLiveRegion
    void setLiveRegion(java.lang.Object,int) -> setLiveRegion
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl IMPL -> IMPL
    java.lang.Object mProvider -> mProvider
    java.lang.Object getProvider() -> getProvider
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    boolean performAction(int,int,android.os.Bundle) -> performAction
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat findFocus(int) -> findFocus
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl$1 -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl$1:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat val$compat -> val$compat
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl this$0 -> this$0
    boolean performAction(int,int,android.os.Bundle) -> performAction
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    java.lang.Object createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl$1 -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl$1:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat val$compat -> val$compat
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl this$0 -> this$0
    boolean performAction(int,int,android.os.Bundle) -> performAction
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    java.lang.Object createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.lang.Object findFocus(int) -> findFocus
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderStubImpl -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderStubImpl:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$1 -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$1:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge val$bridge -> val$bridge
    android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    boolean performAction(int,int,android.os.Bundle) -> performAction
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge:
    java.lang.Object createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    boolean performAction(int,int,android.os.Bundle) -> performAction
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$1 -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$1:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge val$bridge -> val$bridge
    android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    boolean performAction(int,int,android.os.Bundle) -> performAction
    android.view.accessibility.AccessibilityNodeInfo findFocus(int) -> findFocus
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge:
    java.lang.Object createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    boolean performAction(int,int,android.os.Bundle) -> performAction
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    java.lang.Object findFocus(int) -> findFocus
android.support.v4.view.accessibility.AccessibilityRecordCompat -> android.support.v4.view.accessibility.AccessibilityRecordCompat:
    android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl IMPL -> IMPL
    java.lang.Object mRecord -> mRecord
    java.lang.Object getImpl() -> getImpl
    android.support.v4.view.accessibility.AccessibilityRecordCompat obtain(android.support.v4.view.accessibility.AccessibilityRecordCompat) -> obtain
    android.support.v4.view.accessibility.AccessibilityRecordCompat obtain() -> obtain
    void setSource(android.view.View) -> setSource
    void setSource(android.view.View,int) -> setSource
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource() -> getSource
    int getWindowId() -> getWindowId
    boolean isChecked() -> isChecked
    void setChecked(boolean) -> setChecked
    boolean isEnabled() -> isEnabled
    void setEnabled(boolean) -> setEnabled
    boolean isPassword() -> isPassword
    void setPassword(boolean) -> setPassword
    boolean isFullScreen() -> isFullScreen
    void setFullScreen(boolean) -> setFullScreen
    boolean isScrollable() -> isScrollable
    void setScrollable(boolean) -> setScrollable
    int getItemCount() -> getItemCount
    void setItemCount(int) -> setItemCount
    int getCurrentItemIndex() -> getCurrentItemIndex
    void setCurrentItemIndex(int) -> setCurrentItemIndex
    int getFromIndex() -> getFromIndex
    void setFromIndex(int) -> setFromIndex
    int getToIndex() -> getToIndex
    void setToIndex(int) -> setToIndex
    int getScrollX() -> getScrollX
    void setScrollX(int) -> setScrollX
    int getScrollY() -> getScrollY
    void setScrollY(int) -> setScrollY
    int getMaxScrollX() -> getMaxScrollX
    void setMaxScrollX(int) -> setMaxScrollX
    int getMaxScrollY() -> getMaxScrollY
    void setMaxScrollY(int) -> setMaxScrollY
    int getAddedCount() -> getAddedCount
    void setAddedCount(int) -> setAddedCount
    int getRemovedCount() -> getRemovedCount
    void setRemovedCount(int) -> setRemovedCount
    java.lang.CharSequence getClassName() -> getClassName
    void setClassName(java.lang.CharSequence) -> setClassName
    java.util.List getText() -> getText
    java.lang.CharSequence getBeforeText() -> getBeforeText
    void setBeforeText(java.lang.CharSequence) -> setBeforeText
    java.lang.CharSequence getContentDescription() -> getContentDescription
    void setContentDescription(java.lang.CharSequence) -> setContentDescription
    android.os.Parcelable getParcelableData() -> getParcelableData
    void setParcelableData(android.os.Parcelable) -> setParcelableData
    void recycle() -> recycle
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    int getAddedCount(java.lang.Object) -> getAddedCount
    java.lang.CharSequence getBeforeText(java.lang.Object) -> getBeforeText
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    int getCurrentItemIndex(java.lang.Object) -> getCurrentItemIndex
    int getFromIndex(java.lang.Object) -> getFromIndex
    int getItemCount(java.lang.Object) -> getItemCount
    android.os.Parcelable getParcelableData(java.lang.Object) -> getParcelableData
    int getRemovedCount(java.lang.Object) -> getRemovedCount
    int getScrollX(java.lang.Object) -> getScrollX
    int getScrollY(java.lang.Object) -> getScrollY
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource(java.lang.Object) -> getSource
    java.util.List getText(java.lang.Object) -> getText
    int getToIndex(java.lang.Object) -> getToIndex
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFullScreen(java.lang.Object) -> isFullScreen
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    void recycle(java.lang.Object) -> recycle
    void setAddedCount(java.lang.Object,int) -> setAddedCount
    void setBeforeText(java.lang.Object,java.lang.CharSequence) -> setBeforeText
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setCurrentItemIndex(java.lang.Object,int) -> setCurrentItemIndex
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFromIndex(java.lang.Object,int) -> setFromIndex
    void setFullScreen(java.lang.Object,boolean) -> setFullScreen
    void setItemCount(java.lang.Object,int) -> setItemCount
    void setParcelableData(java.lang.Object,android.os.Parcelable) -> setParcelableData
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setRemovedCount(java.lang.Object,int) -> setRemovedCount
    void setScrollX(java.lang.Object,int) -> setScrollX
    void setScrollY(java.lang.Object,int) -> setScrollY
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setToIndex(java.lang.Object,int) -> setToIndex
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsMr1Impl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsMr1Impl:
    int getMaxScrollX(java.lang.Object) -> getMaxScrollX
    int getMaxScrollY(java.lang.Object) -> getMaxScrollY
    void setMaxScrollX(java.lang.Object,int) -> setMaxScrollX
    void setMaxScrollY(java.lang.Object,int) -> setMaxScrollY
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource(java.lang.Object) -> getSource
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isChecked(java.lang.Object) -> isChecked
    void setChecked(java.lang.Object,boolean) -> setChecked
    boolean isEnabled(java.lang.Object) -> isEnabled
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    boolean isPassword(java.lang.Object) -> isPassword
    void setPassword(java.lang.Object,boolean) -> setPassword
    boolean isFullScreen(java.lang.Object) -> isFullScreen
    void setFullScreen(java.lang.Object,boolean) -> setFullScreen
    boolean isScrollable(java.lang.Object) -> isScrollable
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    int getItemCount(java.lang.Object) -> getItemCount
    void setItemCount(java.lang.Object,int) -> setItemCount
    int getCurrentItemIndex(java.lang.Object) -> getCurrentItemIndex
    void setCurrentItemIndex(java.lang.Object,int) -> setCurrentItemIndex
    int getFromIndex(java.lang.Object) -> getFromIndex
    void setFromIndex(java.lang.Object,int) -> setFromIndex
    int getToIndex(java.lang.Object) -> getToIndex
    void setToIndex(java.lang.Object,int) -> setToIndex
    int getScrollX(java.lang.Object) -> getScrollX
    void setScrollX(java.lang.Object,int) -> setScrollX
    int getScrollY(java.lang.Object) -> getScrollY
    void setScrollY(java.lang.Object,int) -> setScrollY
    int getMaxScrollX(java.lang.Object) -> getMaxScrollX
    void setMaxScrollX(java.lang.Object,int) -> setMaxScrollX
    int getMaxScrollY(java.lang.Object) -> getMaxScrollY
    void setMaxScrollY(java.lang.Object,int) -> setMaxScrollY
    int getAddedCount(java.lang.Object) -> getAddedCount
    void setAddedCount(java.lang.Object,int) -> setAddedCount
    int getRemovedCount(java.lang.Object) -> getRemovedCount
    void setRemovedCount(java.lang.Object,int) -> setRemovedCount
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    java.util.List getText(java.lang.Object) -> getText
    java.lang.CharSequence getBeforeText(java.lang.Object) -> getBeforeText
    void setBeforeText(java.lang.Object,java.lang.CharSequence) -> setBeforeText
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    android.os.Parcelable getParcelableData(java.lang.Object) -> getParcelableData
    void setParcelableData(java.lang.Object,android.os.Parcelable) -> setParcelableData
    void recycle(java.lang.Object) -> recycle
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordJellyBeanImpl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordJellyBeanImpl:
    void setSource(java.lang.Object,android.view.View,int) -> setSource
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    int getAddedCount(java.lang.Object) -> getAddedCount
    java.lang.CharSequence getBeforeText(java.lang.Object) -> getBeforeText
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    int getCurrentItemIndex(java.lang.Object) -> getCurrentItemIndex
    int getFromIndex(java.lang.Object) -> getFromIndex
    int getItemCount(java.lang.Object) -> getItemCount
    int getMaxScrollX(java.lang.Object) -> getMaxScrollX
    int getMaxScrollY(java.lang.Object) -> getMaxScrollY
    android.os.Parcelable getParcelableData(java.lang.Object) -> getParcelableData
    int getRemovedCount(java.lang.Object) -> getRemovedCount
    int getScrollX(java.lang.Object) -> getScrollX
    int getScrollY(java.lang.Object) -> getScrollY
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource(java.lang.Object) -> getSource
    java.util.List getText(java.lang.Object) -> getText
    int getToIndex(java.lang.Object) -> getToIndex
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFullScreen(java.lang.Object) -> isFullScreen
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    void recycle(java.lang.Object) -> recycle
    void setAddedCount(java.lang.Object,int) -> setAddedCount
    void setBeforeText(java.lang.Object,java.lang.CharSequence) -> setBeforeText
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setCurrentItemIndex(java.lang.Object,int) -> setCurrentItemIndex
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFromIndex(java.lang.Object,int) -> setFromIndex
    void setFullScreen(java.lang.Object,boolean) -> setFullScreen
    void setItemCount(java.lang.Object,int) -> setItemCount
    void setMaxScrollX(java.lang.Object,int) -> setMaxScrollX
    void setMaxScrollY(java.lang.Object,int) -> setMaxScrollY
    void setParcelableData(java.lang.Object,android.os.Parcelable) -> setParcelableData
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setRemovedCount(java.lang.Object,int) -> setRemovedCount
    void setScrollX(java.lang.Object,int) -> setScrollX
    void setScrollY(java.lang.Object,int) -> setScrollY
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    void setToIndex(java.lang.Object,int) -> setToIndex
android.support.v4.view.accessibility.AccessibilityRecordCompatIcs -> android.support.v4.view.accessibility.AccessibilityRecordCompatIcs:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    int getAddedCount(java.lang.Object) -> getAddedCount
    java.lang.CharSequence getBeforeText(java.lang.Object) -> getBeforeText
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    int getCurrentItemIndex(java.lang.Object) -> getCurrentItemIndex
    int getFromIndex(java.lang.Object) -> getFromIndex
    int getItemCount(java.lang.Object) -> getItemCount
    android.os.Parcelable getParcelableData(java.lang.Object) -> getParcelableData
    int getRemovedCount(java.lang.Object) -> getRemovedCount
    int getScrollX(java.lang.Object) -> getScrollX
    int getScrollY(java.lang.Object) -> getScrollY
    java.lang.Object getSource(java.lang.Object) -> getSource
    java.util.List getText(java.lang.Object) -> getText
    int getToIndex(java.lang.Object) -> getToIndex
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFullScreen(java.lang.Object) -> isFullScreen
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    void recycle(java.lang.Object) -> recycle
    void setAddedCount(java.lang.Object,int) -> setAddedCount
    void setBeforeText(java.lang.Object,java.lang.CharSequence) -> setBeforeText
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setCurrentItemIndex(java.lang.Object,int) -> setCurrentItemIndex
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFromIndex(java.lang.Object,int) -> setFromIndex
    void setFullScreen(java.lang.Object,boolean) -> setFullScreen
    void setItemCount(java.lang.Object,int) -> setItemCount
    void setParcelableData(java.lang.Object,android.os.Parcelable) -> setParcelableData
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setRemovedCount(java.lang.Object,int) -> setRemovedCount
    void setScrollX(java.lang.Object,int) -> setScrollX
    void setScrollY(java.lang.Object,int) -> setScrollY
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setToIndex(java.lang.Object,int) -> setToIndex
android.support.v4.view.accessibility.AccessibilityRecordCompatIcsMr1 -> android.support.v4.view.accessibility.AccessibilityRecordCompatIcsMr1:
    int getMaxScrollX(java.lang.Object) -> getMaxScrollX
    int getMaxScrollY(java.lang.Object) -> getMaxScrollY
    void setMaxScrollX(java.lang.Object,int) -> setMaxScrollX
    void setMaxScrollY(java.lang.Object,int) -> setMaxScrollY
android.support.v4.view.accessibility.AccessibilityRecordCompatJellyBean -> android.support.v4.view.accessibility.AccessibilityRecordCompatJellyBean:
    void setSource(java.lang.Object,android.view.View,int) -> setSource
android.support.v4.widget.AutoScrollHelper -> android.support.v4.widget.AutoScrollHelper:
    float RELATIVE_UNSPECIFIED -> RELATIVE_UNSPECIFIED
    float NO_MAX -> NO_MAX
    float NO_MIN -> NO_MIN
    int EDGE_TYPE_INSIDE -> EDGE_TYPE_INSIDE
    int EDGE_TYPE_INSIDE_EXTEND -> EDGE_TYPE_INSIDE_EXTEND
    int EDGE_TYPE_OUTSIDE -> EDGE_TYPE_OUTSIDE
    int HORIZONTAL -> HORIZONTAL
    int VERTICAL -> VERTICAL
    android.support.v4.widget.AutoScrollHelper$ClampedScroller mScroller -> mScroller
    android.view.animation.Interpolator mEdgeInterpolator -> mEdgeInterpolator
    android.view.View mTarget -> mTarget
    java.lang.Runnable mRunnable -> mRunnable
    float[] mRelativeEdges -> mRelativeEdges
    float[] mMaximumEdges -> mMaximumEdges
    int mEdgeType -> mEdgeType
    int mActivationDelay -> mActivationDelay
    float[] mRelativeVelocity -> mRelativeVelocity
    float[] mMinimumVelocity -> mMinimumVelocity
    float[] mMaximumVelocity -> mMaximumVelocity
    boolean mAlreadyDelayed -> mAlreadyDelayed
    boolean mNeedsReset -> mNeedsReset
    boolean mNeedsCancel -> mNeedsCancel
    boolean mAnimating -> mAnimating
    boolean mEnabled -> mEnabled
    boolean mExclusive -> mExclusive
    int DEFAULT_EDGE_TYPE -> DEFAULT_EDGE_TYPE
    int DEFAULT_MINIMUM_VELOCITY_DIPS -> DEFAULT_MINIMUM_VELOCITY_DIPS
    int DEFAULT_MAXIMUM_VELOCITY_DIPS -> DEFAULT_MAXIMUM_VELOCITY_DIPS
    float DEFAULT_MAXIMUM_EDGE -> DEFAULT_MAXIMUM_EDGE
    float DEFAULT_RELATIVE_EDGE -> DEFAULT_RELATIVE_EDGE
    float DEFAULT_RELATIVE_VELOCITY -> DEFAULT_RELATIVE_VELOCITY
    int DEFAULT_ACTIVATION_DELAY -> DEFAULT_ACTIVATION_DELAY
    int DEFAULT_RAMP_UP_DURATION -> DEFAULT_RAMP_UP_DURATION
    int DEFAULT_RAMP_DOWN_DURATION -> DEFAULT_RAMP_DOWN_DURATION
    android.support.v4.widget.AutoScrollHelper setEnabled(boolean) -> setEnabled
    boolean isEnabled() -> isEnabled
    android.support.v4.widget.AutoScrollHelper setExclusive(boolean) -> setExclusive
    boolean isExclusive() -> isExclusive
    android.support.v4.widget.AutoScrollHelper setMaximumVelocity(float,float) -> setMaximumVelocity
    android.support.v4.widget.AutoScrollHelper setMinimumVelocity(float,float) -> setMinimumVelocity
    android.support.v4.widget.AutoScrollHelper setRelativeVelocity(float,float) -> setRelativeVelocity
    android.support.v4.widget.AutoScrollHelper setEdgeType(int) -> setEdgeType
    android.support.v4.widget.AutoScrollHelper setRelativeEdges(float,float) -> setRelativeEdges
    android.support.v4.widget.AutoScrollHelper setMaximumEdges(float,float) -> setMaximumEdges
    android.support.v4.widget.AutoScrollHelper setActivationDelay(int) -> setActivationDelay
    android.support.v4.widget.AutoScrollHelper setRampUpDuration(int) -> setRampUpDuration
    android.support.v4.widget.AutoScrollHelper setRampDownDuration(int) -> setRampDownDuration
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    boolean shouldAnimate() -> shouldAnimate
    void startAnimating() -> startAnimating
    void requestStop() -> requestStop
    float computeTargetVelocity(int,float,float,float) -> computeTargetVelocity
    void scrollTargetBy(int,int) -> scrollTargetBy
    boolean canTargetScrollHorizontally(int) -> canTargetScrollHorizontally
    boolean canTargetScrollVertically(int) -> canTargetScrollVertically
    float getEdgeValue(float,float,float,float) -> getEdgeValue
    float constrainEdgeValue(float,float) -> constrainEdgeValue
    int constrain(int,int,int) -> constrain
    float constrain(float,float,float) -> constrain
    void cancelTargetTouch() -> cancelTargetTouch
    boolean access$100(android.support.v4.widget.AutoScrollHelper) -> access$100
    boolean access$200(android.support.v4.widget.AutoScrollHelper) -> access$200
    boolean access$202(android.support.v4.widget.AutoScrollHelper,boolean) -> access$202
    android.support.v4.widget.AutoScrollHelper$ClampedScroller access$300(android.support.v4.widget.AutoScrollHelper) -> access$300
    boolean access$400(android.support.v4.widget.AutoScrollHelper) -> access$400
    boolean access$102(android.support.v4.widget.AutoScrollHelper,boolean) -> access$102
    boolean access$500(android.support.v4.widget.AutoScrollHelper) -> access$500
    boolean access$502(android.support.v4.widget.AutoScrollHelper,boolean) -> access$502
    void access$600(android.support.v4.widget.AutoScrollHelper) -> access$600
    android.view.View access$700(android.support.v4.widget.AutoScrollHelper) -> access$700
    int access$800(int,int,int) -> access$800
    float access$900(float,float,float) -> access$900
android.support.v4.widget.AutoScrollHelper$1 -> android.support.v4.widget.AutoScrollHelper$1:
android.support.v4.widget.AutoScrollHelper$ClampedScroller -> android.support.v4.widget.AutoScrollHelper$ClampedScroller:
    int mRampUpDuration -> mRampUpDuration
    int mRampDownDuration -> mRampDownDuration
    float mTargetVelocityX -> mTargetVelocityX
    float mTargetVelocityY -> mTargetVelocityY
    long mStartTime -> mStartTime
    long mDeltaTime -> mDeltaTime
    int mDeltaX -> mDeltaX
    int mDeltaY -> mDeltaY
    long mStopTime -> mStopTime
    float mStopValue -> mStopValue
    int mEffectiveRampDown -> mEffectiveRampDown
    void setRampUpDuration(int) -> setRampUpDuration
    void setRampDownDuration(int) -> setRampDownDuration
    void start() -> start
    void requestStop() -> requestStop
    boolean isFinished() -> isFinished
    float getValueAt(long) -> getValueAt
    float interpolateValue(float) -> interpolateValue
    void computeScrollDelta() -> computeScrollDelta
    void setTargetVelocity(float,float) -> setTargetVelocity
    int getHorizontalDirection() -> getHorizontalDirection
    int getVerticalDirection() -> getVerticalDirection
    int getDeltaX() -> getDeltaX
    int getDeltaY() -> getDeltaY
android.support.v4.widget.AutoScrollHelper$ScrollAnimationRunnable -> android.support.v4.widget.AutoScrollHelper$ScrollAnimationRunnable:
    android.support.v4.widget.AutoScrollHelper this$0 -> this$0
    void run() -> run
android.support.v4.widget.BakedBezierInterpolator -> android.support.v4.widget.BakedBezierInterpolator:
    android.support.v4.widget.BakedBezierInterpolator INSTANCE -> INSTANCE
    float[] VALUES -> VALUES
    float STEP_SIZE -> STEP_SIZE
    android.support.v4.widget.BakedBezierInterpolator getInstance() -> getInstance
    float getInterpolation(float) -> getInterpolation
android.support.v4.widget.ContentLoadingProgressBar -> android.support.v4.widget.ContentLoadingProgressBar:
    int MIN_SHOW_TIME -> MIN_SHOW_TIME
    int MIN_DELAY -> MIN_DELAY
    long mStartTime -> mStartTime
    boolean mPostedHide -> mPostedHide
    boolean mPostedShow -> mPostedShow
    boolean mDismissed -> mDismissed
    java.lang.Runnable mDelayedHide -> mDelayedHide
    java.lang.Runnable mDelayedShow -> mDelayedShow
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void removeCallbacks() -> removeCallbacks
    void hide() -> hide
    void show() -> show
    boolean access$002(android.support.v4.widget.ContentLoadingProgressBar,boolean) -> access$002
    long access$102(android.support.v4.widget.ContentLoadingProgressBar,long) -> access$102
    boolean access$202(android.support.v4.widget.ContentLoadingProgressBar,boolean) -> access$202
    boolean access$300(android.support.v4.widget.ContentLoadingProgressBar) -> access$300
android.support.v4.widget.ContentLoadingProgressBar$1 -> android.support.v4.widget.ContentLoadingProgressBar$1:
    android.support.v4.widget.ContentLoadingProgressBar this$0 -> this$0
    void run() -> run
android.support.v4.widget.ContentLoadingProgressBar$2 -> android.support.v4.widget.ContentLoadingProgressBar$2:
    android.support.v4.widget.ContentLoadingProgressBar this$0 -> this$0
    void run() -> run
android.support.v4.widget.CursorAdapter -> android.support.v4.widget.CursorAdapter:
    boolean mDataValid -> mDataValid
    boolean mAutoRequery -> mAutoRequery
    android.database.Cursor mCursor -> mCursor
    android.content.Context mContext -> mContext
    int mRowIDColumn -> mRowIDColumn
    android.support.v4.widget.CursorAdapter$ChangeObserver mChangeObserver -> mChangeObserver
    android.database.DataSetObserver mDataSetObserver -> mDataSetObserver
    android.support.v4.widget.CursorFilter mCursorFilter -> mCursorFilter
    android.widget.FilterQueryProvider mFilterQueryProvider -> mFilterQueryProvider
    int FLAG_AUTO_REQUERY -> FLAG_AUTO_REQUERY
    int FLAG_REGISTER_CONTENT_OBSERVER -> FLAG_REGISTER_CONTENT_OBSERVER
    void init(android.content.Context,android.database.Cursor,boolean) -> init
    void init(android.content.Context,android.database.Cursor,int) -> init
    android.database.Cursor getCursor() -> getCursor
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    boolean hasStableIds() -> hasStableIds
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
    android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newDropDownView
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    void changeCursor(android.database.Cursor) -> changeCursor
    android.database.Cursor swapCursor(android.database.Cursor) -> swapCursor
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> runQueryOnBackgroundThread
    android.widget.Filter getFilter() -> getFilter
    android.widget.FilterQueryProvider getFilterQueryProvider() -> getFilterQueryProvider
    void setFilterQueryProvider(android.widget.FilterQueryProvider) -> setFilterQueryProvider
    void onContentChanged() -> onContentChanged
android.support.v4.widget.CursorAdapter$1 -> android.support.v4.widget.CursorAdapter$1:
android.support.v4.widget.CursorAdapter$ChangeObserver -> android.support.v4.widget.CursorAdapter$ChangeObserver:
    android.support.v4.widget.CursorAdapter this$0 -> this$0
    boolean deliverSelfNotifications() -> deliverSelfNotifications
    void onChange(boolean) -> onChange
android.support.v4.widget.CursorAdapter$MyDataSetObserver -> android.support.v4.widget.CursorAdapter$MyDataSetObserver:
    android.support.v4.widget.CursorAdapter this$0 -> this$0
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.widget.CursorFilter -> android.support.v4.widget.CursorFilter:
    android.support.v4.widget.CursorFilter$CursorFilterClient mClient -> mClient
    java.lang.CharSequence convertResultToString(java.lang.Object) -> convertResultToString
    android.widget.Filter$FilterResults performFiltering(java.lang.CharSequence) -> performFiltering
    void publishResults(java.lang.CharSequence,android.widget.Filter$FilterResults) -> publishResults
android.support.v4.widget.CursorFilter$CursorFilterClient -> android.support.v4.widget.CursorFilter$CursorFilterClient:
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> runQueryOnBackgroundThread
    android.database.Cursor getCursor() -> getCursor
    void changeCursor(android.database.Cursor) -> changeCursor
android.support.v4.widget.DrawerLayout -> android.support.v4.widget.DrawerLayout:
    java.lang.String TAG -> TAG
    int STATE_IDLE -> STATE_IDLE
    int STATE_DRAGGING -> STATE_DRAGGING
    int STATE_SETTLING -> STATE_SETTLING
    int LOCK_MODE_UNLOCKED -> LOCK_MODE_UNLOCKED
    int LOCK_MODE_LOCKED_CLOSED -> LOCK_MODE_LOCKED_CLOSED
    int LOCK_MODE_LOCKED_OPEN -> LOCK_MODE_LOCKED_OPEN
    int MIN_DRAWER_MARGIN -> MIN_DRAWER_MARGIN
    int DEFAULT_SCRIM_COLOR -> DEFAULT_SCRIM_COLOR
    int PEEK_DELAY -> PEEK_DELAY
    int MIN_FLING_VELOCITY -> MIN_FLING_VELOCITY
    boolean ALLOW_EDGE_LOCK -> ALLOW_EDGE_LOCK
    boolean CHILDREN_DISALLOW_INTERCEPT -> CHILDREN_DISALLOW_INTERCEPT
    float TOUCH_SLOP_SENSITIVITY -> TOUCH_SLOP_SENSITIVITY
    int[] LAYOUT_ATTRS -> LAYOUT_ATTRS
    android.support.v4.widget.DrawerLayout$ChildAccessibilityDelegate mChildAccessibilityDelegate -> mChildAccessibilityDelegate
    int mMinDrawerMargin -> mMinDrawerMargin
    int mScrimColor -> mScrimColor
    float mScrimOpacity -> mScrimOpacity
    android.graphics.Paint mScrimPaint -> mScrimPaint
    android.support.v4.widget.ViewDragHelper mLeftDragger -> mLeftDragger
    android.support.v4.widget.ViewDragHelper mRightDragger -> mRightDragger
    android.support.v4.widget.DrawerLayout$ViewDragCallback mLeftCallback -> mLeftCallback
    android.support.v4.widget.DrawerLayout$ViewDragCallback mRightCallback -> mRightCallback
    int mDrawerState -> mDrawerState
    boolean mInLayout -> mInLayout
    boolean mFirstLayout -> mFirstLayout
    int mLockModeLeft -> mLockModeLeft
    int mLockModeRight -> mLockModeRight
    boolean mDisallowInterceptRequested -> mDisallowInterceptRequested
    boolean mChildrenCanceledTouch -> mChildrenCanceledTouch
    android.support.v4.widget.DrawerLayout$DrawerListener mListener -> mListener
    float mInitialMotionX -> mInitialMotionX
    float mInitialMotionY -> mInitialMotionY
    android.graphics.drawable.Drawable mShadowLeft -> mShadowLeft
    android.graphics.drawable.Drawable mShadowRight -> mShadowRight
    java.lang.CharSequence mTitleLeft -> mTitleLeft
    java.lang.CharSequence mTitleRight -> mTitleRight
    void setDrawerShadow(android.graphics.drawable.Drawable,int) -> setDrawerShadow
    void setDrawerShadow(int,int) -> setDrawerShadow
    void setScrimColor(int) -> setScrimColor
    void setDrawerListener(android.support.v4.widget.DrawerLayout$DrawerListener) -> setDrawerListener
    void setDrawerLockMode(int) -> setDrawerLockMode
    void setDrawerLockMode(int,int) -> setDrawerLockMode
    void setDrawerLockMode(int,android.view.View) -> setDrawerLockMode
    int getDrawerLockMode(int) -> getDrawerLockMode
    int getDrawerLockMode(android.view.View) -> getDrawerLockMode
    void setDrawerTitle(int,java.lang.CharSequence) -> setDrawerTitle
    java.lang.CharSequence getDrawerTitle(int) -> getDrawerTitle
    void updateDrawerState(int,int,android.view.View) -> updateDrawerState
    void dispatchOnDrawerClosed(android.view.View) -> dispatchOnDrawerClosed
    void dispatchOnDrawerOpened(android.view.View) -> dispatchOnDrawerOpened
    void dispatchOnDrawerSlide(android.view.View,float) -> dispatchOnDrawerSlide
    void setDrawerViewOffset(android.view.View,float) -> setDrawerViewOffset
    float getDrawerViewOffset(android.view.View) -> getDrawerViewOffset
    int getDrawerViewAbsoluteGravity(android.view.View) -> getDrawerViewAbsoluteGravity
    boolean checkDrawerViewAbsoluteGravity(android.view.View,int) -> checkDrawerViewAbsoluteGravity
    android.view.View findOpenDrawer() -> findOpenDrawer
    void moveDrawerToOffset(android.view.View,float) -> moveDrawerToOffset
    android.view.View findDrawerWithGravity(int) -> findDrawerWithGravity
    java.lang.String gravityToString(int) -> gravityToString
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void requestLayout() -> requestLayout
    void computeScroll() -> computeScroll
    boolean hasOpaqueBackground(android.view.View) -> hasOpaqueBackground
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    boolean isContentView(android.view.View) -> isContentView
    boolean isDrawerView(android.view.View) -> isDrawerView
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    void closeDrawers() -> closeDrawers
    void closeDrawers(boolean) -> closeDrawers
    void openDrawer(android.view.View) -> openDrawer
    void openDrawer(int) -> openDrawer
    void closeDrawer(android.view.View) -> closeDrawer
    void closeDrawer(int) -> closeDrawer
    boolean isDrawerOpen(android.view.View) -> isDrawerOpen
    boolean isDrawerOpen(int) -> isDrawerOpen
    boolean isDrawerVisible(android.view.View) -> isDrawerVisible
    boolean isDrawerVisible(int) -> isDrawerVisible
    boolean hasPeekingDrawer() -> hasPeekingDrawer
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    boolean hasVisibleDrawer() -> hasVisibleDrawer
    android.view.View findVisibleDrawer() -> findVisibleDrawer
    void cancelChildViewTouch() -> cancelChildViewTouch
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    boolean includeChildForAccessibilitiy(android.view.View) -> includeChildForAccessibilitiy
    int[] access$100() -> access$100
    android.view.View access$200(android.support.v4.widget.DrawerLayout) -> access$200
    boolean access$300(android.view.View) -> access$300
android.support.v4.widget.DrawerLayout$AccessibilityDelegate -> android.support.v4.widget.DrawerLayout$AccessibilityDelegate:
    android.graphics.Rect mTmpRect -> mTmpRect
    android.support.v4.widget.DrawerLayout this$0 -> this$0
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void addChildrenForAccessibility(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat,android.view.ViewGroup) -> addChildrenForAccessibility
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void copyNodeInfoNoChildren(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> copyNodeInfoNoChildren
android.support.v4.widget.DrawerLayout$ChildAccessibilityDelegate -> android.support.v4.widget.DrawerLayout$ChildAccessibilityDelegate:
    android.support.v4.widget.DrawerLayout this$0 -> this$0
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
android.support.v4.widget.DrawerLayout$DrawerListener -> android.support.v4.widget.DrawerLayout$DrawerListener:
    void onDrawerSlide(android.view.View,float) -> onDrawerSlide
    void onDrawerOpened(android.view.View) -> onDrawerOpened
    void onDrawerClosed(android.view.View) -> onDrawerClosed
    void onDrawerStateChanged(int) -> onDrawerStateChanged
android.support.v4.widget.DrawerLayout$EdgeGravity -> android.support.v4.widget.DrawerLayout$EdgeGravity:
android.support.v4.widget.DrawerLayout$LayoutParams -> android.support.v4.widget.DrawerLayout$LayoutParams:
    int gravity -> gravity
    float onScreen -> onScreen
    boolean isPeeking -> isPeeking
    boolean knownOpen -> knownOpen
android.support.v4.widget.DrawerLayout$LockMode -> android.support.v4.widget.DrawerLayout$LockMode:
android.support.v4.widget.DrawerLayout$SavedState -> android.support.v4.widget.DrawerLayout$SavedState:
    int openDrawerGravity -> openDrawerGravity
    int lockModeLeft -> lockModeLeft
    int lockModeRight -> lockModeRight
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.DrawerLayout$SavedState$1 -> android.support.v4.widget.DrawerLayout$SavedState$1:
    android.support.v4.widget.DrawerLayout$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.widget.DrawerLayout$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.DrawerLayout$SimpleDrawerListener -> android.support.v4.widget.DrawerLayout$SimpleDrawerListener:
    void onDrawerSlide(android.view.View,float) -> onDrawerSlide
    void onDrawerOpened(android.view.View) -> onDrawerOpened
    void onDrawerClosed(android.view.View) -> onDrawerClosed
    void onDrawerStateChanged(int) -> onDrawerStateChanged
android.support.v4.widget.DrawerLayout$State -> android.support.v4.widget.DrawerLayout$State:
android.support.v4.widget.DrawerLayout$ViewDragCallback -> android.support.v4.widget.DrawerLayout$ViewDragCallback:
    int mAbsGravity -> mAbsGravity
    android.support.v4.widget.ViewDragHelper mDragger -> mDragger
    java.lang.Runnable mPeekRunnable -> mPeekRunnable
    android.support.v4.widget.DrawerLayout this$0 -> this$0
    void setDragger(android.support.v4.widget.ViewDragHelper) -> setDragger
    void removeCallbacks() -> removeCallbacks
    boolean tryCaptureView(android.view.View,int) -> tryCaptureView
    void onViewDragStateChanged(int) -> onViewDragStateChanged
    void onViewPositionChanged(android.view.View,int,int,int,int) -> onViewPositionChanged
    void onViewCaptured(android.view.View,int) -> onViewCaptured
    void closeOtherDrawer() -> closeOtherDrawer
    void onViewReleased(android.view.View,float,float) -> onViewReleased
    void onEdgeTouched(int,int) -> onEdgeTouched
    void peekDrawer() -> peekDrawer
    boolean onEdgeLock(int) -> onEdgeLock
    void onEdgeDragStarted(int,int) -> onEdgeDragStarted
    int getViewHorizontalDragRange(android.view.View) -> getViewHorizontalDragRange
    int clampViewPositionHorizontal(android.view.View,int,int) -> clampViewPositionHorizontal
    int clampViewPositionVertical(android.view.View,int,int) -> clampViewPositionVertical
    void access$000(android.support.v4.widget.DrawerLayout$ViewDragCallback) -> access$000
android.support.v4.widget.DrawerLayout$ViewDragCallback$1 -> android.support.v4.widget.DrawerLayout$ViewDragCallback$1:
    android.support.v4.widget.DrawerLayout$ViewDragCallback this$1 -> this$1
    void run() -> run
android.support.v4.widget.EdgeEffectCompat -> android.support.v4.widget.EdgeEffectCompat:
    java.lang.Object mEdgeEffect -> mEdgeEffect
    android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl IMPL -> IMPL
    void setSize(int,int) -> setSize
    boolean isFinished() -> isFinished
    void finish() -> finish
    boolean onPull(float) -> onPull
    boolean onRelease() -> onRelease
    boolean onAbsorb(int) -> onAbsorb
    boolean draw(android.graphics.Canvas) -> draw
android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl -> android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl:
    java.lang.Object newEdgeEffect(android.content.Context) -> newEdgeEffect
    void setSize(java.lang.Object,int,int) -> setSize
    boolean isFinished(java.lang.Object) -> isFinished
    void finish(java.lang.Object) -> finish
    boolean onPull(java.lang.Object,float) -> onPull
    boolean onRelease(java.lang.Object) -> onRelease
    boolean onAbsorb(java.lang.Object,int) -> onAbsorb
    boolean draw(java.lang.Object,android.graphics.Canvas) -> draw
android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl -> android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl:
    java.lang.Object newEdgeEffect(android.content.Context) -> newEdgeEffect
    void setSize(java.lang.Object,int,int) -> setSize
    boolean isFinished(java.lang.Object) -> isFinished
    void finish(java.lang.Object) -> finish
    boolean onPull(java.lang.Object,float) -> onPull
    boolean onRelease(java.lang.Object) -> onRelease
    boolean onAbsorb(java.lang.Object,int) -> onAbsorb
    boolean draw(java.lang.Object,android.graphics.Canvas) -> draw
android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl -> android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl:
    java.lang.Object newEdgeEffect(android.content.Context) -> newEdgeEffect
    void setSize(java.lang.Object,int,int) -> setSize
    boolean isFinished(java.lang.Object) -> isFinished
    void finish(java.lang.Object) -> finish
    boolean onPull(java.lang.Object,float) -> onPull
    boolean onRelease(java.lang.Object) -> onRelease
    boolean onAbsorb(java.lang.Object,int) -> onAbsorb
    boolean draw(java.lang.Object,android.graphics.Canvas) -> draw
android.support.v4.widget.EdgeEffectCompatIcs -> android.support.v4.widget.EdgeEffectCompatIcs:
    java.lang.Object newEdgeEffect(android.content.Context) -> newEdgeEffect
    void setSize(java.lang.Object,int,int) -> setSize
    boolean isFinished(java.lang.Object) -> isFinished
    void finish(java.lang.Object) -> finish
    boolean onPull(java.lang.Object,float) -> onPull
    boolean onRelease(java.lang.Object) -> onRelease
    boolean onAbsorb(java.lang.Object,int) -> onAbsorb
    boolean draw(java.lang.Object,android.graphics.Canvas) -> draw
android.support.v4.widget.ExploreByTouchHelper -> android.support.v4.widget.ExploreByTouchHelper:
    int INVALID_ID -> INVALID_ID
    java.lang.String DEFAULT_CLASS_NAME -> DEFAULT_CLASS_NAME
    android.graphics.Rect mTempScreenRect -> mTempScreenRect
    android.graphics.Rect mTempParentRect -> mTempParentRect
    android.graphics.Rect mTempVisibleRect -> mTempVisibleRect
    int[] mTempGlobalRect -> mTempGlobalRect
    android.view.accessibility.AccessibilityManager mManager -> mManager
    android.view.View mView -> mView
    android.support.v4.widget.ExploreByTouchHelper$ExploreByTouchNodeProvider mNodeProvider -> mNodeProvider
    int mFocusedVirtualViewId -> mFocusedVirtualViewId
    int mHoveredVirtualViewId -> mHoveredVirtualViewId
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean dispatchHoverEvent(android.view.MotionEvent) -> dispatchHoverEvent
    boolean sendEventForVirtualView(int,int) -> sendEventForVirtualView
    void invalidateRoot() -> invalidateRoot
    void invalidateVirtualView(int) -> invalidateVirtualView
    int getFocusedVirtualView() -> getFocusedVirtualView
    void updateHoveredVirtualView(int) -> updateHoveredVirtualView
    android.view.accessibility.AccessibilityEvent createEvent(int,int) -> createEvent
    android.view.accessibility.AccessibilityEvent createEventForHost(int) -> createEventForHost
    android.view.accessibility.AccessibilityEvent createEventForChild(int,int) -> createEventForChild
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createNode(int) -> createNode
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createNodeForHost() -> createNodeForHost
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createNodeForChild(int) -> createNodeForChild
    boolean performAction(int,int,android.os.Bundle) -> performAction
    boolean performActionForHost(int,android.os.Bundle) -> performActionForHost
    boolean performActionForChild(int,int,android.os.Bundle) -> performActionForChild
    boolean manageFocusForChild(int,int,android.os.Bundle) -> manageFocusForChild
    boolean intersectVisibleToUser(android.graphics.Rect) -> intersectVisibleToUser
    boolean isAccessibilityFocused(int) -> isAccessibilityFocused
    boolean requestAccessibilityFocus(int) -> requestAccessibilityFocus
    boolean clearAccessibilityFocus(int) -> clearAccessibilityFocus
    int getVirtualViewAt(float,float) -> getVirtualViewAt
    void getVisibleVirtualViews(java.util.List) -> getVisibleVirtualViews
    void onPopulateEventForVirtualView(int,android.view.accessibility.AccessibilityEvent) -> onPopulateEventForVirtualView
    void onPopulateNodeForVirtualView(int,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onPopulateNodeForVirtualView
    boolean onPerformActionForVirtualView(int,int,android.os.Bundle) -> onPerformActionForVirtualView
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat access$100(android.support.v4.widget.ExploreByTouchHelper,int) -> access$100
    boolean access$200(android.support.v4.widget.ExploreByTouchHelper,int,int,android.os.Bundle) -> access$200
android.support.v4.widget.ExploreByTouchHelper$1 -> android.support.v4.widget.ExploreByTouchHelper$1:
android.support.v4.widget.ExploreByTouchHelper$ExploreByTouchNodeProvider -> android.support.v4.widget.ExploreByTouchHelper$ExploreByTouchNodeProvider:
    android.support.v4.widget.ExploreByTouchHelper this$0 -> this$0
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    boolean performAction(int,int,android.os.Bundle) -> performAction
android.support.v4.widget.ListPopupWindowCompat -> android.support.v4.widget.ListPopupWindowCompat:
    android.support.v4.widget.ListPopupWindowCompat$ListPopupWindowImpl IMPL -> IMPL
    android.view.View$OnTouchListener createDragToOpenListener(java.lang.Object,android.view.View) -> createDragToOpenListener
android.support.v4.widget.ListPopupWindowCompat$BaseListPopupWindowImpl -> android.support.v4.widget.ListPopupWindowCompat$BaseListPopupWindowImpl:
    android.view.View$OnTouchListener createDragToOpenListener(java.lang.Object,android.view.View) -> createDragToOpenListener
android.support.v4.widget.ListPopupWindowCompat$KitKatListPopupWindowImpl -> android.support.v4.widget.ListPopupWindowCompat$KitKatListPopupWindowImpl:
    android.view.View$OnTouchListener createDragToOpenListener(java.lang.Object,android.view.View) -> createDragToOpenListener
android.support.v4.widget.ListPopupWindowCompat$ListPopupWindowImpl -> android.support.v4.widget.ListPopupWindowCompat$ListPopupWindowImpl:
    android.view.View$OnTouchListener createDragToOpenListener(java.lang.Object,android.view.View) -> createDragToOpenListener
android.support.v4.widget.ListPopupWindowCompatKitKat -> android.support.v4.widget.ListPopupWindowCompatKitKat:
    android.view.View$OnTouchListener createDragToOpenListener(java.lang.Object,android.view.View) -> createDragToOpenListener
android.support.v4.widget.ListViewAutoScrollHelper -> android.support.v4.widget.ListViewAutoScrollHelper:
    android.widget.ListView mTarget -> mTarget
    void scrollTargetBy(int,int) -> scrollTargetBy
    boolean canTargetScrollHorizontally(int) -> canTargetScrollHorizontally
    boolean canTargetScrollVertically(int) -> canTargetScrollVertically
android.support.v4.widget.PopupMenuCompat -> android.support.v4.widget.PopupMenuCompat:
    android.support.v4.widget.PopupMenuCompat$PopupMenuImpl IMPL -> IMPL
    android.view.View$OnTouchListener getDragToOpenListener(java.lang.Object) -> getDragToOpenListener
android.support.v4.widget.PopupMenuCompat$BasePopupMenuImpl -> android.support.v4.widget.PopupMenuCompat$BasePopupMenuImpl:
    android.view.View$OnTouchListener getDragToOpenListener(java.lang.Object) -> getDragToOpenListener
android.support.v4.widget.PopupMenuCompat$KitKatPopupMenuImpl -> android.support.v4.widget.PopupMenuCompat$KitKatPopupMenuImpl:
    android.view.View$OnTouchListener getDragToOpenListener(java.lang.Object) -> getDragToOpenListener
android.support.v4.widget.PopupMenuCompat$PopupMenuImpl -> android.support.v4.widget.PopupMenuCompat$PopupMenuImpl:
    android.view.View$OnTouchListener getDragToOpenListener(java.lang.Object) -> getDragToOpenListener
android.support.v4.widget.PopupMenuCompatKitKat -> android.support.v4.widget.PopupMenuCompatKitKat:
    android.view.View$OnTouchListener getDragToOpenListener(java.lang.Object) -> getDragToOpenListener
android.support.v4.widget.ResourceCursorAdapter -> android.support.v4.widget.ResourceCursorAdapter:
    int mLayout -> mLayout
    int mDropDownLayout -> mDropDownLayout
    android.view.LayoutInflater mInflater -> mInflater
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
    android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newDropDownView
    void setViewResource(int) -> setViewResource
    void setDropDownViewResource(int) -> setDropDownViewResource
android.support.v4.widget.ScrollerCompat -> android.support.v4.widget.ScrollerCompat:
    java.lang.String TAG -> TAG
    java.lang.Object mScroller -> mScroller
    android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl mImpl -> mImpl
    int CHASE_FRAME_TIME -> CHASE_FRAME_TIME
    android.support.v4.widget.ScrollerCompat create(android.content.Context) -> create
    android.support.v4.widget.ScrollerCompat create(android.content.Context,android.view.animation.Interpolator) -> create
    boolean isFinished() -> isFinished
    int getCurrX() -> getCurrX
    int getCurrY() -> getCurrY
    int getFinalX() -> getFinalX
    int getFinalY() -> getFinalY
    float getCurrVelocity() -> getCurrVelocity
    boolean computeScrollOffset() -> computeScrollOffset
    void startScroll(int,int,int,int) -> startScroll
    void startScroll(int,int,int,int,int) -> startScroll
    void fling(int,int,int,int,int,int,int,int) -> fling
    void fling(int,int,int,int,int,int,int,int,int,int) -> fling
    void abortAnimation() -> abortAnimation
    void notifyHorizontalEdgeReached(int,int,int) -> notifyHorizontalEdgeReached
    void notifyVerticalEdgeReached(int,int,int) -> notifyVerticalEdgeReached
    boolean isOverScrolled() -> isOverScrolled
android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl -> android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> createScroller
    boolean isFinished(java.lang.Object) -> isFinished
    int getCurrX(java.lang.Object) -> getCurrX
    int getCurrY(java.lang.Object) -> getCurrY
    float getCurrVelocity(java.lang.Object) -> getCurrVelocity
    boolean computeScrollOffset(java.lang.Object) -> computeScrollOffset
    void startScroll(java.lang.Object,int,int,int,int) -> startScroll
    void startScroll(java.lang.Object,int,int,int,int,int) -> startScroll
    void fling(java.lang.Object,int,int,int,int,int,int,int,int) -> fling
    void fling(java.lang.Object,int,int,int,int,int,int,int,int,int,int) -> fling
    void abortAnimation(java.lang.Object) -> abortAnimation
    void notifyHorizontalEdgeReached(java.lang.Object,int,int,int) -> notifyHorizontalEdgeReached
    void notifyVerticalEdgeReached(java.lang.Object,int,int,int) -> notifyVerticalEdgeReached
    boolean isOverScrolled(java.lang.Object) -> isOverScrolled
    int getFinalX(java.lang.Object) -> getFinalX
    int getFinalY(java.lang.Object) -> getFinalY
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplBase -> android.support.v4.widget.ScrollerCompat$ScrollerCompatImplBase:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> createScroller
    boolean isFinished(java.lang.Object) -> isFinished
    int getCurrX(java.lang.Object) -> getCurrX
    int getCurrY(java.lang.Object) -> getCurrY
    float getCurrVelocity(java.lang.Object) -> getCurrVelocity
    boolean computeScrollOffset(java.lang.Object) -> computeScrollOffset
    void startScroll(java.lang.Object,int,int,int,int) -> startScroll
    void startScroll(java.lang.Object,int,int,int,int,int) -> startScroll
    void fling(java.lang.Object,int,int,int,int,int,int,int,int) -> fling
    void fling(java.lang.Object,int,int,int,int,int,int,int,int,int,int) -> fling
    void abortAnimation(java.lang.Object) -> abortAnimation
    void notifyHorizontalEdgeReached(java.lang.Object,int,int,int) -> notifyHorizontalEdgeReached
    void notifyVerticalEdgeReached(java.lang.Object,int,int,int) -> notifyVerticalEdgeReached
    boolean isOverScrolled(java.lang.Object) -> isOverScrolled
    int getFinalX(java.lang.Object) -> getFinalX
    int getFinalY(java.lang.Object) -> getFinalY
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplGingerbread -> android.support.v4.widget.ScrollerCompat$ScrollerCompatImplGingerbread:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> createScroller
    boolean isFinished(java.lang.Object) -> isFinished
    int getCurrX(java.lang.Object) -> getCurrX
    int getCurrY(java.lang.Object) -> getCurrY
    float getCurrVelocity(java.lang.Object) -> getCurrVelocity
    boolean computeScrollOffset(java.lang.Object) -> computeScrollOffset
    void startScroll(java.lang.Object,int,int,int,int) -> startScroll
    void startScroll(java.lang.Object,int,int,int,int,int) -> startScroll
    void fling(java.lang.Object,int,int,int,int,int,int,int,int) -> fling
    void fling(java.lang.Object,int,int,int,int,int,int,int,int,int,int) -> fling
    void abortAnimation(java.lang.Object) -> abortAnimation
    void notifyHorizontalEdgeReached(java.lang.Object,int,int,int) -> notifyHorizontalEdgeReached
    void notifyVerticalEdgeReached(java.lang.Object,int,int,int) -> notifyVerticalEdgeReached
    boolean isOverScrolled(java.lang.Object) -> isOverScrolled
    int getFinalX(java.lang.Object) -> getFinalX
    int getFinalY(java.lang.Object) -> getFinalY
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplIcs -> android.support.v4.widget.ScrollerCompat$ScrollerCompatImplIcs:
    float getCurrVelocity(java.lang.Object) -> getCurrVelocity
android.support.v4.widget.ScrollerCompatGingerbread -> android.support.v4.widget.ScrollerCompatGingerbread:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> createScroller
    boolean isFinished(java.lang.Object) -> isFinished
    int getCurrX(java.lang.Object) -> getCurrX
    int getCurrY(java.lang.Object) -> getCurrY
    boolean computeScrollOffset(java.lang.Object) -> computeScrollOffset
    void startScroll(java.lang.Object,int,int,int,int) -> startScroll
    void startScroll(java.lang.Object,int,int,int,int,int) -> startScroll
    void fling(java.lang.Object,int,int,int,int,int,int,int,int) -> fling
    void fling(java.lang.Object,int,int,int,int,int,int,int,int,int,int) -> fling
    void abortAnimation(java.lang.Object) -> abortAnimation
    void notifyHorizontalEdgeReached(java.lang.Object,int,int,int) -> notifyHorizontalEdgeReached
    void notifyVerticalEdgeReached(java.lang.Object,int,int,int) -> notifyVerticalEdgeReached
    boolean isOverScrolled(java.lang.Object) -> isOverScrolled
    int getFinalX(java.lang.Object) -> getFinalX
    int getFinalY(java.lang.Object) -> getFinalY
android.support.v4.widget.ScrollerCompatIcs -> android.support.v4.widget.ScrollerCompatIcs:
    float getCurrVelocity(java.lang.Object) -> getCurrVelocity
android.support.v4.widget.SearchViewCompat -> android.support.v4.widget.SearchViewCompat:
    android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl IMPL -> IMPL
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> setSearchableInfo
    void setImeOptions(android.view.View,int) -> setImeOptions
    void setInputType(android.view.View,int) -> setInputType
    void setOnQueryTextListener(android.view.View,android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> setOnQueryTextListener
    void setOnCloseListener(android.view.View,android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat) -> setOnCloseListener
    java.lang.CharSequence getQuery(android.view.View) -> getQuery
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(android.view.View,java.lang.CharSequence) -> setQueryHint
    void setIconified(android.view.View,boolean) -> setIconified
    boolean isIconified(android.view.View) -> isIconified
    void setSubmitButtonEnabled(android.view.View,boolean) -> setSubmitButtonEnabled
    boolean isSubmitButtonEnabled(android.view.View) -> isSubmitButtonEnabled
    void setQueryRefinementEnabled(android.view.View,boolean) -> setQueryRefinementEnabled
    boolean isQueryRefinementEnabled(android.view.View) -> isQueryRefinementEnabled
    void setMaxWidth(android.view.View,int) -> setMaxWidth
    android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl access$000() -> access$000
android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat -> android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat:
    java.lang.Object mListener -> mListener
    boolean onClose() -> onClose
android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat -> android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat:
    java.lang.Object mListener -> mListener
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl -> android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> setSearchableInfo
    java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> newOnQueryTextListener
    void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> setOnQueryTextListener
    java.lang.Object newOnCloseListener(android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat) -> newOnCloseListener
    void setOnCloseListener(java.lang.Object,java.lang.Object) -> setOnCloseListener
    java.lang.CharSequence getQuery(android.view.View) -> getQuery
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(android.view.View,java.lang.CharSequence) -> setQueryHint
    void setIconified(android.view.View,boolean) -> setIconified
    boolean isIconified(android.view.View) -> isIconified
    void setSubmitButtonEnabled(android.view.View,boolean) -> setSubmitButtonEnabled
    boolean isSubmitButtonEnabled(android.view.View) -> isSubmitButtonEnabled
    void setQueryRefinementEnabled(android.view.View,boolean) -> setQueryRefinementEnabled
    boolean isQueryRefinementEnabled(android.view.View) -> isQueryRefinementEnabled
    void setMaxWidth(android.view.View,int) -> setMaxWidth
android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$1 -> android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$1:
    android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat val$listener -> val$listener
    android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl this$0 -> this$0
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$2 -> android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$2:
    android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat val$listener -> val$listener
    android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl this$0 -> this$0
    boolean onClose() -> onClose
android.support.v4.widget.SearchViewCompat$SearchViewCompatIcsImpl -> android.support.v4.widget.SearchViewCompat$SearchViewCompatIcsImpl:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setImeOptions(android.view.View,int) -> setImeOptions
    void setInputType(android.view.View,int) -> setInputType
android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl -> android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> setSearchableInfo
    void setImeOptions(android.view.View,int) -> setImeOptions
    void setInputType(android.view.View,int) -> setInputType
    java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> newOnQueryTextListener
    void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> setOnQueryTextListener
    java.lang.Object newOnCloseListener(android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat) -> newOnCloseListener
    void setOnCloseListener(java.lang.Object,java.lang.Object) -> setOnCloseListener
    java.lang.CharSequence getQuery(android.view.View) -> getQuery
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(android.view.View,java.lang.CharSequence) -> setQueryHint
    void setIconified(android.view.View,boolean) -> setIconified
    boolean isIconified(android.view.View) -> isIconified
    void setSubmitButtonEnabled(android.view.View,boolean) -> setSubmitButtonEnabled
    boolean isSubmitButtonEnabled(android.view.View) -> isSubmitButtonEnabled
    void setQueryRefinementEnabled(android.view.View,boolean) -> setQueryRefinementEnabled
    boolean isQueryRefinementEnabled(android.view.View) -> isQueryRefinementEnabled
    void setMaxWidth(android.view.View,int) -> setMaxWidth
android.support.v4.widget.SearchViewCompat$SearchViewCompatStubImpl -> android.support.v4.widget.SearchViewCompat$SearchViewCompatStubImpl:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> setSearchableInfo
    void setImeOptions(android.view.View,int) -> setImeOptions
    void setInputType(android.view.View,int) -> setInputType
    java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> newOnQueryTextListener
    void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> setOnQueryTextListener
    java.lang.Object newOnCloseListener(android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat) -> newOnCloseListener
    void setOnCloseListener(java.lang.Object,java.lang.Object) -> setOnCloseListener
    java.lang.CharSequence getQuery(android.view.View) -> getQuery
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(android.view.View,java.lang.CharSequence) -> setQueryHint
    void setIconified(android.view.View,boolean) -> setIconified
    boolean isIconified(android.view.View) -> isIconified
    void setSubmitButtonEnabled(android.view.View,boolean) -> setSubmitButtonEnabled
    boolean isSubmitButtonEnabled(android.view.View) -> isSubmitButtonEnabled
    void setQueryRefinementEnabled(android.view.View,boolean) -> setQueryRefinementEnabled
    boolean isQueryRefinementEnabled(android.view.View) -> isQueryRefinementEnabled
    void setMaxWidth(android.view.View,int) -> setMaxWidth
android.support.v4.widget.SearchViewCompatHoneycomb -> android.support.v4.widget.SearchViewCompatHoneycomb:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> setSearchableInfo
    java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge) -> newOnQueryTextListener
    void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> setOnQueryTextListener
    java.lang.Object newOnCloseListener(android.support.v4.widget.SearchViewCompatHoneycomb$OnCloseListenerCompatBridge) -> newOnCloseListener
    void setOnCloseListener(java.lang.Object,java.lang.Object) -> setOnCloseListener
    java.lang.CharSequence getQuery(android.view.View) -> getQuery
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(android.view.View,java.lang.CharSequence) -> setQueryHint
    void setIconified(android.view.View,boolean) -> setIconified
    boolean isIconified(android.view.View) -> isIconified
    void setSubmitButtonEnabled(android.view.View,boolean) -> setSubmitButtonEnabled
    boolean isSubmitButtonEnabled(android.view.View) -> isSubmitButtonEnabled
    void setQueryRefinementEnabled(android.view.View,boolean) -> setQueryRefinementEnabled
    boolean isQueryRefinementEnabled(android.view.View) -> isQueryRefinementEnabled
    void setMaxWidth(android.view.View,int) -> setMaxWidth
android.support.v4.widget.SearchViewCompatHoneycomb$1 -> android.support.v4.widget.SearchViewCompatHoneycomb$1:
    android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge val$listener -> val$listener
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
android.support.v4.widget.SearchViewCompatHoneycomb$2 -> android.support.v4.widget.SearchViewCompatHoneycomb$2:
    android.support.v4.widget.SearchViewCompatHoneycomb$OnCloseListenerCompatBridge val$listener -> val$listener
    boolean onClose() -> onClose
android.support.v4.widget.SearchViewCompatHoneycomb$OnCloseListenerCompatBridge -> android.support.v4.widget.SearchViewCompatHoneycomb$OnCloseListenerCompatBridge:
    boolean onClose() -> onClose
android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge -> android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge:
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
android.support.v4.widget.SearchViewCompatIcs -> android.support.v4.widget.SearchViewCompatIcs:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setImeOptions(android.view.View,int) -> setImeOptions
    void setInputType(android.view.View,int) -> setInputType
android.support.v4.widget.SearchViewCompatIcs$MySearchView -> android.support.v4.widget.SearchViewCompatIcs$MySearchView:
    void onActionViewCollapsed() -> onActionViewCollapsed
android.support.v4.widget.SimpleCursorAdapter -> android.support.v4.widget.SimpleCursorAdapter:
    int[] mFrom -> mFrom
    int[] mTo -> mTo
    int mStringConversionColumn -> mStringConversionColumn
    android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter mCursorToStringConverter -> mCursorToStringConverter
    android.support.v4.widget.SimpleCursorAdapter$ViewBinder mViewBinder -> mViewBinder
    java.lang.String[] mOriginalFrom -> mOriginalFrom
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    android.support.v4.widget.SimpleCursorAdapter$ViewBinder getViewBinder() -> getViewBinder
    void setViewBinder(android.support.v4.widget.SimpleCursorAdapter$ViewBinder) -> setViewBinder
    void setViewImage(android.widget.ImageView,java.lang.String) -> setViewImage
    void setViewText(android.widget.TextView,java.lang.String) -> setViewText
    int getStringConversionColumn() -> getStringConversionColumn
    void setStringConversionColumn(int) -> setStringConversionColumn
    android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter getCursorToStringConverter() -> getCursorToStringConverter
    void setCursorToStringConverter(android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter) -> setCursorToStringConverter
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    void findColumns(java.lang.String[]) -> findColumns
    android.database.Cursor swapCursor(android.database.Cursor) -> swapCursor
    void changeCursorAndColumns(android.database.Cursor,java.lang.String[],int[]) -> changeCursorAndColumns
android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter -> android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter:
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
android.support.v4.widget.SimpleCursorAdapter$ViewBinder -> android.support.v4.widget.SimpleCursorAdapter$ViewBinder:
    boolean setViewValue(android.view.View,android.database.Cursor,int) -> setViewValue
android.support.v4.widget.SlidingPaneLayout -> android.support.v4.widget.SlidingPaneLayout:
    java.lang.String TAG -> TAG
    int DEFAULT_OVERHANG_SIZE -> DEFAULT_OVERHANG_SIZE
    int DEFAULT_FADE_COLOR -> DEFAULT_FADE_COLOR
    int mSliderFadeColor -> mSliderFadeColor
    int MIN_FLING_VELOCITY -> MIN_FLING_VELOCITY
    int mCoveredFadeColor -> mCoveredFadeColor
    android.graphics.drawable.Drawable mShadowDrawableLeft -> mShadowDrawableLeft
    android.graphics.drawable.Drawable mShadowDrawableRight -> mShadowDrawableRight
    int mOverhangSize -> mOverhangSize
    boolean mCanSlide -> mCanSlide
    android.view.View mSlideableView -> mSlideableView
    float mSlideOffset -> mSlideOffset
    float mParallaxOffset -> mParallaxOffset
    int mSlideRange -> mSlideRange
    boolean mIsUnableToDrag -> mIsUnableToDrag
    int mParallaxBy -> mParallaxBy
    float mInitialMotionX -> mInitialMotionX
    float mInitialMotionY -> mInitialMotionY
    android.support.v4.widget.SlidingPaneLayout$PanelSlideListener mPanelSlideListener -> mPanelSlideListener
    android.support.v4.widget.ViewDragHelper mDragHelper -> mDragHelper
    boolean mPreservedOpenState -> mPreservedOpenState
    boolean mFirstLayout -> mFirstLayout
    android.graphics.Rect mTmpRect -> mTmpRect
    java.util.ArrayList mPostedRunnables -> mPostedRunnables
    android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl IMPL -> IMPL
    void setParallaxDistance(int) -> setParallaxDistance
    int getParallaxDistance() -> getParallaxDistance
    void setSliderFadeColor(int) -> setSliderFadeColor
    int getSliderFadeColor() -> getSliderFadeColor
    void setCoveredFadeColor(int) -> setCoveredFadeColor
    int getCoveredFadeColor() -> getCoveredFadeColor
    void setPanelSlideListener(android.support.v4.widget.SlidingPaneLayout$PanelSlideListener) -> setPanelSlideListener
    void dispatchOnPanelSlide(android.view.View) -> dispatchOnPanelSlide
    void dispatchOnPanelOpened(android.view.View) -> dispatchOnPanelOpened
    void dispatchOnPanelClosed(android.view.View) -> dispatchOnPanelClosed
    void updateObscuredViewsVisibility(android.view.View) -> updateObscuredViewsVisibility
    void setAllChildrenVisible() -> setAllChildrenVisible
    boolean viewIsOpaque(android.view.View) -> viewIsOpaque
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean closePane(android.view.View,int) -> closePane
    boolean openPane(android.view.View,int) -> openPane
    void smoothSlideOpen() -> smoothSlideOpen
    boolean openPane() -> openPane
    void smoothSlideClosed() -> smoothSlideClosed
    boolean closePane() -> closePane
    boolean isOpen() -> isOpen
    boolean canSlide() -> canSlide
    boolean isSlideable() -> isSlideable
    void onPanelDragged(int) -> onPanelDragged
    void dimChildView(android.view.View,float,int) -> dimChildView
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    void invalidateChildRegion(android.view.View) -> invalidateChildRegion
    boolean smoothSlideTo(float,int) -> smoothSlideTo
    void computeScroll() -> computeScroll
    void setShadowDrawable(android.graphics.drawable.Drawable) -> setShadowDrawable
    void setShadowDrawableLeft(android.graphics.drawable.Drawable) -> setShadowDrawableLeft
    void setShadowDrawableRight(android.graphics.drawable.Drawable) -> setShadowDrawableRight
    void setShadowResource(int) -> setShadowResource
    void setShadowResourceLeft(int) -> setShadowResourceLeft
    void setShadowResourceRight(int) -> setShadowResourceRight
    void draw(android.graphics.Canvas) -> draw
    void parallaxOtherViews(float) -> parallaxOtherViews
    boolean canScroll(android.view.View,boolean,int,int,int) -> canScroll
    boolean isDimmed(android.view.View) -> isDimmed
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    boolean isLayoutRtlSupport() -> isLayoutRtlSupport
    boolean access$100(android.support.v4.widget.SlidingPaneLayout) -> access$100
    android.support.v4.widget.ViewDragHelper access$200(android.support.v4.widget.SlidingPaneLayout) -> access$200
    float access$300(android.support.v4.widget.SlidingPaneLayout) -> access$300
    android.view.View access$400(android.support.v4.widget.SlidingPaneLayout) -> access$400
    boolean access$502(android.support.v4.widget.SlidingPaneLayout,boolean) -> access$502
    void access$600(android.support.v4.widget.SlidingPaneLayout,int) -> access$600
    boolean access$700(android.support.v4.widget.SlidingPaneLayout) -> access$700
    int access$800(android.support.v4.widget.SlidingPaneLayout) -> access$800
    void access$1000(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> access$1000
    java.util.ArrayList access$1100(android.support.v4.widget.SlidingPaneLayout) -> access$1100
android.support.v4.widget.SlidingPaneLayout$1 -> android.support.v4.widget.SlidingPaneLayout$1:
android.support.v4.widget.SlidingPaneLayout$AccessibilityDelegate -> android.support.v4.widget.SlidingPaneLayout$AccessibilityDelegate:
    android.graphics.Rect mTmpRect -> mTmpRect
    android.support.v4.widget.SlidingPaneLayout this$0 -> this$0
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    boolean filter(android.view.View) -> filter
    void copyNodeInfoNoChildren(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> copyNodeInfoNoChildren
android.support.v4.widget.SlidingPaneLayout$DisableLayerRunnable -> android.support.v4.widget.SlidingPaneLayout$DisableLayerRunnable:
    android.view.View mChildView -> mChildView
    android.support.v4.widget.SlidingPaneLayout this$0 -> this$0
    void run() -> run
android.support.v4.widget.SlidingPaneLayout$DragHelperCallback -> android.support.v4.widget.SlidingPaneLayout$DragHelperCallback:
    android.support.v4.widget.SlidingPaneLayout this$0 -> this$0
    boolean tryCaptureView(android.view.View,int) -> tryCaptureView
    void onViewDragStateChanged(int) -> onViewDragStateChanged
    void onViewCaptured(android.view.View,int) -> onViewCaptured
    void onViewPositionChanged(android.view.View,int,int,int,int) -> onViewPositionChanged
    void onViewReleased(android.view.View,float,float) -> onViewReleased
    int getViewHorizontalDragRange(android.view.View) -> getViewHorizontalDragRange
    int clampViewPositionHorizontal(android.view.View,int,int) -> clampViewPositionHorizontal
    int clampViewPositionVertical(android.view.View,int,int) -> clampViewPositionVertical
    void onEdgeDragStarted(int,int) -> onEdgeDragStarted
android.support.v4.widget.SlidingPaneLayout$LayoutParams -> android.support.v4.widget.SlidingPaneLayout$LayoutParams:
    int[] ATTRS -> ATTRS
    float weight -> weight
    boolean slideable -> slideable
    boolean dimWhenOffset -> dimWhenOffset
    android.graphics.Paint dimPaint -> dimPaint
android.support.v4.widget.SlidingPaneLayout$PanelSlideListener -> android.support.v4.widget.SlidingPaneLayout$PanelSlideListener:
    void onPanelSlide(android.view.View,float) -> onPanelSlide
    void onPanelOpened(android.view.View) -> onPanelOpened
    void onPanelClosed(android.view.View) -> onPanelClosed
android.support.v4.widget.SlidingPaneLayout$SavedState -> android.support.v4.widget.SlidingPaneLayout$SavedState:
    boolean isOpen -> isOpen
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.SlidingPaneLayout$SavedState$1 -> android.support.v4.widget.SlidingPaneLayout$SavedState$1:
    android.support.v4.widget.SlidingPaneLayout$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.widget.SlidingPaneLayout$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.SlidingPaneLayout$SimplePanelSlideListener -> android.support.v4.widget.SlidingPaneLayout$SimplePanelSlideListener:
    void onPanelSlide(android.view.View,float) -> onPanelSlide
    void onPanelOpened(android.view.View) -> onPanelOpened
    void onPanelClosed(android.view.View) -> onPanelClosed
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl -> android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> invalidateChildRegion
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplBase -> android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplBase:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> invalidateChildRegion
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJB -> android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJB:
    java.lang.reflect.Method mGetDisplayList -> mGetDisplayList
    java.lang.reflect.Field mRecreateDisplayList -> mRecreateDisplayList
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> invalidateChildRegion
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJBMR1 -> android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJBMR1:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> invalidateChildRegion
android.support.v4.widget.SwipeProgressBar -> android.support.v4.widget.SwipeProgressBar:
    int COLOR1 -> COLOR1
    int COLOR2 -> COLOR2
    int COLOR3 -> COLOR3
    int COLOR4 -> COLOR4
    int ANIMATION_DURATION_MS -> ANIMATION_DURATION_MS
    int FINISH_ANIMATION_DURATION_MS -> FINISH_ANIMATION_DURATION_MS
    android.view.animation.Interpolator INTERPOLATOR -> INTERPOLATOR
    android.graphics.Paint mPaint -> mPaint
    android.graphics.RectF mClipRect -> mClipRect
    float mTriggerPercentage -> mTriggerPercentage
    long mStartTime -> mStartTime
    long mFinishTime -> mFinishTime
    boolean mRunning -> mRunning
    int mColor1 -> mColor1
    int mColor2 -> mColor2
    int mColor3 -> mColor3
    int mColor4 -> mColor4
    android.view.View mParent -> mParent
    android.graphics.Rect mBounds -> mBounds
    void setColorScheme(int,int,int,int) -> setColorScheme
    void setTriggerPercentage(float) -> setTriggerPercentage
    void start() -> start
    void stop() -> stop
    boolean isRunning() -> isRunning
    void draw(android.graphics.Canvas) -> draw
    void drawTrigger(android.graphics.Canvas,int,int) -> drawTrigger
    void drawCircle(android.graphics.Canvas,float,float,int,float) -> drawCircle
    void setBounds(int,int,int,int) -> setBounds
android.support.v4.widget.SwipeRefreshLayout -> android.support.v4.widget.SwipeRefreshLayout:
    java.lang.String LOG_TAG -> LOG_TAG
    long RETURN_TO_ORIGINAL_POSITION_TIMEOUT -> RETURN_TO_ORIGINAL_POSITION_TIMEOUT
    float ACCELERATE_INTERPOLATION_FACTOR -> ACCELERATE_INTERPOLATION_FACTOR
    float DECELERATE_INTERPOLATION_FACTOR -> DECELERATE_INTERPOLATION_FACTOR
    float PROGRESS_BAR_HEIGHT -> PROGRESS_BAR_HEIGHT
    float MAX_SWIPE_DISTANCE_FACTOR -> MAX_SWIPE_DISTANCE_FACTOR
    int REFRESH_TRIGGER_DISTANCE -> REFRESH_TRIGGER_DISTANCE
    int INVALID_POINTER -> INVALID_POINTER
    android.support.v4.widget.SwipeProgressBar mProgressBar -> mProgressBar
    android.view.View mTarget -> mTarget
    int mOriginalOffsetTop -> mOriginalOffsetTop
    android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener mListener -> mListener
    int mFrom -> mFrom
    boolean mRefreshing -> mRefreshing
    int mTouchSlop -> mTouchSlop
    float mDistanceToTriggerSync -> mDistanceToTriggerSync
    int mMediumAnimationDuration -> mMediumAnimationDuration
    float mFromPercentage -> mFromPercentage
    float mCurrPercentage -> mCurrPercentage
    int mProgressBarHeight -> mProgressBarHeight
    int mCurrentTargetOffsetTop -> mCurrentTargetOffsetTop
    float mInitialMotionY -> mInitialMotionY
    float mLastMotionY -> mLastMotionY
    boolean mIsBeingDragged -> mIsBeingDragged
    int mActivePointerId -> mActivePointerId
    boolean mReturningToStart -> mReturningToStart
    android.view.animation.DecelerateInterpolator mDecelerateInterpolator -> mDecelerateInterpolator
    android.view.animation.AccelerateInterpolator mAccelerateInterpolator -> mAccelerateInterpolator
    int[] LAYOUT_ATTRS -> LAYOUT_ATTRS
    android.view.animation.Animation mAnimateToStartPosition -> mAnimateToStartPosition
    android.view.animation.Animation mShrinkTrigger -> mShrinkTrigger
    android.view.animation.Animation$AnimationListener mReturnToStartPositionListener -> mReturnToStartPositionListener
    android.view.animation.Animation$AnimationListener mShrinkAnimationListener -> mShrinkAnimationListener
    java.lang.Runnable mReturnToStartPosition -> mReturnToStartPosition
    java.lang.Runnable mCancel -> mCancel
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void animateOffsetToStartPosition(int,android.view.animation.Animation$AnimationListener) -> animateOffsetToStartPosition
    void setOnRefreshListener(android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener) -> setOnRefreshListener
    void setTriggerPercentage(float) -> setTriggerPercentage
    void setRefreshing(boolean) -> setRefreshing
    void setColorScheme(int,int,int,int) -> setColorScheme
    void setColorSchemeResources(int,int,int,int) -> setColorSchemeResources
    void setColorSchemeColors(int,int,int,int) -> setColorSchemeColors
    boolean isRefreshing() -> isRefreshing
    void ensureTarget() -> ensureTarget
    void draw(android.graphics.Canvas) -> draw
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onMeasure(int,int) -> onMeasure
    boolean canChildScrollUp() -> canChildScrollUp
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void startRefresh() -> startRefresh
    void updateContentOffsetTop(int) -> updateContentOffsetTop
    void setTargetOffsetTopAndBottom(int) -> setTargetOffsetTopAndBottom
    void updatePositionTimeout() -> updatePositionTimeout
    void onSecondaryPointerUp(android.view.MotionEvent) -> onSecondaryPointerUp
    int access$000(android.support.v4.widget.SwipeRefreshLayout) -> access$000
    int access$100(android.support.v4.widget.SwipeRefreshLayout) -> access$100
    android.view.View access$200(android.support.v4.widget.SwipeRefreshLayout) -> access$200
    void access$300(android.support.v4.widget.SwipeRefreshLayout,int) -> access$300
    float access$400(android.support.v4.widget.SwipeRefreshLayout) -> access$400
    android.support.v4.widget.SwipeProgressBar access$500(android.support.v4.widget.SwipeRefreshLayout) -> access$500
    int access$702(android.support.v4.widget.SwipeRefreshLayout,int) -> access$702
    float access$802(android.support.v4.widget.SwipeRefreshLayout,float) -> access$802
    boolean access$902(android.support.v4.widget.SwipeRefreshLayout,boolean) -> access$902
    int access$700(android.support.v4.widget.SwipeRefreshLayout) -> access$700
    android.view.animation.Animation$AnimationListener access$1000(android.support.v4.widget.SwipeRefreshLayout) -> access$1000
    void access$1100(android.support.v4.widget.SwipeRefreshLayout,int,android.view.animation.Animation$AnimationListener) -> access$1100
    float access$402(android.support.v4.widget.SwipeRefreshLayout,float) -> access$402
    float access$800(android.support.v4.widget.SwipeRefreshLayout) -> access$800
    int access$1200(android.support.v4.widget.SwipeRefreshLayout) -> access$1200
    android.view.animation.Animation access$1300(android.support.v4.widget.SwipeRefreshLayout) -> access$1300
    android.view.animation.Animation$AnimationListener access$1400(android.support.v4.widget.SwipeRefreshLayout) -> access$1400
    android.view.animation.DecelerateInterpolator access$1500(android.support.v4.widget.SwipeRefreshLayout) -> access$1500
android.support.v4.widget.SwipeRefreshLayout$1 -> android.support.v4.widget.SwipeRefreshLayout$1:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> this$0
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
android.support.v4.widget.SwipeRefreshLayout$2 -> android.support.v4.widget.SwipeRefreshLayout$2:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> this$0
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
android.support.v4.widget.SwipeRefreshLayout$3 -> android.support.v4.widget.SwipeRefreshLayout$3:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> this$0
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
android.support.v4.widget.SwipeRefreshLayout$4 -> android.support.v4.widget.SwipeRefreshLayout$4:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> this$0
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
android.support.v4.widget.SwipeRefreshLayout$5 -> android.support.v4.widget.SwipeRefreshLayout$5:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> this$0
    void run() -> run
android.support.v4.widget.SwipeRefreshLayout$6 -> android.support.v4.widget.SwipeRefreshLayout$6:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> this$0
    void run() -> run
android.support.v4.widget.SwipeRefreshLayout$BaseAnimationListener -> android.support.v4.widget.SwipeRefreshLayout$BaseAnimationListener:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> this$0
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener -> android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener:
    void onRefresh() -> onRefresh
android.support.v4.widget.ViewDragHelper -> android.support.v4.widget.ViewDragHelper:
    java.lang.String TAG -> TAG
    int INVALID_POINTER -> INVALID_POINTER
    int STATE_IDLE -> STATE_IDLE
    int STATE_DRAGGING -> STATE_DRAGGING
    int STATE_SETTLING -> STATE_SETTLING
    int EDGE_LEFT -> EDGE_LEFT
    int EDGE_RIGHT -> EDGE_RIGHT
    int EDGE_TOP -> EDGE_TOP
    int EDGE_BOTTOM -> EDGE_BOTTOM
    int EDGE_ALL -> EDGE_ALL
    int DIRECTION_HORIZONTAL -> DIRECTION_HORIZONTAL
    int DIRECTION_VERTICAL -> DIRECTION_VERTICAL
    int DIRECTION_ALL -> DIRECTION_ALL
    int EDGE_SIZE -> EDGE_SIZE
    int BASE_SETTLE_DURATION -> BASE_SETTLE_DURATION
    int MAX_SETTLE_DURATION -> MAX_SETTLE_DURATION
    int mDragState -> mDragState
    int mTouchSlop -> mTouchSlop
    int mActivePointerId -> mActivePointerId
    float[] mInitialMotionX -> mInitialMotionX
    float[] mInitialMotionY -> mInitialMotionY
    float[] mLastMotionX -> mLastMotionX
    float[] mLastMotionY -> mLastMotionY
    int[] mInitialEdgesTouched -> mInitialEdgesTouched
    int[] mEdgeDragsInProgress -> mEdgeDragsInProgress
    int[] mEdgeDragsLocked -> mEdgeDragsLocked
    int mPointersDown -> mPointersDown
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    float mMaxVelocity -> mMaxVelocity
    float mMinVelocity -> mMinVelocity
    int mEdgeSize -> mEdgeSize
    int mTrackingEdges -> mTrackingEdges
    android.support.v4.widget.ScrollerCompat mScroller -> mScroller
    android.support.v4.widget.ViewDragHelper$Callback mCallback -> mCallback
    android.view.View mCapturedView -> mCapturedView
    boolean mReleaseInProgress -> mReleaseInProgress
    android.view.ViewGroup mParentView -> mParentView
    android.view.animation.Interpolator sInterpolator -> sInterpolator
    java.lang.Runnable mSetIdleRunnable -> mSetIdleRunnable
    android.support.v4.widget.ViewDragHelper create(android.view.ViewGroup,android.support.v4.widget.ViewDragHelper$Callback) -> create
    android.support.v4.widget.ViewDragHelper create(android.view.ViewGroup,float,android.support.v4.widget.ViewDragHelper$Callback) -> create
    void setMinVelocity(float) -> setMinVelocity
    float getMinVelocity() -> getMinVelocity
    int getViewDragState() -> getViewDragState
    void setEdgeTrackingEnabled(int) -> setEdgeTrackingEnabled
    int getEdgeSize() -> getEdgeSize
    void captureChildView(android.view.View,int) -> captureChildView
    android.view.View getCapturedView() -> getCapturedView
    int getActivePointerId() -> getActivePointerId
    int getTouchSlop() -> getTouchSlop
    void cancel() -> cancel
    void abort() -> abort
    boolean smoothSlideViewTo(android.view.View,int,int) -> smoothSlideViewTo
    boolean settleCapturedViewAt(int,int) -> settleCapturedViewAt
    boolean forceSettleCapturedViewAt(int,int,int,int) -> forceSettleCapturedViewAt
    int computeSettleDuration(android.view.View,int,int,int,int) -> computeSettleDuration
    int computeAxisDuration(int,int,int) -> computeAxisDuration
    int clampMag(int,int,int) -> clampMag
    float clampMag(float,float,float) -> clampMag
    float distanceInfluenceForSnapDuration(float) -> distanceInfluenceForSnapDuration
    void flingCapturedView(int,int,int,int) -> flingCapturedView
    boolean continueSettling(boolean) -> continueSettling
    void dispatchViewReleased(float,float) -> dispatchViewReleased
    void clearMotionHistory() -> clearMotionHistory
    void clearMotionHistory(int) -> clearMotionHistory
    void ensureMotionHistorySizeForId(int) -> ensureMotionHistorySizeForId
    void saveInitialMotion(float,float,int) -> saveInitialMotion
    void saveLastMotion(android.view.MotionEvent) -> saveLastMotion
    boolean isPointerDown(int) -> isPointerDown
    void setDragState(int) -> setDragState
    boolean tryCaptureViewForDrag(android.view.View,int) -> tryCaptureViewForDrag
    boolean canScroll(android.view.View,boolean,int,int,int,int) -> canScroll
    boolean shouldInterceptTouchEvent(android.view.MotionEvent) -> shouldInterceptTouchEvent
    void processTouchEvent(android.view.MotionEvent) -> processTouchEvent
    void reportNewEdgeDrags(float,float,int) -> reportNewEdgeDrags
    boolean checkNewEdgeDrag(float,float,int,int) -> checkNewEdgeDrag
    boolean checkTouchSlop(android.view.View,float,float) -> checkTouchSlop
    boolean checkTouchSlop(int) -> checkTouchSlop
    boolean checkTouchSlop(int,int) -> checkTouchSlop
    boolean isEdgeTouched(int) -> isEdgeTouched
    boolean isEdgeTouched(int,int) -> isEdgeTouched
    void releaseViewForPointerUp() -> releaseViewForPointerUp
    void dragTo(int,int,int,int) -> dragTo
    boolean isCapturedViewUnder(int,int) -> isCapturedViewUnder
    boolean isViewUnder(android.view.View,int,int) -> isViewUnder
    android.view.View findTopChildUnder(int,int) -> findTopChildUnder
    int getEdgesTouched(int,int) -> getEdgesTouched
android.support.v4.widget.ViewDragHelper$1 -> android.support.v4.widget.ViewDragHelper$1:
    float getInterpolation(float) -> getInterpolation
android.support.v4.widget.ViewDragHelper$2 -> android.support.v4.widget.ViewDragHelper$2:
    android.support.v4.widget.ViewDragHelper this$0 -> this$0
    void run() -> run
android.support.v4.widget.ViewDragHelper$Callback -> android.support.v4.widget.ViewDragHelper$Callback:
    void onViewDragStateChanged(int) -> onViewDragStateChanged
    void onViewPositionChanged(android.view.View,int,int,int,int) -> onViewPositionChanged
    void onViewCaptured(android.view.View,int) -> onViewCaptured
    void onViewReleased(android.view.View,float,float) -> onViewReleased
    void onEdgeTouched(int,int) -> onEdgeTouched
    boolean onEdgeLock(int) -> onEdgeLock
    void onEdgeDragStarted(int,int) -> onEdgeDragStarted
    int getOrderedChildIndex(int) -> getOrderedChildIndex
    int getViewHorizontalDragRange(android.view.View) -> getViewHorizontalDragRange
    int getViewVerticalDragRange(android.view.View) -> getViewVerticalDragRange
    boolean tryCaptureView(android.view.View,int) -> tryCaptureView
    int clampViewPositionHorizontal(android.view.View,int,int) -> clampViewPositionHorizontal
    int clampViewPositionVertical(android.view.View,int,int) -> clampViewPositionVertical
android.support.v8.renderscript.Allocation -> android.support.v8.renderscript.Allocation:
    android.support.v8.renderscript.Type mType -> mType
    android.graphics.Bitmap mBitmap -> mBitmap
    int mUsage -> mUsage
    android.support.v8.renderscript.Allocation mAdaptedAllocation -> mAdaptedAllocation
    int mSize -> mSize
    boolean mConstrainedLOD -> mConstrainedLOD
    boolean mConstrainedFace -> mConstrainedFace
    boolean mConstrainedY -> mConstrainedY
    boolean mConstrainedZ -> mConstrainedZ
    boolean mReadAllowed -> mReadAllowed
    boolean mWriteAllowed -> mWriteAllowed
    int mSelectedY -> mSelectedY
    int mSelectedZ -> mSelectedZ
    int mSelectedLOD -> mSelectedLOD
    android.support.v8.renderscript.Type$CubemapFace mSelectedFace -> mSelectedFace
    int mCurrentDimX -> mCurrentDimX
    int mCurrentDimY -> mCurrentDimY
    int mCurrentDimZ -> mCurrentDimZ
    int mCurrentCount -> mCurrentCount
    int USAGE_SCRIPT -> USAGE_SCRIPT
    int USAGE_GRAPHICS_TEXTURE -> USAGE_GRAPHICS_TEXTURE
    int USAGE_IO_INPUT -> USAGE_IO_INPUT
    int USAGE_IO_OUTPUT -> USAGE_IO_OUTPUT
    int USAGE_SHARED -> USAGE_SHARED
    android.graphics.BitmapFactory$Options mBitmapOptions -> mBitmapOptions
    int getIDSafe() -> getIDSafe
    android.support.v8.renderscript.Element getElement() -> getElement
    int getUsage() -> getUsage
    int getBytesSize() -> getBytesSize
    void updateCacheInfo(android.support.v8.renderscript.Type) -> updateCacheInfo
    void setBitmap(android.graphics.Bitmap) -> setBitmap
    void finalize() -> finalize
    void validateIsInt32() -> validateIsInt32
    void validateIsInt16() -> validateIsInt16
    void validateIsInt8() -> validateIsInt8
    void validateIsFloat32() -> validateIsFloat32
    void validateIsObject() -> validateIsObject
    android.support.v8.renderscript.Type getType() -> getType
    void syncAll(int) -> syncAll
    void ioSend() -> ioSend
    void ioSendOutput() -> ioSendOutput
    void ioReceive() -> ioReceive
    void copyFrom(android.support.v8.renderscript.BaseObj[]) -> copyFrom
    void validateBitmapFormat(android.graphics.Bitmap) -> validateBitmapFormat
    void validateBitmapSize(android.graphics.Bitmap) -> validateBitmapSize
    void copyFromUnchecked(int[]) -> copyFromUnchecked
    void copyFromUnchecked(short[]) -> copyFromUnchecked
    void copyFromUnchecked(byte[]) -> copyFromUnchecked
    void copyFromUnchecked(float[]) -> copyFromUnchecked
    void copyFrom(int[]) -> copyFrom
    void copyFrom(short[]) -> copyFrom
    void copyFrom(byte[]) -> copyFrom
    void copyFrom(float[]) -> copyFrom
    void copyFrom(android.graphics.Bitmap) -> copyFrom
    void copyFrom(android.support.v8.renderscript.Allocation) -> copyFrom
    void setFromFieldPacker(int,android.support.v8.renderscript.FieldPacker) -> setFromFieldPacker
    void setFromFieldPacker(int,int,android.support.v8.renderscript.FieldPacker) -> setFromFieldPacker
    void data1DChecks(int,int,int,int) -> data1DChecks
    void generateMipmaps() -> generateMipmaps
    void copy1DRangeFromUnchecked(int,int,int[]) -> copy1DRangeFromUnchecked
    void copy1DRangeFromUnchecked(int,int,short[]) -> copy1DRangeFromUnchecked
    void copy1DRangeFromUnchecked(int,int,byte[]) -> copy1DRangeFromUnchecked
    void copy1DRangeFromUnchecked(int,int,float[]) -> copy1DRangeFromUnchecked
    void copy1DRangeFrom(int,int,int[]) -> copy1DRangeFrom
    void copy1DRangeFrom(int,int,short[]) -> copy1DRangeFrom
    void copy1DRangeFrom(int,int,byte[]) -> copy1DRangeFrom
    void copy1DRangeFrom(int,int,float[]) -> copy1DRangeFrom
    void copy1DRangeFrom(int,int,android.support.v8.renderscript.Allocation,int) -> copy1DRangeFrom
    void validate2DRange(int,int,int,int) -> validate2DRange
    void copy2DRangeFromUnchecked(int,int,int,int,byte[]) -> copy2DRangeFromUnchecked
    void copy2DRangeFromUnchecked(int,int,int,int,short[]) -> copy2DRangeFromUnchecked
    void copy2DRangeFromUnchecked(int,int,int,int,int[]) -> copy2DRangeFromUnchecked
    void copy2DRangeFromUnchecked(int,int,int,int,float[]) -> copy2DRangeFromUnchecked
    void copy2DRangeFrom(int,int,int,int,byte[]) -> copy2DRangeFrom
    void copy2DRangeFrom(int,int,int,int,short[]) -> copy2DRangeFrom
    void copy2DRangeFrom(int,int,int,int,int[]) -> copy2DRangeFrom
    void copy2DRangeFrom(int,int,int,int,float[]) -> copy2DRangeFrom
    void copy2DRangeFrom(int,int,int,int,android.support.v8.renderscript.Allocation,int,int) -> copy2DRangeFrom
    void copy2DRangeFrom(int,int,android.graphics.Bitmap) -> copy2DRangeFrom
    void validate3DRange(int,int,int,int,int,int) -> validate3DRange
    void copy3DRangeFromUnchecked(int,int,int,int,int,int,byte[]) -> copy3DRangeFromUnchecked
    void copy3DRangeFromUnchecked(int,int,int,int,int,int,short[]) -> copy3DRangeFromUnchecked
    void copy3DRangeFromUnchecked(int,int,int,int,int,int,int[]) -> copy3DRangeFromUnchecked
    void copy3DRangeFromUnchecked(int,int,int,int,int,int,float[]) -> copy3DRangeFromUnchecked
    void copy3DRangeFrom(int,int,int,int,int,int,byte[]) -> copy3DRangeFrom
    void copy3DRangeFrom(int,int,int,int,int,int,short[]) -> copy3DRangeFrom
    void copy3DRangeFrom(int,int,int,int,int,int,int[]) -> copy3DRangeFrom
    void copy3DRangeFrom(int,int,int,int,int,int,float[]) -> copy3DRangeFrom
    void copy3DRangeFrom(int,int,int,int,int,int,android.support.v8.renderscript.Allocation,int,int,int) -> copy3DRangeFrom
    void copyTo(android.graphics.Bitmap) -> copyTo
    void copyTo(byte[]) -> copyTo
    void copyTo(short[]) -> copyTo
    void copyTo(int[]) -> copyTo
    void copyTo(float[]) -> copyTo
    android.support.v8.renderscript.Allocation createTyped(android.support.v8.renderscript.RenderScript,android.support.v8.renderscript.Type,android.support.v8.renderscript.Allocation$MipmapControl,int) -> createTyped
    android.support.v8.renderscript.Allocation createTyped(android.support.v8.renderscript.RenderScript,android.support.v8.renderscript.Type,int) -> createTyped
    android.support.v8.renderscript.Allocation createTyped(android.support.v8.renderscript.RenderScript,android.support.v8.renderscript.Type) -> createTyped
    android.support.v8.renderscript.Allocation createSized(android.support.v8.renderscript.RenderScript,android.support.v8.renderscript.Element,int,int) -> createSized
    android.support.v8.renderscript.Allocation createSized(android.support.v8.renderscript.RenderScript,android.support.v8.renderscript.Element,int) -> createSized
    android.support.v8.renderscript.Element elementFromBitmap(android.support.v8.renderscript.RenderScript,android.graphics.Bitmap) -> elementFromBitmap
    android.support.v8.renderscript.Type typeFromBitmap(android.support.v8.renderscript.RenderScript,android.graphics.Bitmap,android.support.v8.renderscript.Allocation$MipmapControl) -> typeFromBitmap
    android.support.v8.renderscript.Allocation createFromBitmap(android.support.v8.renderscript.RenderScript,android.graphics.Bitmap,android.support.v8.renderscript.Allocation$MipmapControl,int) -> createFromBitmap
    android.support.v8.renderscript.Allocation createFromBitmap(android.support.v8.renderscript.RenderScript,android.graphics.Bitmap) -> createFromBitmap
    android.support.v8.renderscript.Allocation createCubemapFromBitmap(android.support.v8.renderscript.RenderScript,android.graphics.Bitmap,android.support.v8.renderscript.Allocation$MipmapControl,int) -> createCubemapFromBitmap
    android.support.v8.renderscript.Allocation createCubemapFromBitmap(android.support.v8.renderscript.RenderScript,android.graphics.Bitmap) -> createCubemapFromBitmap
    android.support.v8.renderscript.Allocation createCubemapFromCubeFaces(android.support.v8.renderscript.RenderScript,android.graphics.Bitmap,android.graphics.Bitmap,android.graphics.Bitmap,android.graphics.Bitmap,android.graphics.Bitmap,android.graphics.Bitmap,android.support.v8.renderscript.Allocation$MipmapControl,int) -> createCubemapFromCubeFaces
    android.support.v8.renderscript.Allocation createCubemapFromCubeFaces(android.support.v8.renderscript.RenderScript,android.graphics.Bitmap,android.graphics.Bitmap,android.graphics.Bitmap,android.graphics.Bitmap,android.graphics.Bitmap,android.graphics.Bitmap) -> createCubemapFromCubeFaces
    android.support.v8.renderscript.Allocation createFromBitmapResource(android.support.v8.renderscript.RenderScript,android.content.res.Resources,int,android.support.v8.renderscript.Allocation$MipmapControl,int) -> createFromBitmapResource
    android.support.v8.renderscript.Allocation createFromBitmapResource(android.support.v8.renderscript.RenderScript,android.content.res.Resources,int) -> createFromBitmapResource
    android.support.v8.renderscript.Allocation createFromString(android.support.v8.renderscript.RenderScript,java.lang.String,int) -> createFromString
android.support.v8.renderscript.Allocation$1 -> android.support.v8.renderscript.Allocation$1:
    int[] $SwitchMap$android$graphics$Bitmap$Config -> $SwitchMap$android$graphics$Bitmap$Config
android.support.v8.renderscript.Allocation$MipmapControl -> android.support.v8.renderscript.Allocation$MipmapControl:
    android.support.v8.renderscript.Allocation$MipmapControl MIPMAP_NONE -> MIPMAP_NONE
    android.support.v8.renderscript.Allocation$MipmapControl MIPMAP_FULL -> MIPMAP_FULL
    android.support.v8.renderscript.Allocation$MipmapControl MIPMAP_ON_SYNC_TO_TEXTURE -> MIPMAP_ON_SYNC_TO_TEXTURE
    int mID -> mID
    android.support.v8.renderscript.Allocation$MipmapControl[] $VALUES -> $VALUES
    android.support.v8.renderscript.Allocation$MipmapControl[] values() -> values
    android.support.v8.renderscript.Allocation$MipmapControl valueOf(java.lang.String) -> valueOf
android.support.v8.renderscript.AllocationThunker -> android.support.v8.renderscript.AllocationThunker:
    android.renderscript.Allocation mN -> mN
    android.graphics.BitmapFactory$Options mBitmapOptions -> mBitmapOptions
    android.renderscript.Allocation getNObj() -> getNObj
    android.renderscript.Allocation$MipmapControl convertMipmapControl(android.support.v8.renderscript.Allocation$MipmapControl) -> convertMipmapControl
    android.support.v8.renderscript.Type getType() -> getType
    android.support.v8.renderscript.Element getElement() -> getElement
    int getUsage() -> getUsage
    int getBytesSize() -> getBytesSize
    void syncAll(int) -> syncAll
    void ioSend() -> ioSend
    void ioReceive() -> ioReceive
    void copyFrom(android.support.v8.renderscript.BaseObj[]) -> copyFrom
    void copyFromUnchecked(int[]) -> copyFromUnchecked
    void copyFromUnchecked(short[]) -> copyFromUnchecked
    void copyFromUnchecked(byte[]) -> copyFromUnchecked
    void copyFromUnchecked(float[]) -> copyFromUnchecked
    void copyFrom(int[]) -> copyFrom
    void copyFrom(short[]) -> copyFrom
    void copyFrom(byte[]) -> copyFrom
    void copyFrom(float[]) -> copyFrom
    void copyFrom(android.graphics.Bitmap) -> copyFrom
    void copyFrom(android.support.v8.renderscript.Allocation) -> copyFrom
    void setFromFieldPacker(int,android.support.v8.renderscript.FieldPacker) -> setFromFieldPacker
    void setFromFieldPacker(int,int,android.support.v8.renderscript.FieldPacker) -> setFromFieldPacker
    void generateMipmaps() -> generateMipmaps
    void copy1DRangeFromUnchecked(int,int,int[]) -> copy1DRangeFromUnchecked
    void copy1DRangeFromUnchecked(int,int,short[]) -> copy1DRangeFromUnchecked
    void copy1DRangeFromUnchecked(int,int,byte[]) -> copy1DRangeFromUnchecked
    void copy1DRangeFromUnchecked(int,int,float[]) -> copy1DRangeFromUnchecked
    void copy1DRangeFrom(int,int,int[]) -> copy1DRangeFrom
    void copy1DRangeFrom(int,int,short[]) -> copy1DRangeFrom
    void copy1DRangeFrom(int,int,byte[]) -> copy1DRangeFrom
    void copy1DRangeFrom(int,int,float[]) -> copy1DRangeFrom
    void copy1DRangeFrom(int,int,android.support.v8.renderscript.Allocation,int) -> copy1DRangeFrom
    void copy2DRangeFrom(int,int,int,int,byte[]) -> copy2DRangeFrom
    void copy2DRangeFrom(int,int,int,int,short[]) -> copy2DRangeFrom
    void copy2DRangeFrom(int,int,int,int,int[]) -> copy2DRangeFrom
    void copy2DRangeFrom(int,int,int,int,float[]) -> copy2DRangeFrom
    void copy2DRangeFrom(int,int,int,int,android.support.v8.renderscript.Allocation,int,int) -> copy2DRangeFrom
    void copy2DRangeFrom(int,int,android.graphics.Bitmap) -> copy2DRangeFrom
    void copyTo(android.graphics.Bitmap) -> copyTo
    void copyTo(byte[]) -> copyTo
    void copyTo(short[]) -> copyTo
    void copyTo(int[]) -> copyTo
    void copyTo(float[]) -> copyTo
    android.support.v8.renderscript.Allocation createTyped(android.support.v8.renderscript.RenderScript,android.support.v8.renderscript.Type,android.support.v8.renderscript.Allocation$MipmapControl,int) -> createTyped
    android.support.v8.renderscript.Allocation createFromBitmap(android.support.v8.renderscript.RenderScript,android.graphics.Bitmap,android.support.v8.renderscript.Allocation$MipmapControl,int) -> createFromBitmap
    android.support.v8.renderscript.Allocation createCubemapFromBitmap(android.support.v8.renderscript.RenderScript,android.graphics.Bitmap,android.support.v8.renderscript.Allocation$MipmapControl,int) -> createCubemapFromBitmap
    android.support.v8.renderscript.Allocation createCubemapFromCubeFaces(android.support.v8.renderscript.RenderScript,android.graphics.Bitmap,android.graphics.Bitmap,android.graphics.Bitmap,android.graphics.Bitmap,android.graphics.Bitmap,android.graphics.Bitmap,android.support.v8.renderscript.Allocation$MipmapControl,int) -> createCubemapFromCubeFaces
    android.support.v8.renderscript.Allocation createFromBitmapResource(android.support.v8.renderscript.RenderScript,android.content.res.Resources,int,android.support.v8.renderscript.Allocation$MipmapControl,int) -> createFromBitmapResource
    android.support.v8.renderscript.Allocation createFromString(android.support.v8.renderscript.RenderScript,java.lang.String,int) -> createFromString
    android.support.v8.renderscript.Allocation createSized(android.support.v8.renderscript.RenderScript,android.support.v8.renderscript.Element,int,int) -> createSized
    android.renderscript.BaseObj getNObj() -> getNObj
android.support.v8.renderscript.AllocationThunker$1 -> android.support.v8.renderscript.AllocationThunker$1:
    int[] $SwitchMap$android$support$v8$renderscript$Allocation$MipmapControl -> $SwitchMap$android$support$v8$renderscript$Allocation$MipmapControl
android.support.v8.renderscript.BaseObj -> android.support.v8.renderscript.BaseObj:
    int mID -> mID
    boolean mDestroyed -> mDestroyed
    android.support.v8.renderscript.RenderScript mRS -> mRS
    void setID(int) -> setID
    int getID(android.support.v8.renderscript.RenderScript) -> getID
    android.renderscript.BaseObj getNObj() -> getNObj
    void checkValid() -> checkValid
    void finalize() -> finalize
    void destroy() -> destroy
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
android.support.v8.renderscript.Byte2 -> android.support.v8.renderscript.Byte2:
    byte x -> x
    byte y -> y
android.support.v8.renderscript.Byte3 -> android.support.v8.renderscript.Byte3:
    byte x -> x
    byte y -> y
    byte z -> z
android.support.v8.renderscript.Byte4 -> android.support.v8.renderscript.Byte4:
    byte x -> x
    byte y -> y
    byte z -> z
    byte w -> w
android.support.v8.renderscript.Double2 -> android.support.v8.renderscript.Double2:
    double x -> x
    double y -> y
android.support.v8.renderscript.Double3 -> android.support.v8.renderscript.Double3:
    double x -> x
    double y -> y
    double z -> z
android.support.v8.renderscript.Double4 -> android.support.v8.renderscript.Double4:
    double x -> x
    double y -> y
    double z -> z
    double w -> w
android.support.v8.renderscript.Element -> android.support.v8.renderscript.Element:
    int mSize -> mSize
    android.support.v8.renderscript.Element[] mElements -> mElements
    java.lang.String[] mElementNames -> mElementNames
    int[] mArraySizes -> mArraySizes
    int[] mOffsetInBytes -> mOffsetInBytes
    int[] mVisibleElementMap -> mVisibleElementMap
    android.support.v8.renderscript.Element$DataType mType -> mType
    android.support.v8.renderscript.Element$DataKind mKind -> mKind
    boolean mNormalized -> mNormalized
    int mVectorSize -> mVectorSize
    void updateVisibleSubElements() -> updateVisibleSubElements
    int getBytesSize() -> getBytesSize
    int getVectorSize() -> getVectorSize
    boolean isComplex() -> isComplex
    int getSubElementCount() -> getSubElementCount
    android.support.v8.renderscript.Element getSubElement(int) -> getSubElement
    java.lang.String getSubElementName(int) -> getSubElementName
    int getSubElementArraySize(int) -> getSubElementArraySize
    int getSubElementOffsetBytes(int) -> getSubElementOffsetBytes
    android.support.v8.renderscript.Element$DataType getDataType() -> getDataType
    android.support.v8.renderscript.Element$DataKind getDataKind() -> getDataKind
    android.support.v8.renderscript.Element BOOLEAN(android.support.v8.renderscript.RenderScript) -> BOOLEAN
    android.support.v8.renderscript.Element U8(android.support.v8.renderscript.RenderScript) -> U8
    android.support.v8.renderscript.Element I8(android.support.v8.renderscript.RenderScript) -> I8
    android.support.v8.renderscript.Element U16(android.support.v8.renderscript.RenderScript) -> U16
    android.support.v8.renderscript.Element I16(android.support.v8.renderscript.RenderScript) -> I16
    android.support.v8.renderscript.Element U32(android.support.v8.renderscript.RenderScript) -> U32
    android.support.v8.renderscript.Element I32(android.support.v8.renderscript.RenderScript) -> I32
    android.support.v8.renderscript.Element U64(android.support.v8.renderscript.RenderScript) -> U64
    android.support.v8.renderscript.Element I64(android.support.v8.renderscript.RenderScript) -> I64
    android.support.v8.renderscript.Element F32(android.support.v8.renderscript.RenderScript) -> F32
    android.support.v8.renderscript.Element F64(android.support.v8.renderscript.RenderScript) -> F64
    android.support.v8.renderscript.Element ELEMENT(android.support.v8.renderscript.RenderScript) -> ELEMENT
    android.support.v8.renderscript.Element TYPE(android.support.v8.renderscript.RenderScript) -> TYPE
    android.support.v8.renderscript.Element ALLOCATION(android.support.v8.renderscript.RenderScript) -> ALLOCATION
    android.support.v8.renderscript.Element SAMPLER(android.support.v8.renderscript.RenderScript) -> SAMPLER
    android.support.v8.renderscript.Element SCRIPT(android.support.v8.renderscript.RenderScript) -> SCRIPT
    android.support.v8.renderscript.Element A_8(android.support.v8.renderscript.RenderScript) -> A_8
    android.support.v8.renderscript.Element RGB_565(android.support.v8.renderscript.RenderScript) -> RGB_565
    android.support.v8.renderscript.Element RGB_888(android.support.v8.renderscript.RenderScript) -> RGB_888
    android.support.v8.renderscript.Element RGBA_5551(android.support.v8.renderscript.RenderScript) -> RGBA_5551
    android.support.v8.renderscript.Element RGBA_4444(android.support.v8.renderscript.RenderScript) -> RGBA_4444
    android.support.v8.renderscript.Element RGBA_8888(android.support.v8.renderscript.RenderScript) -> RGBA_8888
    android.support.v8.renderscript.Element F32_2(android.support.v8.renderscript.RenderScript) -> F32_2
    android.support.v8.renderscript.Element F32_3(android.support.v8.renderscript.RenderScript) -> F32_3
    android.support.v8.renderscript.Element F32_4(android.support.v8.renderscript.RenderScript) -> F32_4
    android.support.v8.renderscript.Element F64_2(android.support.v8.renderscript.RenderScript) -> F64_2
    android.support.v8.renderscript.Element F64_3(android.support.v8.renderscript.RenderScript) -> F64_3
    android.support.v8.renderscript.Element F64_4(android.support.v8.renderscript.RenderScript) -> F64_4
    android.support.v8.renderscript.Element U8_2(android.support.v8.renderscript.RenderScript) -> U8_2
    android.support.v8.renderscript.Element U8_3(android.support.v8.renderscript.RenderScript) -> U8_3
    android.support.v8.renderscript.Element U8_4(android.support.v8.renderscript.RenderScript) -> U8_4
    android.support.v8.renderscript.Element I8_2(android.support.v8.renderscript.RenderScript) -> I8_2
    android.support.v8.renderscript.Element I8_3(android.support.v8.renderscript.RenderScript) -> I8_3
    android.support.v8.renderscript.Element I8_4(android.support.v8.renderscript.RenderScript) -> I8_4
    android.support.v8.renderscript.Element U16_2(android.support.v8.renderscript.RenderScript) -> U16_2
    android.support.v8.renderscript.Element U16_3(android.support.v8.renderscript.RenderScript) -> U16_3
    android.support.v8.renderscript.Element U16_4(android.support.v8.renderscript.RenderScript) -> U16_4
    android.support.v8.renderscript.Element I16_2(android.support.v8.renderscript.RenderScript) -> I16_2
    android.support.v8.renderscript.Element I16_3(android.support.v8.renderscript.RenderScript) -> I16_3
    android.support.v8.renderscript.Element I16_4(android.support.v8.renderscript.RenderScript) -> I16_4
    android.support.v8.renderscript.Element U32_2(android.support.v8.renderscript.RenderScript) -> U32_2
    android.support.v8.renderscript.Element U32_3(android.support.v8.renderscript.RenderScript) -> U32_3
    android.support.v8.renderscript.Element U32_4(android.support.v8.renderscript.RenderScript) -> U32_4
    android.support.v8.renderscript.Element I32_2(android.support.v8.renderscript.RenderScript) -> I32_2
    android.support.v8.renderscript.Element I32_3(android.support.v8.renderscript.RenderScript) -> I32_3
    android.support.v8.renderscript.Element I32_4(android.support.v8.renderscript.RenderScript) -> I32_4
    android.support.v8.renderscript.Element U64_2(android.support.v8.renderscript.RenderScript) -> U64_2
    android.support.v8.renderscript.Element U64_3(android.support.v8.renderscript.RenderScript) -> U64_3
    android.support.v8.renderscript.Element U64_4(android.support.v8.renderscript.RenderScript) -> U64_4
    android.support.v8.renderscript.Element I64_2(android.support.v8.renderscript.RenderScript) -> I64_2
    android.support.v8.renderscript.Element I64_3(android.support.v8.renderscript.RenderScript) -> I64_3
    android.support.v8.renderscript.Element I64_4(android.support.v8.renderscript.RenderScript) -> I64_4
    android.support.v8.renderscript.Element MATRIX_4X4(android.support.v8.renderscript.RenderScript) -> MATRIX_4X4
    android.support.v8.renderscript.Element MATRIX_3X3(android.support.v8.renderscript.RenderScript) -> MATRIX_3X3
    android.support.v8.renderscript.Element MATRIX_2X2(android.support.v8.renderscript.RenderScript) -> MATRIX_2X2
    android.support.v8.renderscript.Element createUser(android.support.v8.renderscript.RenderScript,android.support.v8.renderscript.Element$DataType) -> createUser
    android.support.v8.renderscript.Element createVector(android.support.v8.renderscript.RenderScript,android.support.v8.renderscript.Element$DataType,int) -> createVector
    android.support.v8.renderscript.Element createPixel(android.support.v8.renderscript.RenderScript,android.support.v8.renderscript.Element$DataType,android.support.v8.renderscript.Element$DataKind) -> createPixel
    boolean isCompatible(android.support.v8.renderscript.Element) -> isCompatible
android.support.v8.renderscript.Element$1 -> android.support.v8.renderscript.Element$1:
    int[] $SwitchMap$android$support$v8$renderscript$Element$DataType -> $SwitchMap$android$support$v8$renderscript$Element$DataType
    int[] $SwitchMap$android$support$v8$renderscript$Element$DataKind -> $SwitchMap$android$support$v8$renderscript$Element$DataKind
android.support.v8.renderscript.Element$Builder -> android.support.v8.renderscript.Element$Builder:
    android.support.v8.renderscript.ElementThunker$BuilderThunker mT -> mT
    android.support.v8.renderscript.RenderScript mRS -> mRS
    android.support.v8.renderscript.Element[] mElements -> mElements
    java.lang.String[] mElementNames -> mElementNames
    int[] mArraySizes -> mArraySizes
    int mCount -> mCount
    int mSkipPadding -> mSkipPadding
    android.support.v8.renderscript.Element$Builder add(android.support.v8.renderscript.Element,java.lang.String,int) -> add
    android.support.v8.renderscript.Element$Builder add(android.support.v8.renderscript.Element,java.lang.String) -> add
    android.support.v8.renderscript.Element create() -> create
android.support.v8.renderscript.Element$DataKind -> android.support.v8.renderscript.Element$DataKind:
    android.support.v8.renderscript.Element$DataKind USER -> USER
    android.support.v8.renderscript.Element$DataKind PIXEL_L -> PIXEL_L
    android.support.v8.renderscript.Element$DataKind PIXEL_A -> PIXEL_A
    android.support.v8.renderscript.Element$DataKind PIXEL_LA -> PIXEL_LA
    android.support.v8.renderscript.Element$DataKind PIXEL_RGB -> PIXEL_RGB
    android.support.v8.renderscript.Element$DataKind PIXEL_RGBA -> PIXEL_RGBA
    android.support.v8.renderscript.Element$DataKind PIXEL_DEPTH -> PIXEL_DEPTH
    android.support.v8.renderscript.Element$DataKind PIXEL_YUV -> PIXEL_YUV
    int mID -> mID
    android.support.v8.renderscript.Element$DataKind[] $VALUES -> $VALUES
    android.support.v8.renderscript.Element$DataKind[] values() -> values
    android.support.v8.renderscript.Element$DataKind valueOf(java.lang.String) -> valueOf
android.support.v8.renderscript.Element$DataType -> android.support.v8.renderscript.Element$DataType:
    android.support.v8.renderscript.Element$DataType NONE -> NONE
    android.support.v8.renderscript.Element$DataType FLOAT_32 -> FLOAT_32
    android.support.v8.renderscript.Element$DataType FLOAT_64 -> FLOAT_64
    android.support.v8.renderscript.Element$DataType SIGNED_8 -> SIGNED_8
    android.support.v8.renderscript.Element$DataType SIGNED_16 -> SIGNED_16
    android.support.v8.renderscript.Element$DataType SIGNED_32 -> SIGNED_32
    android.support.v8.renderscript.Element$DataType SIGNED_64 -> SIGNED_64
    android.support.v8.renderscript.Element$DataType UNSIGNED_8 -> UNSIGNED_8
    android.support.v8.renderscript.Element$DataType UNSIGNED_16 -> UNSIGNED_16
    android.support.v8.renderscript.Element$DataType UNSIGNED_32 -> UNSIGNED_32
    android.support.v8.renderscript.Element$DataType UNSIGNED_64 -> UNSIGNED_64
    android.support.v8.renderscript.Element$DataType BOOLEAN -> BOOLEAN
    android.support.v8.renderscript.Element$DataType UNSIGNED_5_6_5 -> UNSIGNED_5_6_5
    android.support.v8.renderscript.Element$DataType UNSIGNED_5_5_5_1 -> UNSIGNED_5_5_5_1
    android.support.v8.renderscript.Element$DataType UNSIGNED_4_4_4_4 -> UNSIGNED_4_4_4_4
    android.support.v8.renderscript.Element$DataType MATRIX_4X4 -> MATRIX_4X4
    android.support.v8.renderscript.Element$DataType MATRIX_3X3 -> MATRIX_3X3
    android.support.v8.renderscript.Element$DataType MATRIX_2X2 -> MATRIX_2X2
    android.support.v8.renderscript.Element$DataType RS_ELEMENT -> RS_ELEMENT
    android.support.v8.renderscript.Element$DataType RS_TYPE -> RS_TYPE
    android.support.v8.renderscript.Element$DataType RS_ALLOCATION -> RS_ALLOCATION
    android.support.v8.renderscript.Element$DataType RS_SAMPLER -> RS_SAMPLER
    android.support.v8.renderscript.Element$DataType RS_SCRIPT -> RS_SCRIPT
    int mID -> mID
    int mSize -> mSize
    android.support.v8.renderscript.Element$DataType[] $VALUES -> $VALUES
    android.support.v8.renderscript.Element$DataType[] values() -> values
    android.support.v8.renderscript.Element$DataType valueOf(java.lang.String) -> valueOf
android.support.v8.renderscript.ElementThunker -> android.support.v8.renderscript.ElementThunker:
    android.renderscript.Element mN -> mN
    android.renderscript.Element getNObj() -> getNObj
    int getBytesSize() -> getBytesSize
    int getVectorSize() -> getVectorSize
    android.renderscript.Element$DataKind convertKind(android.support.v8.renderscript.Element$DataKind) -> convertKind
    android.renderscript.Element$DataType convertType(android.support.v8.renderscript.Element$DataType) -> convertType
    boolean isComplex() -> isComplex
    int getSubElementCount() -> getSubElementCount
    android.support.v8.renderscript.Element getSubElement(int) -> getSubElement
    java.lang.String getSubElementName(int) -> getSubElementName
    int getSubElementArraySize(int) -> getSubElementArraySize
    int getSubElementOffsetBytes(int) -> getSubElementOffsetBytes
    android.support.v8.renderscript.Element$DataType getDataType() -> getDataType
    android.support.v8.renderscript.Element$DataKind getDataKind() -> getDataKind
    android.support.v8.renderscript.Element create(android.support.v8.renderscript.RenderScript,android.support.v8.renderscript.Element$DataType) -> create
    android.support.v8.renderscript.Element createVector(android.support.v8.renderscript.RenderScript,android.support.v8.renderscript.Element$DataType,int) -> createVector
    android.support.v8.renderscript.Element createPixel(android.support.v8.renderscript.RenderScript,android.support.v8.renderscript.Element$DataType,android.support.v8.renderscript.Element$DataKind) -> createPixel
    boolean isCompatible(android.support.v8.renderscript.Element) -> isCompatible
    android.renderscript.BaseObj getNObj() -> getNObj
android.support.v8.renderscript.ElementThunker$1 -> android.support.v8.renderscript.ElementThunker$1:
    int[] $SwitchMap$android$support$v8$renderscript$Element$DataKind -> $SwitchMap$android$support$v8$renderscript$Element$DataKind
    int[] $SwitchMap$android$support$v8$renderscript$Element$DataType -> $SwitchMap$android$support$v8$renderscript$Element$DataType
android.support.v8.renderscript.ElementThunker$BuilderThunker -> android.support.v8.renderscript.ElementThunker$BuilderThunker:
    android.renderscript.Element$Builder mN -> mN
    void add(android.support.v8.renderscript.Element,java.lang.String,int) -> add
    android.support.v8.renderscript.Element create(android.support.v8.renderscript.RenderScript) -> create
android.support.v8.renderscript.ExceptionThunker -> android.support.v8.renderscript.ExceptionThunker:
    java.lang.RuntimeException convertException(java.lang.RuntimeException) -> convertException
android.support.v8.renderscript.FieldPacker -> android.support.v8.renderscript.FieldPacker:
    android.renderscript.FieldPacker mN -> mN
    byte[] mData -> mData
    int mPos -> mPos
    int mLen -> mLen
    void align(int) -> align
    void reset() -> reset
    void reset(int) -> reset
    void skip(int) -> skip
    void addI8(byte) -> addI8
    void addI16(short) -> addI16
    void addI32(int) -> addI32
    void addI64(long) -> addI64
    void addU8(short) -> addU8
    void addU16(int) -> addU16
    void addU32(long) -> addU32
    void addU64(long) -> addU64
    void addF32(float) -> addF32
    void addF64(double) -> addF64
    void addObj(android.support.v8.renderscript.BaseObj) -> addObj
    void addF32(android.support.v8.renderscript.Float2) -> addF32
    void addF32(android.support.v8.renderscript.Float3) -> addF32
    void addF32(android.support.v8.renderscript.Float4) -> addF32
    void addF64(android.support.v8.renderscript.Double2) -> addF64
    void addF64(android.support.v8.renderscript.Double3) -> addF64
    void addF64(android.support.v8.renderscript.Double4) -> addF64
    void addI8(android.support.v8.renderscript.Byte2) -> addI8
    void addI8(android.support.v8.renderscript.Byte3) -> addI8
    void addI8(android.support.v8.renderscript.Byte4) -> addI8
    void addU8(android.support.v8.renderscript.Short2) -> addU8
    void addU8(android.support.v8.renderscript.Short3) -> addU8
    void addU8(android.support.v8.renderscript.Short4) -> addU8
    void addI16(android.support.v8.renderscript.Short2) -> addI16
    void addI16(android.support.v8.renderscript.Short3) -> addI16
    void addI16(android.support.v8.renderscript.Short4) -> addI16
    void addU16(android.support.v8.renderscript.Int2) -> addU16
    void addU16(android.support.v8.renderscript.Int3) -> addU16
    void addU16(android.support.v8.renderscript.Int4) -> addU16
    void addI32(android.support.v8.renderscript.Int2) -> addI32
    void addI32(android.support.v8.renderscript.Int3) -> addI32
    void addI32(android.support.v8.renderscript.Int4) -> addI32
    void addU32(android.support.v8.renderscript.Long2) -> addU32
    void addU32(android.support.v8.renderscript.Long3) -> addU32
    void addU32(android.support.v8.renderscript.Long4) -> addU32
    void addI64(android.support.v8.renderscript.Long2) -> addI64
    void addI64(android.support.v8.renderscript.Long3) -> addI64
    void addI64(android.support.v8.renderscript.Long4) -> addI64
    void addU64(android.support.v8.renderscript.Long2) -> addU64
    void addU64(android.support.v8.renderscript.Long3) -> addU64
    void addU64(android.support.v8.renderscript.Long4) -> addU64
    void addMatrix(android.support.v8.renderscript.Matrix4f) -> addMatrix
    void addMatrix(android.support.v8.renderscript.Matrix3f) -> addMatrix
    void addMatrix(android.support.v8.renderscript.Matrix2f) -> addMatrix
    void addBoolean(boolean) -> addBoolean
    byte[] getData() -> getData
android.support.v8.renderscript.Float2 -> android.support.v8.renderscript.Float2:
    float x -> x
    float y -> y
android.support.v8.renderscript.Float3 -> android.support.v8.renderscript.Float3:
    float x -> x
    float y -> y
    float z -> z
android.support.v8.renderscript.Float4 -> android.support.v8.renderscript.Float4:
    float x -> x
    float y -> y
    float z -> z
    float w -> w
android.support.v8.renderscript.Int2 -> android.support.v8.renderscript.Int2:
    int x -> x
    int y -> y
android.support.v8.renderscript.Int3 -> android.support.v8.renderscript.Int3:
    int x -> x
    int y -> y
    int z -> z
android.support.v8.renderscript.Int4 -> android.support.v8.renderscript.Int4:
    int x -> x
    int y -> y
    int z -> z
    int w -> w
android.support.v8.renderscript.Long2 -> android.support.v8.renderscript.Long2:
    long x -> x
    long y -> y
android.support.v8.renderscript.Long3 -> android.support.v8.renderscript.Long3:
    long x -> x
    long y -> y
    long z -> z
android.support.v8.renderscript.Long4 -> android.support.v8.renderscript.Long4:
    long x -> x
    long y -> y
    long z -> z
    long w -> w
android.support.v8.renderscript.Matrix2f -> android.support.v8.renderscript.Matrix2f:
    float[] mMat -> mMat
    float[] getArray() -> getArray
    float get(int,int) -> get
    void set(int,int,float) -> set
    void loadIdentity() -> loadIdentity
    void load(android.support.v8.renderscript.Matrix2f) -> load
    void loadRotate(float) -> loadRotate
    void loadScale(float,float) -> loadScale
    void loadMultiply(android.support.v8.renderscript.Matrix2f,android.support.v8.renderscript.Matrix2f) -> loadMultiply
    void multiply(android.support.v8.renderscript.Matrix2f) -> multiply
    void rotate(float) -> rotate
    void scale(float,float) -> scale
    void transpose() -> transpose
android.support.v8.renderscript.Matrix3f -> android.support.v8.renderscript.Matrix3f:
    float[] mMat -> mMat
    float[] getArray() -> getArray
    float get(int,int) -> get
    void set(int,int,float) -> set
    void loadIdentity() -> loadIdentity
    void load(android.support.v8.renderscript.Matrix3f) -> load
    void loadRotate(float,float,float,float) -> loadRotate
    void loadRotate(float) -> loadRotate
    void loadScale(float,float) -> loadScale
    void loadScale(float,float,float) -> loadScale
    void loadTranslate(float,float) -> loadTranslate
    void loadMultiply(android.support.v8.renderscript.Matrix3f,android.support.v8.renderscript.Matrix3f) -> loadMultiply
    void multiply(android.support.v8.renderscript.Matrix3f) -> multiply
    void rotate(float,float,float,float) -> rotate
    void rotate(float) -> rotate
    void scale(float,float) -> scale
    void scale(float,float,float) -> scale
    void translate(float,float) -> translate
    void transpose() -> transpose
android.support.v8.renderscript.Matrix4f -> android.support.v8.renderscript.Matrix4f:
    float[] mMat -> mMat
    float[] getArray() -> getArray
    float get(int,int) -> get
    void set(int,int,float) -> set
    void loadIdentity() -> loadIdentity
    void load(android.support.v8.renderscript.Matrix4f) -> load
    void load(android.support.v8.renderscript.Matrix3f) -> load
    void loadRotate(float,float,float,float) -> loadRotate
    void loadScale(float,float,float) -> loadScale
    void loadTranslate(float,float,float) -> loadTranslate
    void loadMultiply(android.support.v8.renderscript.Matrix4f,android.support.v8.renderscript.Matrix4f) -> loadMultiply
    void loadOrtho(float,float,float,float,float,float) -> loadOrtho
    void loadOrthoWindow(int,int) -> loadOrthoWindow
    void loadFrustum(float,float,float,float,float,float) -> loadFrustum
    void loadPerspective(float,float,float,float) -> loadPerspective
    void loadProjectionNormalized(int,int) -> loadProjectionNormalized
    void multiply(android.support.v8.renderscript.Matrix4f) -> multiply
    void rotate(float,float,float,float) -> rotate
    void scale(float,float,float) -> scale
    void translate(float,float,float) -> translate
    float computeCofactor(int,int) -> computeCofactor
    boolean inverse() -> inverse
    boolean inverseTranspose() -> inverseTranspose
    void transpose() -> transpose
android.support.v8.renderscript.RSDriverException -> android.support.v8.renderscript.RSDriverException:
android.support.v8.renderscript.RSIllegalArgumentException -> android.support.v8.renderscript.RSIllegalArgumentException:
android.support.v8.renderscript.RSInvalidStateException -> android.support.v8.renderscript.RSInvalidStateException:
android.support.v8.renderscript.RSRuntimeException -> android.support.v8.renderscript.RSRuntimeException:
android.support.v8.renderscript.RenderScript -> android.support.v8.renderscript.RenderScript:
    java.lang.String LOG_TAG -> LOG_TAG
    boolean DEBUG -> DEBUG
    boolean LOG_ENABLED -> LOG_ENABLED
    android.content.Context mApplicationContext -> mApplicationContext
    boolean sInitialized -> sInitialized
    boolean sUseGCHooks -> sUseGCHooks
    java.lang.Object sRuntime -> sRuntime
    java.lang.reflect.Method registerNativeAllocation -> registerNativeAllocation
    java.lang.reflect.Method registerNativeFree -> registerNativeFree
    java.lang.Object lock -> lock
    boolean isNative -> isNative
    int thunk -> thunk
    java.lang.String CACHE_PATH -> CACHE_PATH
    java.lang.String mCachePath -> mCachePath
    int mDev -> mDev
    int mContext -> mContext
    android.support.v8.renderscript.RenderScript$MessageThread mMessageThread -> mMessageThread
    android.support.v8.renderscript.Element mElement_U8 -> mElement_U8
    android.support.v8.renderscript.Element mElement_I8 -> mElement_I8
    android.support.v8.renderscript.Element mElement_U16 -> mElement_U16
    android.support.v8.renderscript.Element mElement_I16 -> mElement_I16
    android.support.v8.renderscript.Element mElement_U32 -> mElement_U32
    android.support.v8.renderscript.Element mElement_I32 -> mElement_I32
    android.support.v8.renderscript.Element mElement_U64 -> mElement_U64
    android.support.v8.renderscript.Element mElement_I64 -> mElement_I64
    android.support.v8.renderscript.Element mElement_F32 -> mElement_F32
    android.support.v8.renderscript.Element mElement_F64 -> mElement_F64
    android.support.v8.renderscript.Element mElement_BOOLEAN -> mElement_BOOLEAN
    android.support.v8.renderscript.Element mElement_ELEMENT -> mElement_ELEMENT
    android.support.v8.renderscript.Element mElement_TYPE -> mElement_TYPE
    android.support.v8.renderscript.Element mElement_ALLOCATION -> mElement_ALLOCATION
    android.support.v8.renderscript.Element mElement_SAMPLER -> mElement_SAMPLER
    android.support.v8.renderscript.Element mElement_SCRIPT -> mElement_SCRIPT
    android.support.v8.renderscript.Element mElement_A_8 -> mElement_A_8
    android.support.v8.renderscript.Element mElement_RGB_565 -> mElement_RGB_565
    android.support.v8.renderscript.Element mElement_RGB_888 -> mElement_RGB_888
    android.support.v8.renderscript.Element mElement_RGBA_5551 -> mElement_RGBA_5551
    android.support.v8.renderscript.Element mElement_RGBA_4444 -> mElement_RGBA_4444
    android.support.v8.renderscript.Element mElement_RGBA_8888 -> mElement_RGBA_8888
    android.support.v8.renderscript.Element mElement_FLOAT_2 -> mElement_FLOAT_2
    android.support.v8.renderscript.Element mElement_FLOAT_3 -> mElement_FLOAT_3
    android.support.v8.renderscript.Element mElement_FLOAT_4 -> mElement_FLOAT_4
    android.support.v8.renderscript.Element mElement_DOUBLE_2 -> mElement_DOUBLE_2
    android.support.v8.renderscript.Element mElement_DOUBLE_3 -> mElement_DOUBLE_3
    android.support.v8.renderscript.Element mElement_DOUBLE_4 -> mElement_DOUBLE_4
    android.support.v8.renderscript.Element mElement_UCHAR_2 -> mElement_UCHAR_2
    android.support.v8.renderscript.Element mElement_UCHAR_3 -> mElement_UCHAR_3
    android.support.v8.renderscript.Element mElement_UCHAR_4 -> mElement_UCHAR_4
    android.support.v8.renderscript.Element mElement_CHAR_2 -> mElement_CHAR_2
    android.support.v8.renderscript.Element mElement_CHAR_3 -> mElement_CHAR_3
    android.support.v8.renderscript.Element mElement_CHAR_4 -> mElement_CHAR_4
    android.support.v8.renderscript.Element mElement_USHORT_2 -> mElement_USHORT_2
    android.support.v8.renderscript.Element mElement_USHORT_3 -> mElement_USHORT_3
    android.support.v8.renderscript.Element mElement_USHORT_4 -> mElement_USHORT_4
    android.support.v8.renderscript.Element mElement_SHORT_2 -> mElement_SHORT_2
    android.support.v8.renderscript.Element mElement_SHORT_3 -> mElement_SHORT_3
    android.support.v8.renderscript.Element mElement_SHORT_4 -> mElement_SHORT_4
    android.support.v8.renderscript.Element mElement_UINT_2 -> mElement_UINT_2
    android.support.v8.renderscript.Element mElement_UINT_3 -> mElement_UINT_3
    android.support.v8.renderscript.Element mElement_UINT_4 -> mElement_UINT_4
    android.support.v8.renderscript.Element mElement_INT_2 -> mElement_INT_2
    android.support.v8.renderscript.Element mElement_INT_3 -> mElement_INT_3
    android.support.v8.renderscript.Element mElement_INT_4 -> mElement_INT_4
    android.support.v8.renderscript.Element mElement_ULONG_2 -> mElement_ULONG_2
    android.support.v8.renderscript.Element mElement_ULONG_3 -> mElement_ULONG_3
    android.support.v8.renderscript.Element mElement_ULONG_4 -> mElement_ULONG_4
    android.support.v8.renderscript.Element mElement_LONG_2 -> mElement_LONG_2
    android.support.v8.renderscript.Element mElement_LONG_3 -> mElement_LONG_3
    android.support.v8.renderscript.Element mElement_LONG_4 -> mElement_LONG_4
    android.support.v8.renderscript.Element mElement_MATRIX_4X4 -> mElement_MATRIX_4X4
    android.support.v8.renderscript.Element mElement_MATRIX_3X3 -> mElement_MATRIX_3X3
    android.support.v8.renderscript.Element mElement_MATRIX_2X2 -> mElement_MATRIX_2X2
    android.support.v8.renderscript.Sampler mSampler_CLAMP_NEAREST -> mSampler_CLAMP_NEAREST
    android.support.v8.renderscript.Sampler mSampler_CLAMP_LINEAR -> mSampler_CLAMP_LINEAR
    android.support.v8.renderscript.Sampler mSampler_CLAMP_LINEAR_MIP_LINEAR -> mSampler_CLAMP_LINEAR_MIP_LINEAR
    android.support.v8.renderscript.Sampler mSampler_WRAP_NEAREST -> mSampler_WRAP_NEAREST
    android.support.v8.renderscript.Sampler mSampler_WRAP_LINEAR -> mSampler_WRAP_LINEAR
    android.support.v8.renderscript.Sampler mSampler_WRAP_LINEAR_MIP_LINEAR -> mSampler_WRAP_LINEAR_MIP_LINEAR
    android.support.v8.renderscript.Sampler mSampler_MIRRORED_REPEAT_NEAREST -> mSampler_MIRRORED_REPEAT_NEAREST
    android.support.v8.renderscript.Sampler mSampler_MIRRORED_REPEAT_LINEAR -> mSampler_MIRRORED_REPEAT_LINEAR
    android.support.v8.renderscript.Sampler mSampler_MIRRORED_REPEAT_LINEAR_MIP_LINEAR -> mSampler_MIRRORED_REPEAT_LINEAR_MIP_LINEAR
    android.support.v8.renderscript.RenderScript$RSMessageHandler mMessageCallback -> mMessageCallback
    android.support.v8.renderscript.RenderScript$RSErrorHandler mErrorCallback -> mErrorCallback
    int nDeviceCreate() -> nDeviceCreate
    void nDeviceDestroy(int) -> nDeviceDestroy
    void nDeviceSetConfig(int,int,int) -> nDeviceSetConfig
    int nContextGetUserMessage(int,int[]) -> nContextGetUserMessage
    java.lang.String nContextGetErrorMessage(int) -> nContextGetErrorMessage
    int nContextPeekMessage(int,int[]) -> nContextPeekMessage
    void nContextInitToClient(int) -> nContextInitToClient
    void nContextDeinitToClient(int) -> nContextDeinitToClient
    boolean shouldThunk() -> shouldThunk
    void setupDiskCache(java.io.File) -> setupDiskCache
    int rsnContextCreate(int,int,int,int) -> rsnContextCreate
    int nContextCreate(int,int,int,int) -> nContextCreate
    void rsnContextDestroy(int) -> rsnContextDestroy
    void nContextDestroy() -> nContextDestroy
    void rsnContextSetPriority(int,int) -> rsnContextSetPriority
    void nContextSetPriority(int) -> nContextSetPriority
    void rsnContextDump(int,int) -> rsnContextDump
    void nContextDump(int) -> nContextDump
    void rsnContextFinish(int) -> rsnContextFinish
    void nContextFinish() -> nContextFinish
    void rsnContextSendMessage(int,int,int[]) -> rsnContextSendMessage
    void nContextSendMessage(int,int[]) -> nContextSendMessage
    void rsnObjDestroy(int,int) -> rsnObjDestroy
    void nObjDestroy(int) -> nObjDestroy
    int rsnElementCreate(int,int,int,boolean,int) -> rsnElementCreate
    int nElementCreate(int,int,boolean,int) -> nElementCreate
    int rsnElementCreate2(int,int[],java.lang.String[],int[]) -> rsnElementCreate2
    int nElementCreate2(int[],java.lang.String[],int[]) -> nElementCreate2
    void rsnElementGetNativeData(int,int,int[]) -> rsnElementGetNativeData
    void nElementGetNativeData(int,int[]) -> nElementGetNativeData
    void rsnElementGetSubElements(int,int,int[],java.lang.String[],int[]) -> rsnElementGetSubElements
    void nElementGetSubElements(int,int[],java.lang.String[],int[]) -> nElementGetSubElements
    int rsnTypeCreate(int,int,int,int,int,boolean,boolean,int) -> rsnTypeCreate
    int nTypeCreate(int,int,int,int,boolean,boolean,int) -> nTypeCreate
    void rsnTypeGetNativeData(int,int,int[]) -> rsnTypeGetNativeData
    void nTypeGetNativeData(int,int[]) -> nTypeGetNativeData
    int rsnAllocationCreateTyped(int,int,int,int,int) -> rsnAllocationCreateTyped
    int nAllocationCreateTyped(int,int,int,int) -> nAllocationCreateTyped
    int rsnAllocationCreateFromBitmap(int,int,int,android.graphics.Bitmap,int) -> rsnAllocationCreateFromBitmap
    int nAllocationCreateFromBitmap(int,int,android.graphics.Bitmap,int) -> nAllocationCreateFromBitmap
    int rsnAllocationCreateBitmapBackedAllocation(int,int,int,android.graphics.Bitmap,int) -> rsnAllocationCreateBitmapBackedAllocation
    int nAllocationCreateBitmapBackedAllocation(int,int,android.graphics.Bitmap,int) -> nAllocationCreateBitmapBackedAllocation
    int rsnAllocationCubeCreateFromBitmap(int,int,int,android.graphics.Bitmap,int) -> rsnAllocationCubeCreateFromBitmap
    int nAllocationCubeCreateFromBitmap(int,int,android.graphics.Bitmap,int) -> nAllocationCubeCreateFromBitmap
    int rsnAllocationCreateBitmapRef(int,int,android.graphics.Bitmap) -> rsnAllocationCreateBitmapRef
    int nAllocationCreateBitmapRef(int,android.graphics.Bitmap) -> nAllocationCreateBitmapRef
    int rsnAllocationCreateFromAssetStream(int,int,int,int) -> rsnAllocationCreateFromAssetStream
    int nAllocationCreateFromAssetStream(int,int,int) -> nAllocationCreateFromAssetStream
    void rsnAllocationCopyToBitmap(int,int,android.graphics.Bitmap) -> rsnAllocationCopyToBitmap
    void nAllocationCopyToBitmap(int,android.graphics.Bitmap) -> nAllocationCopyToBitmap
    void rsnAllocationSyncAll(int,int,int) -> rsnAllocationSyncAll
    void nAllocationSyncAll(int,int) -> nAllocationSyncAll
    void rsnAllocationIoSend(int,int) -> rsnAllocationIoSend
    void nAllocationIoSend(int) -> nAllocationIoSend
    void rsnAllocationIoReceive(int,int) -> rsnAllocationIoReceive
    void nAllocationIoReceive(int) -> nAllocationIoReceive
    void rsnAllocationGenerateMipmaps(int,int) -> rsnAllocationGenerateMipmaps
    void nAllocationGenerateMipmaps(int) -> nAllocationGenerateMipmaps
    void rsnAllocationCopyFromBitmap(int,int,android.graphics.Bitmap) -> rsnAllocationCopyFromBitmap
    void nAllocationCopyFromBitmap(int,android.graphics.Bitmap) -> nAllocationCopyFromBitmap
    void rsnAllocationData1D(int,int,int,int,int,int[],int) -> rsnAllocationData1D
    void nAllocationData1D(int,int,int,int,int[],int) -> nAllocationData1D
    void rsnAllocationData1D(int,int,int,int,int,short[],int) -> rsnAllocationData1D
    void nAllocationData1D(int,int,int,int,short[],int) -> nAllocationData1D
    void rsnAllocationData1D(int,int,int,int,int,byte[],int) -> rsnAllocationData1D
    void nAllocationData1D(int,int,int,int,byte[],int) -> nAllocationData1D
    void rsnAllocationData1D(int,int,int,int,int,float[],int) -> rsnAllocationData1D
    void nAllocationData1D(int,int,int,int,float[],int) -> nAllocationData1D
    void rsnAllocationElementData1D(int,int,int,int,int,byte[],int) -> rsnAllocationElementData1D
    void nAllocationElementData1D(int,int,int,int,byte[],int) -> nAllocationElementData1D
    void rsnAllocationData2D(int,int,int,int,int,int,int,int,int,int,int,int,int) -> rsnAllocationData2D
    void nAllocationData2D(int,int,int,int,int,int,int,int,int,int,int,int) -> nAllocationData2D
    void rsnAllocationData2D(int,int,int,int,int,int,int,int,byte[],int) -> rsnAllocationData2D
    void nAllocationData2D(int,int,int,int,int,int,int,byte[],int) -> nAllocationData2D
    void rsnAllocationData2D(int,int,int,int,int,int,int,int,short[],int) -> rsnAllocationData2D
    void nAllocationData2D(int,int,int,int,int,int,int,short[],int) -> nAllocationData2D
    void rsnAllocationData2D(int,int,int,int,int,int,int,int,int[],int) -> rsnAllocationData2D
    void nAllocationData2D(int,int,int,int,int,int,int,int[],int) -> nAllocationData2D
    void rsnAllocationData2D(int,int,int,int,int,int,int,int,float[],int) -> rsnAllocationData2D
    void nAllocationData2D(int,int,int,int,int,int,int,float[],int) -> nAllocationData2D
    void rsnAllocationData2D(int,int,int,int,int,int,android.graphics.Bitmap) -> rsnAllocationData2D
    void nAllocationData2D(int,int,int,int,int,android.graphics.Bitmap) -> nAllocationData2D
    void rsnAllocationData3D(int,int,int,int,int,int,int,int,int,int,int,int,int,int) -> rsnAllocationData3D
    void nAllocationData3D(int,int,int,int,int,int,int,int,int,int,int,int,int) -> nAllocationData3D
    void rsnAllocationData3D(int,int,int,int,int,int,int,int,int,byte[],int) -> rsnAllocationData3D
    void nAllocationData3D(int,int,int,int,int,int,int,int,byte[],int) -> nAllocationData3D
    void rsnAllocationData3D(int,int,int,int,int,int,int,int,int,short[],int) -> rsnAllocationData3D
    void nAllocationData3D(int,int,int,int,int,int,int,int,short[],int) -> nAllocationData3D
    void rsnAllocationData3D(int,int,int,int,int,int,int,int,int,int[],int) -> rsnAllocationData3D
    void nAllocationData3D(int,int,int,int,int,int,int,int,int[],int) -> nAllocationData3D
    void rsnAllocationData3D(int,int,int,int,int,int,int,int,int,float[],int) -> rsnAllocationData3D
    void nAllocationData3D(int,int,int,int,int,int,int,int,float[],int) -> nAllocationData3D
    void rsnAllocationRead(int,int,byte[]) -> rsnAllocationRead
    void nAllocationRead(int,byte[]) -> nAllocationRead
    void rsnAllocationRead(int,int,short[]) -> rsnAllocationRead
    void nAllocationRead(int,short[]) -> nAllocationRead
    void rsnAllocationRead(int,int,int[]) -> rsnAllocationRead
    void nAllocationRead(int,int[]) -> nAllocationRead
    void rsnAllocationRead(int,int,float[]) -> rsnAllocationRead
    void nAllocationRead(int,float[]) -> nAllocationRead
    int rsnAllocationGetType(int,int) -> rsnAllocationGetType
    int nAllocationGetType(int) -> nAllocationGetType
    void rsnAllocationResize1D(int,int,int) -> rsnAllocationResize1D
    void nAllocationResize1D(int,int) -> nAllocationResize1D
    void rsnAllocationResize2D(int,int,int,int) -> rsnAllocationResize2D
    void nAllocationResize2D(int,int,int) -> nAllocationResize2D
    void rsnScriptBindAllocation(int,int,int,int) -> rsnScriptBindAllocation
    void nScriptBindAllocation(int,int,int) -> nScriptBindAllocation
    void rsnScriptSetTimeZone(int,int,byte[]) -> rsnScriptSetTimeZone
    void nScriptSetTimeZone(int,byte[]) -> nScriptSetTimeZone
    void rsnScriptInvoke(int,int,int) -> rsnScriptInvoke
    void nScriptInvoke(int,int) -> nScriptInvoke
    void rsnScriptForEach(int,int,int,int,int,byte[]) -> rsnScriptForEach
    void rsnScriptForEach(int,int,int,int,int) -> rsnScriptForEach
    void rsnScriptForEachClipped(int,int,int,int,int,byte[],int,int,int,int,int,int) -> rsnScriptForEachClipped
    void rsnScriptForEachClipped(int,int,int,int,int,int,int,int,int,int,int) -> rsnScriptForEachClipped
    void nScriptForEach(int,int,int,int,byte[]) -> nScriptForEach
    void nScriptForEachClipped(int,int,int,int,byte[],int,int,int,int,int,int) -> nScriptForEachClipped
    void rsnScriptInvokeV(int,int,int,byte[]) -> rsnScriptInvokeV
    void nScriptInvokeV(int,int,byte[]) -> nScriptInvokeV
    void rsnScriptSetVarI(int,int,int,int) -> rsnScriptSetVarI
    void nScriptSetVarI(int,int,int) -> nScriptSetVarI
    void rsnScriptSetVarJ(int,int,int,long) -> rsnScriptSetVarJ
    void nScriptSetVarJ(int,int,long) -> nScriptSetVarJ
    void rsnScriptSetVarF(int,int,int,float) -> rsnScriptSetVarF
    void nScriptSetVarF(int,int,float) -> nScriptSetVarF
    void rsnScriptSetVarD(int,int,int,double) -> rsnScriptSetVarD
    void nScriptSetVarD(int,int,double) -> nScriptSetVarD
    void rsnScriptSetVarV(int,int,int,byte[]) -> rsnScriptSetVarV
    void nScriptSetVarV(int,int,byte[]) -> nScriptSetVarV
    void rsnScriptSetVarVE(int,int,int,byte[],int,int[]) -> rsnScriptSetVarVE
    void nScriptSetVarVE(int,int,byte[],int,int[]) -> nScriptSetVarVE
    void rsnScriptSetVarObj(int,int,int,int) -> rsnScriptSetVarObj
    void nScriptSetVarObj(int,int,int) -> nScriptSetVarObj
    int rsnScriptCCreate(int,java.lang.String,java.lang.String,byte[],int) -> rsnScriptCCreate
    int nScriptCCreate(java.lang.String,java.lang.String,byte[],int) -> nScriptCCreate
    int rsnScriptIntrinsicCreate(int,int,int) -> rsnScriptIntrinsicCreate
    int nScriptIntrinsicCreate(int,int) -> nScriptIntrinsicCreate
    int rsnScriptKernelIDCreate(int,int,int,int) -> rsnScriptKernelIDCreate
    int nScriptKernelIDCreate(int,int,int) -> nScriptKernelIDCreate
    int rsnScriptFieldIDCreate(int,int,int) -> rsnScriptFieldIDCreate
    int nScriptFieldIDCreate(int,int) -> nScriptFieldIDCreate
    int rsnScriptGroupCreate(int,int[],int[],int[],int[],int[]) -> rsnScriptGroupCreate
    int nScriptGroupCreate(int[],int[],int[],int[],int[]) -> nScriptGroupCreate
    void rsnScriptGroupSetInput(int,int,int,int) -> rsnScriptGroupSetInput
    void nScriptGroupSetInput(int,int,int) -> nScriptGroupSetInput
    void rsnScriptGroupSetOutput(int,int,int,int) -> rsnScriptGroupSetOutput
    void nScriptGroupSetOutput(int,int,int) -> nScriptGroupSetOutput
    void rsnScriptGroupExecute(int,int) -> rsnScriptGroupExecute
    void nScriptGroupExecute(int) -> nScriptGroupExecute
    int rsnSamplerCreate(int,int,int,int,int,int,float) -> rsnSamplerCreate
    int nSamplerCreate(int,int,int,int,int,float) -> nSamplerCreate
    void setMessageHandler(android.support.v8.renderscript.RenderScript$RSMessageHandler) -> setMessageHandler
    android.support.v8.renderscript.RenderScript$RSMessageHandler getMessageHandler() -> getMessageHandler
    void sendMessage(int,int[]) -> sendMessage
    void setErrorHandler(android.support.v8.renderscript.RenderScript$RSErrorHandler) -> setErrorHandler
    android.support.v8.renderscript.RenderScript$RSErrorHandler getErrorHandler() -> getErrorHandler
    void validate() -> validate
    void setPriority(android.support.v8.renderscript.RenderScript$Priority) -> setPriority
    android.content.Context getApplicationContext() -> getApplicationContext
    android.support.v8.renderscript.RenderScript create(android.content.Context,int) -> create
    android.support.v8.renderscript.RenderScript create(android.content.Context,int,android.support.v8.renderscript.RenderScript$ContextType) -> create
    android.support.v8.renderscript.RenderScript create(android.content.Context) -> create
    android.support.v8.renderscript.RenderScript create(android.content.Context,android.support.v8.renderscript.RenderScript$ContextType) -> create
    void contextDump() -> contextDump
    void finish() -> finish
    void destroy() -> destroy
    boolean isAlive() -> isAlive
    int safeID(android.support.v8.renderscript.BaseObj) -> safeID
android.support.v8.renderscript.RenderScript$1 -> android.support.v8.renderscript.RenderScript$1:
    android.support.v8.renderscript.RenderScript this$0 -> this$0
    void run() -> run
android.support.v8.renderscript.RenderScript$2 -> android.support.v8.renderscript.RenderScript$2:
    android.support.v8.renderscript.RenderScript this$0 -> this$0
    void run() -> run
android.support.v8.renderscript.RenderScript$ContextType -> android.support.v8.renderscript.RenderScript$ContextType:
    android.support.v8.renderscript.RenderScript$ContextType NORMAL -> NORMAL
    android.support.v8.renderscript.RenderScript$ContextType DEBUG -> DEBUG
    android.support.v8.renderscript.RenderScript$ContextType PROFILE -> PROFILE
    int mID -> mID
    android.support.v8.renderscript.RenderScript$ContextType[] $VALUES -> $VALUES
    android.support.v8.renderscript.RenderScript$ContextType[] values() -> values
    android.support.v8.renderscript.RenderScript$ContextType valueOf(java.lang.String) -> valueOf
android.support.v8.renderscript.RenderScript$MessageThread -> android.support.v8.renderscript.RenderScript$MessageThread:
    android.support.v8.renderscript.RenderScript mRS -> mRS
    boolean mRun -> mRun
    int[] mAuxData -> mAuxData
    int RS_MESSAGE_TO_CLIENT_NONE -> RS_MESSAGE_TO_CLIENT_NONE
    int RS_MESSAGE_TO_CLIENT_EXCEPTION -> RS_MESSAGE_TO_CLIENT_EXCEPTION
    int RS_MESSAGE_TO_CLIENT_RESIZE -> RS_MESSAGE_TO_CLIENT_RESIZE
    int RS_MESSAGE_TO_CLIENT_ERROR -> RS_MESSAGE_TO_CLIENT_ERROR
    int RS_MESSAGE_TO_CLIENT_USER -> RS_MESSAGE_TO_CLIENT_USER
    int RS_ERROR_FATAL_UNKNOWN -> RS_ERROR_FATAL_UNKNOWN
    void run() -> run
android.support.v8.renderscript.RenderScript$Priority -> android.support.v8.renderscript.RenderScript$Priority:
    android.support.v8.renderscript.RenderScript$Priority LOW -> LOW
    android.support.v8.renderscript.RenderScript$Priority NORMAL -> NORMAL
    int mID -> mID
    android.support.v8.renderscript.RenderScript$Priority[] $VALUES -> $VALUES
    android.support.v8.renderscript.RenderScript$Priority[] values() -> values
    android.support.v8.renderscript.RenderScript$Priority valueOf(java.lang.String) -> valueOf
android.support.v8.renderscript.RenderScript$RSErrorHandler -> android.support.v8.renderscript.RenderScript$RSErrorHandler:
    java.lang.String mErrorMessage -> mErrorMessage
    int mErrorNum -> mErrorNum
    void run() -> run
android.support.v8.renderscript.RenderScript$RSMessageHandler -> android.support.v8.renderscript.RenderScript$RSMessageHandler:
    int[] mData -> mData
    int mID -> mID
    int mLength -> mLength
    void run() -> run
android.support.v8.renderscript.RenderScriptThunker -> android.support.v8.renderscript.RenderScriptThunker:
    android.renderscript.RenderScript mN -> mN
    void validate() -> validate
    void setPriority(android.support.v8.renderscript.RenderScript$Priority) -> setPriority
    android.support.v8.renderscript.RenderScript create(android.content.Context,int) -> create
    void contextDump() -> contextDump
    void finish() -> finish
    void destroy() -> destroy
android.support.v8.renderscript.Sampler -> android.support.v8.renderscript.Sampler:
    android.support.v8.renderscript.Sampler$Value mMin -> mMin
    android.support.v8.renderscript.Sampler$Value mMag -> mMag
    android.support.v8.renderscript.Sampler$Value mWrapS -> mWrapS
    android.support.v8.renderscript.Sampler$Value mWrapT -> mWrapT
    android.support.v8.renderscript.Sampler$Value mWrapR -> mWrapR
    float mAniso -> mAniso
    android.support.v8.renderscript.Sampler$Value getMinification() -> getMinification
    android.support.v8.renderscript.Sampler$Value getMagnification() -> getMagnification
    android.support.v8.renderscript.Sampler$Value getWrapS() -> getWrapS
    android.support.v8.renderscript.Sampler$Value getWrapT() -> getWrapT
    float getAnisotropy() -> getAnisotropy
    android.support.v8.renderscript.Sampler CLAMP_NEAREST(android.support.v8.renderscript.RenderScript) -> CLAMP_NEAREST
    android.support.v8.renderscript.Sampler CLAMP_LINEAR(android.support.v8.renderscript.RenderScript) -> CLAMP_LINEAR
    android.support.v8.renderscript.Sampler CLAMP_LINEAR_MIP_LINEAR(android.support.v8.renderscript.RenderScript) -> CLAMP_LINEAR_MIP_LINEAR
    android.support.v8.renderscript.Sampler WRAP_NEAREST(android.support.v8.renderscript.RenderScript) -> WRAP_NEAREST
    android.support.v8.renderscript.Sampler WRAP_LINEAR(android.support.v8.renderscript.RenderScript) -> WRAP_LINEAR
    android.support.v8.renderscript.Sampler WRAP_LINEAR_MIP_LINEAR(android.support.v8.renderscript.RenderScript) -> WRAP_LINEAR_MIP_LINEAR
    android.support.v8.renderscript.Sampler MIRRORED_REPEAT_NEAREST(android.support.v8.renderscript.RenderScript) -> MIRRORED_REPEAT_NEAREST
    android.support.v8.renderscript.Sampler MIRRORED_REPEAT_LINEAR(android.support.v8.renderscript.RenderScript) -> MIRRORED_REPEAT_LINEAR
android.support.v8.renderscript.Sampler$Builder -> android.support.v8.renderscript.Sampler$Builder:
    android.support.v8.renderscript.RenderScript mRS -> mRS
    android.support.v8.renderscript.Sampler$Value mMin -> mMin
    android.support.v8.renderscript.Sampler$Value mMag -> mMag
    android.support.v8.renderscript.Sampler$Value mWrapS -> mWrapS
    android.support.v8.renderscript.Sampler$Value mWrapT -> mWrapT
    android.support.v8.renderscript.Sampler$Value mWrapR -> mWrapR
    float mAniso -> mAniso
    void setMinification(android.support.v8.renderscript.Sampler$Value) -> setMinification
    void setMagnification(android.support.v8.renderscript.Sampler$Value) -> setMagnification
    void setWrapS(android.support.v8.renderscript.Sampler$Value) -> setWrapS
    void setWrapT(android.support.v8.renderscript.Sampler$Value) -> setWrapT
    void setAnisotropy(float) -> setAnisotropy
    android.support.v8.renderscript.Sampler create() -> create
android.support.v8.renderscript.Sampler$Value -> android.support.v8.renderscript.Sampler$Value:
    android.support.v8.renderscript.Sampler$Value NEAREST -> NEAREST
    android.support.v8.renderscript.Sampler$Value LINEAR -> LINEAR
    android.support.v8.renderscript.Sampler$Value LINEAR_MIP_LINEAR -> LINEAR_MIP_LINEAR
    android.support.v8.renderscript.Sampler$Value LINEAR_MIP_NEAREST -> LINEAR_MIP_NEAREST
    android.support.v8.renderscript.Sampler$Value WRAP -> WRAP
    android.support.v8.renderscript.Sampler$Value CLAMP -> CLAMP
    android.support.v8.renderscript.Sampler$Value MIRRORED_REPEAT -> MIRRORED_REPEAT
    int mID -> mID
    android.support.v8.renderscript.Sampler$Value[] $VALUES -> $VALUES
    android.support.v8.renderscript.Sampler$Value[] values() -> values
    android.support.v8.renderscript.Sampler$Value valueOf(java.lang.String) -> valueOf
android.support.v8.renderscript.SamplerThunker -> android.support.v8.renderscript.SamplerThunker:
    android.renderscript.Sampler mN -> mN
    android.renderscript.BaseObj getNObj() -> getNObj
    android.renderscript.Sampler$Value convertValue(android.support.v8.renderscript.Sampler$Value) -> convertValue
android.support.v8.renderscript.SamplerThunker$1 -> android.support.v8.renderscript.SamplerThunker$1:
    int[] $SwitchMap$android$support$v8$renderscript$Sampler$Value -> $SwitchMap$android$support$v8$renderscript$Sampler$Value
android.support.v8.renderscript.SamplerThunker$Builder -> android.support.v8.renderscript.SamplerThunker$Builder:
    android.support.v8.renderscript.RenderScriptThunker mRS -> mRS
    android.support.v8.renderscript.Sampler$Value mMin -> mMin
    android.support.v8.renderscript.Sampler$Value mMag -> mMag
    android.support.v8.renderscript.Sampler$Value mWrapS -> mWrapS
    android.support.v8.renderscript.Sampler$Value mWrapT -> mWrapT
    android.support.v8.renderscript.Sampler$Value mWrapR -> mWrapR
    float mAniso -> mAniso
    void setMinification(android.support.v8.renderscript.Sampler$Value) -> setMinification
    void setMagnification(android.support.v8.renderscript.Sampler$Value) -> setMagnification
    void setWrapS(android.support.v8.renderscript.Sampler$Value) -> setWrapS
    void setWrapT(android.support.v8.renderscript.Sampler$Value) -> setWrapT
    void setAnisotropy(float) -> setAnisotropy
    android.support.v8.renderscript.Sampler create() -> create
android.support.v8.renderscript.Script -> android.support.v8.renderscript.Script:
    android.support.v8.renderscript.ScriptCThunker mT -> mT
    android.util.SparseArray mKIDs -> mKIDs
    android.util.SparseArray mFIDs -> mFIDs
    android.renderscript.Script getNObj() -> getNObj
    android.support.v8.renderscript.Script$KernelID createKernelID(int,int,android.support.v8.renderscript.Element,android.support.v8.renderscript.Element) -> createKernelID
    android.support.v8.renderscript.Script$FieldID createFieldID(int,android.support.v8.renderscript.Element) -> createFieldID
    void invoke(int) -> invoke
    void invoke(int,android.support.v8.renderscript.FieldPacker) -> invoke
    void bindAllocation(android.support.v8.renderscript.Allocation,int) -> bindAllocation
    void setTimeZone(java.lang.String) -> setTimeZone
    void forEach(int,android.support.v8.renderscript.Allocation,android.support.v8.renderscript.Allocation,android.support.v8.renderscript.FieldPacker) -> forEach
    void forEach(int,android.support.v8.renderscript.Allocation,android.support.v8.renderscript.Allocation,android.support.v8.renderscript.FieldPacker,android.support.v8.renderscript.Script$LaunchOptions) -> forEach
    void setVar(int,float) -> setVar
    void setVar(int,double) -> setVar
    void setVar(int,int) -> setVar
    void setVar(int,long) -> setVar
    void setVar(int,boolean) -> setVar
    void setVar(int,android.support.v8.renderscript.BaseObj) -> setVar
    void setVar(int,android.support.v8.renderscript.FieldPacker) -> setVar
    void setVar(int,android.support.v8.renderscript.FieldPacker,android.support.v8.renderscript.Element,int[]) -> setVar
    android.renderscript.BaseObj getNObj() -> getNObj
android.support.v8.renderscript.Script$Builder -> android.support.v8.renderscript.Script$Builder:
    android.support.v8.renderscript.RenderScript mRS -> mRS
android.support.v8.renderscript.Script$FieldBase -> android.support.v8.renderscript.Script$FieldBase:
    android.support.v8.renderscript.Element mElement -> mElement
    android.support.v8.renderscript.Allocation mAllocation -> mAllocation
    void init(android.support.v8.renderscript.RenderScript,int) -> init
    void init(android.support.v8.renderscript.RenderScript,int,int) -> init
    android.support.v8.renderscript.Element getElement() -> getElement
    android.support.v8.renderscript.Type getType() -> getType
    android.support.v8.renderscript.Allocation getAllocation() -> getAllocation
    void updateAllocation() -> updateAllocation
android.support.v8.renderscript.Script$FieldID -> android.support.v8.renderscript.Script$FieldID:
    android.renderscript.Script$FieldID mN -> mN
    android.support.v8.renderscript.Script mScript -> mScript
    int mSlot -> mSlot
android.support.v8.renderscript.Script$KernelID -> android.support.v8.renderscript.Script$KernelID:
    android.renderscript.Script$KernelID mN -> mN
    android.support.v8.renderscript.Script mScript -> mScript
    int mSlot -> mSlot
    int mSig -> mSig
android.support.v8.renderscript.Script$LaunchOptions -> android.support.v8.renderscript.Script$LaunchOptions:
    int xstart -> xstart
    int ystart -> ystart
    int xend -> xend
    int yend -> yend
    int zstart -> zstart
    int zend -> zend
    int strategy -> strategy
    android.support.v8.renderscript.Script$LaunchOptions setX(int,int) -> setX
    android.support.v8.renderscript.Script$LaunchOptions setY(int,int) -> setY
    android.support.v8.renderscript.Script$LaunchOptions setZ(int,int) -> setZ
    int getXStart() -> getXStart
    int getXEnd() -> getXEnd
    int getYStart() -> getYStart
    int getYEnd() -> getYEnd
    int getZStart() -> getZStart
    int getZEnd() -> getZEnd
    int access$000(android.support.v8.renderscript.Script$LaunchOptions) -> access$000
    int access$100(android.support.v8.renderscript.Script$LaunchOptions) -> access$100
    int access$200(android.support.v8.renderscript.Script$LaunchOptions) -> access$200
    int access$300(android.support.v8.renderscript.Script$LaunchOptions) -> access$300
    int access$400(android.support.v8.renderscript.Script$LaunchOptions) -> access$400
    int access$500(android.support.v8.renderscript.Script$LaunchOptions) -> access$500
android.support.v8.renderscript.ScriptC -> android.support.v8.renderscript.ScriptC:
    java.lang.String TAG -> TAG
    int internalCreate(android.support.v8.renderscript.RenderScript,android.content.res.Resources,int) -> internalCreate
android.support.v8.renderscript.ScriptCThunker -> android.support.v8.renderscript.ScriptCThunker:
    java.lang.String TAG -> TAG
    android.renderscript.Script$KernelID thunkCreateKernelID(int,int,android.support.v8.renderscript.Element,android.support.v8.renderscript.Element) -> thunkCreateKernelID
    void thunkInvoke(int) -> thunkInvoke
    void thunkBindAllocation(android.support.v8.renderscript.Allocation,int) -> thunkBindAllocation
    void thunkSetTimeZone(java.lang.String) -> thunkSetTimeZone
    void thunkInvoke(int,android.support.v8.renderscript.FieldPacker) -> thunkInvoke
    void thunkForEach(int,android.support.v8.renderscript.Allocation,android.support.v8.renderscript.Allocation,android.support.v8.renderscript.FieldPacker) -> thunkForEach
    void thunkForEach(int,android.support.v8.renderscript.Allocation,android.support.v8.renderscript.Allocation,android.support.v8.renderscript.FieldPacker,android.support.v8.renderscript.Script$LaunchOptions) -> thunkForEach
    void thunkSetVar(int,float) -> thunkSetVar
    void thunkSetVar(int,double) -> thunkSetVar
    void thunkSetVar(int,int) -> thunkSetVar
    void thunkSetVar(int,long) -> thunkSetVar
    void thunkSetVar(int,boolean) -> thunkSetVar
    void thunkSetVar(int,android.support.v8.renderscript.BaseObj) -> thunkSetVar
    void thunkSetVar(int,android.support.v8.renderscript.FieldPacker) -> thunkSetVar
    void thunkSetVar(int,android.support.v8.renderscript.FieldPacker,android.support.v8.renderscript.Element,int[]) -> thunkSetVar
    android.renderscript.Script$FieldID thunkCreateFieldID(int,android.support.v8.renderscript.Element) -> thunkCreateFieldID
android.support.v8.renderscript.ScriptGroup -> android.support.v8.renderscript.ScriptGroup:
    android.support.v8.renderscript.ScriptGroup$IO[] mOutputs -> mOutputs
    android.support.v8.renderscript.ScriptGroup$IO[] mInputs -> mInputs
    void setInput(android.support.v8.renderscript.Script$KernelID,android.support.v8.renderscript.Allocation) -> setInput
    void setOutput(android.support.v8.renderscript.Script$KernelID,android.support.v8.renderscript.Allocation) -> setOutput
    void execute() -> execute
android.support.v8.renderscript.ScriptGroup$Builder -> android.support.v8.renderscript.ScriptGroup$Builder:
    android.support.v8.renderscript.RenderScript mRS -> mRS
    java.util.ArrayList mNodes -> mNodes
    java.util.ArrayList mLines -> mLines
    int mKernelCount -> mKernelCount
    android.support.v8.renderscript.ScriptGroupThunker$Builder mT -> mT
    void validateCycle(android.support.v8.renderscript.ScriptGroup$Node,android.support.v8.renderscript.ScriptGroup$Node) -> validateCycle
    void mergeDAGs(int,int) -> mergeDAGs
    void validateDAGRecurse(android.support.v8.renderscript.ScriptGroup$Node,int) -> validateDAGRecurse
    void validateDAG() -> validateDAG
    android.support.v8.renderscript.ScriptGroup$Node findNode(android.support.v8.renderscript.Script) -> findNode
    android.support.v8.renderscript.ScriptGroup$Node findNode(android.support.v8.renderscript.Script$KernelID) -> findNode
    android.support.v8.renderscript.ScriptGroup$Builder addKernel(android.support.v8.renderscript.Script$KernelID) -> addKernel
    android.support.v8.renderscript.ScriptGroup$Builder addConnection(android.support.v8.renderscript.Type,android.support.v8.renderscript.Script$KernelID,android.support.v8.renderscript.Script$FieldID) -> addConnection
    android.support.v8.renderscript.ScriptGroup$Builder addConnection(android.support.v8.renderscript.Type,android.support.v8.renderscript.Script$KernelID,android.support.v8.renderscript.Script$KernelID) -> addConnection
    android.support.v8.renderscript.ScriptGroup create() -> create
android.support.v8.renderscript.ScriptGroup$ConnectLine -> android.support.v8.renderscript.ScriptGroup$ConnectLine:
    android.support.v8.renderscript.Script$FieldID mToF -> mToF
    android.support.v8.renderscript.Script$KernelID mToK -> mToK
    android.support.v8.renderscript.Script$KernelID mFrom -> mFrom
    android.support.v8.renderscript.Type mAllocationType -> mAllocationType
android.support.v8.renderscript.ScriptGroup$IO -> android.support.v8.renderscript.ScriptGroup$IO:
    android.support.v8.renderscript.Script$KernelID mKID -> mKID
    android.support.v8.renderscript.Allocation mAllocation -> mAllocation
android.support.v8.renderscript.ScriptGroup$Node -> android.support.v8.renderscript.ScriptGroup$Node:
    android.support.v8.renderscript.Script mScript -> mScript
    java.util.ArrayList mKernels -> mKernels
    java.util.ArrayList mInputs -> mInputs
    java.util.ArrayList mOutputs -> mOutputs
    int dagNumber -> dagNumber
    android.support.v8.renderscript.ScriptGroup$Node mNext -> mNext
android.support.v8.renderscript.ScriptGroupThunker -> android.support.v8.renderscript.ScriptGroupThunker:
    android.renderscript.ScriptGroup mN -> mN
    android.renderscript.ScriptGroup getNObj() -> getNObj
    void setInput(android.support.v8.renderscript.Script$KernelID,android.support.v8.renderscript.Allocation) -> setInput
    void setOutput(android.support.v8.renderscript.Script$KernelID,android.support.v8.renderscript.Allocation) -> setOutput
    void execute() -> execute
    android.renderscript.BaseObj getNObj() -> getNObj
android.support.v8.renderscript.ScriptGroupThunker$Builder -> android.support.v8.renderscript.ScriptGroupThunker$Builder:
    android.renderscript.ScriptGroup$Builder bN -> bN
    android.support.v8.renderscript.RenderScript mRS -> mRS
    android.support.v8.renderscript.ScriptGroupThunker$Builder addKernel(android.support.v8.renderscript.Script$KernelID) -> addKernel
    android.support.v8.renderscript.ScriptGroupThunker$Builder addConnection(android.support.v8.renderscript.Type,android.support.v8.renderscript.Script$KernelID,android.support.v8.renderscript.Script$FieldID) -> addConnection
    android.support.v8.renderscript.ScriptGroupThunker$Builder addConnection(android.support.v8.renderscript.Type,android.support.v8.renderscript.Script$KernelID,android.support.v8.renderscript.Script$KernelID) -> addConnection
    android.support.v8.renderscript.ScriptGroupThunker create() -> create
android.support.v8.renderscript.ScriptIntrinsic -> android.support.v8.renderscript.ScriptIntrinsic:
android.support.v8.renderscript.ScriptIntrinsic3DLUT -> android.support.v8.renderscript.ScriptIntrinsic3DLUT:
    android.support.v8.renderscript.Allocation mLUT -> mLUT
    android.support.v8.renderscript.Element mElement -> mElement
    android.support.v8.renderscript.ScriptIntrinsic3DLUT create(android.support.v8.renderscript.RenderScript,android.support.v8.renderscript.Element) -> create
    void setLUT(android.support.v8.renderscript.Allocation) -> setLUT
    void forEach(android.support.v8.renderscript.Allocation,android.support.v8.renderscript.Allocation) -> forEach
    android.support.v8.renderscript.Script$KernelID getKernelID() -> getKernelID
android.support.v8.renderscript.ScriptIntrinsic3DLUTThunker -> android.support.v8.renderscript.ScriptIntrinsic3DLUTThunker:
    android.renderscript.ScriptIntrinsic3DLUT mN -> mN
    android.renderscript.ScriptIntrinsic3DLUT getNObj() -> getNObj
    android.support.v8.renderscript.ScriptIntrinsic3DLUTThunker create(android.support.v8.renderscript.RenderScript,android.support.v8.renderscript.Element) -> create
    void setLUT(android.support.v8.renderscript.Allocation) -> setLUT
    void forEach(android.support.v8.renderscript.Allocation,android.support.v8.renderscript.Allocation) -> forEach
    android.support.v8.renderscript.Script$KernelID getKernelID() -> getKernelID
    android.renderscript.Script getNObj() -> getNObj
    android.renderscript.BaseObj getNObj() -> getNObj
android.support.v8.renderscript.ScriptIntrinsicBlend -> android.support.v8.renderscript.ScriptIntrinsicBlend:
    android.support.v8.renderscript.ScriptIntrinsicBlend create(android.support.v8.renderscript.RenderScript,android.support.v8.renderscript.Element) -> create
    void blend(int,android.support.v8.renderscript.Allocation,android.support.v8.renderscript.Allocation) -> blend
    void forEachClear(android.support.v8.renderscript.Allocation,android.support.v8.renderscript.Allocation) -> forEachClear
    android.support.v8.renderscript.Script$KernelID getKernelIDClear() -> getKernelIDClear
    void forEachSrc(android.support.v8.renderscript.Allocation,android.support.v8.renderscript.Allocation) -> forEachSrc
    android.support.v8.renderscript.Script$KernelID getKernelIDSrc() -> getKernelIDSrc
    void forEachDst(android.support.v8.renderscript.Allocation,android.support.v8.renderscript.Allocation) -> forEachDst
    android.support.v8.renderscript.Script$KernelID getKernelIDDst() -> getKernelIDDst
    void forEachSrcOver(android.support.v8.renderscript.Allocation,android.support.v8.renderscript.Allocation) -> forEachSrcOver
    android.support.v8.renderscript.Script$KernelID getKernelIDSrcOver() -> getKernelIDSrcOver
    void forEachDstOver(android.support.v8.renderscript.Allocation,android.support.v8.renderscript.Allocation) -> forEachDstOver
    android.support.v8.renderscript.Script$KernelID getKernelIDDstOver() -> getKernelIDDstOver
    void forEachSrcIn(android.support.v8.renderscript.Allocation,android.support.v8.renderscript.Allocation) -> forEachSrcIn
    android.support.v8.renderscript.Script$KernelID getKernelIDSrcIn() -> getKernelIDSrcIn
    void forEachDstIn(android.support.v8.renderscript.Allocation,android.support.v8.renderscript.Allocation) -> forEachDstIn
    android.support.v8.renderscript.Script$KernelID getKernelIDDstIn() -> getKernelIDDstIn
    void forEachSrcOut(android.support.v8.renderscript.Allocation,android.support.v8.renderscript.Allocation) -> forEachSrcOut
    android.support.v8.renderscript.Script$KernelID getKernelIDSrcOut() -> getKernelIDSrcOut
    void forEachDstOut(android.support.v8.renderscript.Allocation,android.support.v8.renderscript.Allocation) -> forEachDstOut
    android.support.v8.renderscript.Script$KernelID getKernelIDDstOut() -> getKernelIDDstOut
    void forEachSrcAtop(android.support.v8.renderscript.Allocation,android.support.v8.renderscript.Allocation) -> forEachSrcAtop
    android.support.v8.renderscript.Script$KernelID getKernelIDSrcAtop() -> getKernelIDSrcAtop
    void forEachDstAtop(android.support.v8.renderscript.Allocation,android.support.v8.renderscript.Allocation) -> forEachDstAtop
    android.support.v8.renderscript.Script$KernelID getKernelIDDstAtop() -> getKernelIDDstAtop
    void forEachXor(android.support.v8.renderscript.Allocation,android.support.v8.renderscript.Allocation) -> forEachXor
    android.support.v8.renderscript.Script$KernelID getKernelIDXor() -> getKernelIDXor
    void forEachMultiply(android.support.v8.renderscript.Allocation,android.support.v8.renderscript.Allocation) -> forEachMultiply
    android.support.v8.renderscript.Script$KernelID getKernelIDMultiply() -> getKernelIDMultiply
    void forEachAdd(android.support.v8.renderscript.Allocation,android.support.v8.renderscript.Allocation) -> forEachAdd
    android.support.v8.renderscript.Script$KernelID getKernelIDAdd() -> getKernelIDAdd
    void forEachSubtract(android.support.v8.renderscript.Allocation,android.support.v8.renderscript.Allocation) -> forEachSubtract
    android.support.v8.renderscript.Script$KernelID getKernelIDSubtract() -> getKernelIDSubtract
android.support.v8.renderscript.ScriptIntrinsicBlendThunker -> android.support.v8.renderscript.ScriptIntrinsicBlendThunker:
    android.renderscript.ScriptIntrinsicBlend mN -> mN
    android.renderscript.ScriptIntrinsicBlend getNObj() -> getNObj
    android.support.v8.renderscript.ScriptIntrinsicBlendThunker create(android.support.v8.renderscript.RenderScript,android.support.v8.renderscript.Element) -> create
    void forEachClear(android.support.v8.renderscript.Allocation,android.support.v8.renderscript.Allocation) -> forEachClear
    android.support.v8.renderscript.Script$KernelID getKernelIDClear() -> getKernelIDClear
    void forEachSrc(android.support.v8.renderscript.Allocation,android.support.v8.renderscript.Allocation) -> forEachSrc
    android.support.v8.renderscript.Script$KernelID getKernelIDSrc() -> getKernelIDSrc
    void forEachDst(android.support.v8.renderscript.Allocation,android.support.v8.renderscript.Allocation) -> forEachDst
    android.support.v8.renderscript.Script$KernelID getKernelIDDst() -> getKernelIDDst
    void forEachSrcOver(android.support.v8.renderscript.Allocation,android.support.v8.renderscript.Allocation) -> forEachSrcOver
    android.support.v8.renderscript.Script$KernelID getKernelIDSrcOver() -> getKernelIDSrcOver
    void forEachDstOver(android.support.v8.renderscript.Allocation,android.support.v8.renderscript.Allocation) -> forEachDstOver
    android.support.v8.renderscript.Script$KernelID getKernelIDDstOver() -> getKernelIDDstOver
    void forEachSrcIn(android.support.v8.renderscript.Allocation,android.support.v8.renderscript.Allocation) -> forEachSrcIn
    android.support.v8.renderscript.Script$KernelID getKernelIDSrcIn() -> getKernelIDSrcIn
    void forEachDstIn(android.support.v8.renderscript.Allocation,android.support.v8.renderscript.Allocation) -> forEachDstIn
    android.support.v8.renderscript.Script$KernelID getKernelIDDstIn() -> getKernelIDDstIn
    void forEachSrcOut(android.support.v8.renderscript.Allocation,android.support.v8.renderscript.Allocation) -> forEachSrcOut
    android.support.v8.renderscript.Script$KernelID getKernelIDSrcOut() -> getKernelIDSrcOut
    void forEachDstOut(android.support.v8.renderscript.Allocation,android.support.v8.renderscript.Allocation) -> forEachDstOut
    android.support.v8.renderscript.Script$KernelID getKernelIDDstOut() -> getKernelIDDstOut
    void forEachSrcAtop(android.support.v8.renderscript.Allocation,android.support.v8.renderscript.Allocation) -> forEachSrcAtop
    android.support.v8.renderscript.Script$KernelID getKernelIDSrcAtop() -> getKernelIDSrcAtop
    void forEachDstAtop(android.support.v8.renderscript.Allocation,android.support.v8.renderscript.Allocation) -> forEachDstAtop
    android.support.v8.renderscript.Script$KernelID getKernelIDDstAtop() -> getKernelIDDstAtop
    void forEachXor(android.support.v8.renderscript.Allocation,android.support.v8.renderscript.Allocation) -> forEachXor
    android.support.v8.renderscript.Script$KernelID getKernelIDXor() -> getKernelIDXor
    void forEachMultiply(android.support.v8.renderscript.Allocation,android.support.v8.renderscript.Allocation) -> forEachMultiply
    android.support.v8.renderscript.Script$KernelID getKernelIDMultiply() -> getKernelIDMultiply
    void forEachAdd(android.support.v8.renderscript.Allocation,android.support.v8.renderscript.Allocation) -> forEachAdd
    android.support.v8.renderscript.Script$KernelID getKernelIDAdd() -> getKernelIDAdd
    void forEachSubtract(android.support.v8.renderscript.Allocation,android.support.v8.renderscript.Allocation) -> forEachSubtract
    android.support.v8.renderscript.Script$KernelID getKernelIDSubtract() -> getKernelIDSubtract
    android.renderscript.Script getNObj() -> getNObj
    android.renderscript.BaseObj getNObj() -> getNObj
android.support.v8.renderscript.ScriptIntrinsicBlur -> android.support.v8.renderscript.ScriptIntrinsicBlur:
    float[] mValues -> mValues
    android.support.v8.renderscript.Allocation mInput -> mInput
    android.support.v8.renderscript.ScriptIntrinsicBlur create(android.support.v8.renderscript.RenderScript,android.support.v8.renderscript.Element) -> create
    void setInput(android.support.v8.renderscript.Allocation) -> setInput
    void setRadius(float) -> setRadius
    void forEach(android.support.v8.renderscript.Allocation) -> forEach
    android.support.v8.renderscript.Script$KernelID getKernelID() -> getKernelID
    android.support.v8.renderscript.Script$FieldID getFieldID_Input() -> getFieldID_Input
android.support.v8.renderscript.ScriptIntrinsicBlurThunker -> android.support.v8.renderscript.ScriptIntrinsicBlurThunker:
    android.renderscript.ScriptIntrinsicBlur mN -> mN
    android.renderscript.ScriptIntrinsicBlur getNObj() -> getNObj
    android.support.v8.renderscript.ScriptIntrinsicBlurThunker create(android.support.v8.renderscript.RenderScript,android.support.v8.renderscript.Element) -> create
    void setInput(android.support.v8.renderscript.Allocation) -> setInput
    void setRadius(float) -> setRadius
    void forEach(android.support.v8.renderscript.Allocation) -> forEach
    android.support.v8.renderscript.Script$KernelID getKernelID() -> getKernelID
    android.support.v8.renderscript.Script$FieldID getFieldID_Input() -> getFieldID_Input
    android.renderscript.Script getNObj() -> getNObj
    android.renderscript.BaseObj getNObj() -> getNObj
android.support.v8.renderscript.ScriptIntrinsicColorMatrix -> android.support.v8.renderscript.ScriptIntrinsicColorMatrix:
    android.support.v8.renderscript.Matrix4f mMatrix -> mMatrix
    android.support.v8.renderscript.Allocation mInput -> mInput
    android.support.v8.renderscript.ScriptIntrinsicColorMatrix create(android.support.v8.renderscript.RenderScript,android.support.v8.renderscript.Element) -> create
    void setMatrix() -> setMatrix
    void setColorMatrix(android.support.v8.renderscript.Matrix4f) -> setColorMatrix
    void setColorMatrix(android.support.v8.renderscript.Matrix3f) -> setColorMatrix
    void setGreyscale() -> setGreyscale
    void setYUVtoRGB() -> setYUVtoRGB
    void setRGBtoYUV() -> setRGBtoYUV
    void forEach(android.support.v8.renderscript.Allocation,android.support.v8.renderscript.Allocation) -> forEach
    android.support.v8.renderscript.Script$KernelID getKernelID() -> getKernelID
android.support.v8.renderscript.ScriptIntrinsicColorMatrixThunker -> android.support.v8.renderscript.ScriptIntrinsicColorMatrixThunker:
    android.renderscript.ScriptIntrinsicColorMatrix mN -> mN
    android.renderscript.ScriptIntrinsicColorMatrix getNObj() -> getNObj
    android.support.v8.renderscript.ScriptIntrinsicColorMatrixThunker create(android.support.v8.renderscript.RenderScript,android.support.v8.renderscript.Element) -> create
    void setColorMatrix(android.support.v8.renderscript.Matrix4f) -> setColorMatrix
    void setColorMatrix(android.support.v8.renderscript.Matrix3f) -> setColorMatrix
    void setGreyscale() -> setGreyscale
    void setYUVtoRGB() -> setYUVtoRGB
    void setRGBtoYUV() -> setRGBtoYUV
    void forEach(android.support.v8.renderscript.Allocation,android.support.v8.renderscript.Allocation) -> forEach
    android.support.v8.renderscript.Script$KernelID getKernelID() -> getKernelID
    android.renderscript.Script getNObj() -> getNObj
    android.renderscript.BaseObj getNObj() -> getNObj
android.support.v8.renderscript.ScriptIntrinsicConvolve3x3 -> android.support.v8.renderscript.ScriptIntrinsicConvolve3x3:
    float[] mValues -> mValues
    android.support.v8.renderscript.Allocation mInput -> mInput
    android.support.v8.renderscript.ScriptIntrinsicConvolve3x3 create(android.support.v8.renderscript.RenderScript,android.support.v8.renderscript.Element) -> create
    void setInput(android.support.v8.renderscript.Allocation) -> setInput
    void setCoefficients(float[]) -> setCoefficients
    void forEach(android.support.v8.renderscript.Allocation) -> forEach
    android.support.v8.renderscript.Script$KernelID getKernelID() -> getKernelID
    android.support.v8.renderscript.Script$FieldID getFieldID_Input() -> getFieldID_Input
android.support.v8.renderscript.ScriptIntrinsicConvolve3x3Thunker -> android.support.v8.renderscript.ScriptIntrinsicConvolve3x3Thunker:
    android.renderscript.ScriptIntrinsicConvolve3x3 mN -> mN
    android.renderscript.ScriptIntrinsicConvolve3x3 getNObj() -> getNObj
    android.support.v8.renderscript.ScriptIntrinsicConvolve3x3Thunker create(android.support.v8.renderscript.RenderScript,android.support.v8.renderscript.Element) -> create
    void setInput(android.support.v8.renderscript.Allocation) -> setInput
    void setCoefficients(float[]) -> setCoefficients
    void forEach(android.support.v8.renderscript.Allocation) -> forEach
    android.support.v8.renderscript.Script$KernelID getKernelID() -> getKernelID
    android.support.v8.renderscript.Script$FieldID getFieldID_Input() -> getFieldID_Input
    android.renderscript.Script getNObj() -> getNObj
    android.renderscript.BaseObj getNObj() -> getNObj
android.support.v8.renderscript.ScriptIntrinsicConvolve5x5 -> android.support.v8.renderscript.ScriptIntrinsicConvolve5x5:
    float[] mValues -> mValues
    android.support.v8.renderscript.Allocation mInput -> mInput
    android.support.v8.renderscript.ScriptIntrinsicConvolve5x5 create(android.support.v8.renderscript.RenderScript,android.support.v8.renderscript.Element) -> create
    void setInput(android.support.v8.renderscript.Allocation) -> setInput
    void setCoefficients(float[]) -> setCoefficients
    void forEach(android.support.v8.renderscript.Allocation) -> forEach
    android.support.v8.renderscript.Script$KernelID getKernelID() -> getKernelID
    android.support.v8.renderscript.Script$FieldID getFieldID_Input() -> getFieldID_Input
android.support.v8.renderscript.ScriptIntrinsicConvolve5x5Thunker -> android.support.v8.renderscript.ScriptIntrinsicConvolve5x5Thunker:
    android.renderscript.ScriptIntrinsicConvolve5x5 mN -> mN
    android.renderscript.ScriptIntrinsicConvolve5x5 getNObj() -> getNObj
    android.support.v8.renderscript.ScriptIntrinsicConvolve5x5Thunker create(android.support.v8.renderscript.RenderScript,android.support.v8.renderscript.Element) -> create
    void setInput(android.support.v8.renderscript.Allocation) -> setInput
    void setCoefficients(float[]) -> setCoefficients
    void forEach(android.support.v8.renderscript.Allocation) -> forEach
    android.support.v8.renderscript.Script$KernelID getKernelID() -> getKernelID
    android.support.v8.renderscript.Script$FieldID getFieldID_Input() -> getFieldID_Input
    android.renderscript.Script getNObj() -> getNObj
    android.renderscript.BaseObj getNObj() -> getNObj
android.support.v8.renderscript.ScriptIntrinsicLUT -> android.support.v8.renderscript.ScriptIntrinsicLUT:
    android.support.v8.renderscript.Matrix4f mMatrix -> mMatrix
    android.support.v8.renderscript.Allocation mTables -> mTables
    byte[] mCache -> mCache
    boolean mDirty -> mDirty
    android.support.v8.renderscript.ScriptIntrinsicLUT create(android.support.v8.renderscript.RenderScript,android.support.v8.renderscript.Element) -> create
    void validate(int,int) -> validate
    void setRed(int,int) -> setRed
    void setGreen(int,int) -> setGreen
    void setBlue(int,int) -> setBlue
    void setAlpha(int,int) -> setAlpha
    void forEach(android.support.v8.renderscript.Allocation,android.support.v8.renderscript.Allocation) -> forEach
    android.support.v8.renderscript.Script$KernelID getKernelID() -> getKernelID
android.support.v8.renderscript.ScriptIntrinsicLUTThunker -> android.support.v8.renderscript.ScriptIntrinsicLUTThunker:
    android.renderscript.ScriptIntrinsicLUT mN -> mN
    android.renderscript.ScriptIntrinsicLUT getNObj() -> getNObj
    android.support.v8.renderscript.ScriptIntrinsicLUTThunker create(android.support.v8.renderscript.RenderScript,android.support.v8.renderscript.Element) -> create
    void setRed(int,int) -> setRed
    void setGreen(int,int) -> setGreen
    void setBlue(int,int) -> setBlue
    void setAlpha(int,int) -> setAlpha
    void forEach(android.support.v8.renderscript.Allocation,android.support.v8.renderscript.Allocation) -> forEach
    android.support.v8.renderscript.Script$KernelID getKernelID() -> getKernelID
    android.renderscript.Script getNObj() -> getNObj
    android.renderscript.BaseObj getNObj() -> getNObj
android.support.v8.renderscript.ScriptIntrinsicYuvToRGB -> android.support.v8.renderscript.ScriptIntrinsicYuvToRGB:
    android.support.v8.renderscript.Allocation mInput -> mInput
    android.support.v8.renderscript.ScriptIntrinsicYuvToRGB create(android.support.v8.renderscript.RenderScript,android.support.v8.renderscript.Element) -> create
    void setInput(android.support.v8.renderscript.Allocation) -> setInput
    void forEach(android.support.v8.renderscript.Allocation) -> forEach
    android.support.v8.renderscript.Script$KernelID getKernelID() -> getKernelID
    android.support.v8.renderscript.Script$FieldID getFieldID_Input() -> getFieldID_Input
android.support.v8.renderscript.ScriptIntrinsicYuvToRGBThunker -> android.support.v8.renderscript.ScriptIntrinsicYuvToRGBThunker:
    android.renderscript.ScriptIntrinsicYuvToRGB mN -> mN
    android.renderscript.ScriptIntrinsicYuvToRGB getNObj() -> getNObj
    android.support.v8.renderscript.ScriptIntrinsicYuvToRGBThunker create(android.support.v8.renderscript.RenderScript,android.support.v8.renderscript.Element) -> create
    void setInput(android.support.v8.renderscript.Allocation) -> setInput
    void forEach(android.support.v8.renderscript.Allocation) -> forEach
    android.support.v8.renderscript.Script$KernelID getKernelID() -> getKernelID
    android.support.v8.renderscript.Script$FieldID getFieldID_Input() -> getFieldID_Input
    android.renderscript.Script getNObj() -> getNObj
    android.renderscript.BaseObj getNObj() -> getNObj
android.support.v8.renderscript.Short2 -> android.support.v8.renderscript.Short2:
    short x -> x
    short y -> y
android.support.v8.renderscript.Short3 -> android.support.v8.renderscript.Short3:
    short x -> x
    short y -> y
    short z -> z
android.support.v8.renderscript.Short4 -> android.support.v8.renderscript.Short4:
    short x -> x
    short y -> y
    short z -> z
    short w -> w
android.support.v8.renderscript.Type -> android.support.v8.renderscript.Type:
    int mDimX -> mDimX
    int mDimY -> mDimY
    int mDimZ -> mDimZ
    boolean mDimMipmaps -> mDimMipmaps
    boolean mDimFaces -> mDimFaces
    int mDimYuv -> mDimYuv
    int mElementCount -> mElementCount
    android.support.v8.renderscript.Element mElement -> mElement
    android.support.v8.renderscript.Element getElement() -> getElement
    int getX() -> getX
    int getY() -> getY
    int getZ() -> getZ
    int getYuv() -> getYuv
    boolean hasMipmaps() -> hasMipmaps
    boolean hasFaces() -> hasFaces
    int getCount() -> getCount
    void calcElementCount() -> calcElementCount
android.support.v8.renderscript.Type$Builder -> android.support.v8.renderscript.Type$Builder:
    android.support.v8.renderscript.RenderScript mRS -> mRS
    int mDimX -> mDimX
    int mDimY -> mDimY
    int mDimZ -> mDimZ
    boolean mDimMipmaps -> mDimMipmaps
    boolean mDimFaces -> mDimFaces
    int mYuv -> mYuv
    android.support.v8.renderscript.Element mElement -> mElement
    android.support.v8.renderscript.Type$Builder setX(int) -> setX
    android.support.v8.renderscript.Type$Builder setY(int) -> setY
    android.support.v8.renderscript.Type$Builder setZ(int) -> setZ
    android.support.v8.renderscript.Type$Builder setMipmaps(boolean) -> setMipmaps
    android.support.v8.renderscript.Type$Builder setFaces(boolean) -> setFaces
    android.support.v8.renderscript.Type$Builder setYuvFormat(int) -> setYuvFormat
    android.support.v8.renderscript.Type create() -> create
android.support.v8.renderscript.Type$CubemapFace -> android.support.v8.renderscript.Type$CubemapFace:
    android.support.v8.renderscript.Type$CubemapFace POSITIVE_X -> POSITIVE_X
    android.support.v8.renderscript.Type$CubemapFace NEGATIVE_X -> NEGATIVE_X
    android.support.v8.renderscript.Type$CubemapFace POSITIVE_Y -> POSITIVE_Y
    android.support.v8.renderscript.Type$CubemapFace NEGATIVE_Y -> NEGATIVE_Y
    android.support.v8.renderscript.Type$CubemapFace POSITIVE_Z -> POSITIVE_Z
    android.support.v8.renderscript.Type$CubemapFace NEGATIVE_Z -> NEGATIVE_Z
    int mID -> mID
    android.support.v8.renderscript.Type$CubemapFace[] $VALUES -> $VALUES
    android.support.v8.renderscript.Type$CubemapFace[] values() -> values
    android.support.v8.renderscript.Type$CubemapFace valueOf(java.lang.String) -> valueOf
android.support.v8.renderscript.TypeThunker -> android.support.v8.renderscript.TypeThunker:
    android.renderscript.Type mN -> mN
    java.util.HashMap mMap -> mMap
    android.renderscript.Type getNObj() -> getNObj
    void internalCalc() -> internalCalc
    android.support.v8.renderscript.Type find(android.renderscript.Type) -> find
    android.support.v8.renderscript.Type create(android.support.v8.renderscript.RenderScript,android.support.v8.renderscript.Element,int,int,int,boolean,boolean,int) -> create
    android.renderscript.BaseObj getNObj() -> getNObj
cn.pedant.SweetAlert.CircularProgress -> cn.pedant.SweetAlert.CircularProgress:
    android.view.animation.Interpolator ANGLE_INTERPOLATOR -> a
    android.view.animation.Interpolator SWEEP_INTERPOLATOR -> b
    android.graphics.RectF fBounds -> c
    com.nineoldandroids.animation.ObjectAnimator mObjectAnimatorSweep -> d
    com.nineoldandroids.animation.ObjectAnimator mObjectAnimatorAngle -> e
    boolean mModeAppearing -> f
    android.graphics.Paint mPaint -> g
    float mCurrentGlobalAngleOffset -> h
    float mCurrentGlobalAngle -> i
    float mCurrentSweepAngle -> j
    float mBorderWidth -> k
    boolean mRunning -> l
    int[] mColors -> m
    int mCurrentColorIndex -> n
    int mNextColorIndex -> o
    com.nineoldandroids.util.Property mAngleProperty -> p
    com.nineoldandroids.util.Property mSweepProperty -> q
    void start() -> c
    void stop() -> d
    void onVisibilityChanged(android.view.View,int) -> onVisibilityChanged
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void draw(android.graphics.Canvas) -> draw
    void setCurrentGlobalAngle(float) -> a
    float getCurrentGlobalAngle() -> a
    void setCurrentSweepAngle(float) -> b
    float getCurrentSweepAngle() -> b
    void access$0(cn.pedant.SweetAlert.CircularProgress) -> a
cn.pedant.SweetAlert.CircularProgress$1 -> cn.pedant.SweetAlert.a:
    cn.pedant.SweetAlert.CircularProgress this$0 -> a
    java.lang.Object get(java.lang.Object) -> get
    void set(java.lang.Object,java.lang.Object) -> set
cn.pedant.SweetAlert.CircularProgress$2 -> cn.pedant.SweetAlert.b:
    cn.pedant.SweetAlert.CircularProgress this$0 -> a
    java.lang.Object get(java.lang.Object) -> get
    void set(java.lang.Object,java.lang.Object) -> set
cn.pedant.SweetAlert.CircularProgress$3 -> cn.pedant.SweetAlert.c:
    cn.pedant.SweetAlert.CircularProgress this$0 -> a
    void onAnimationStart(com.nineoldandroids.animation.Animator) -> onAnimationStart
    void onAnimationEnd(com.nineoldandroids.animation.Animator) -> onAnimationEnd
    void onAnimationCancel(com.nineoldandroids.animation.Animator) -> onAnimationCancel
    void onAnimationRepeat(com.nineoldandroids.animation.Animator) -> onAnimationRepeat
cn.pedant.SweetAlert.OptAnimationLoader -> cn.pedant.SweetAlert.d:
    android.view.animation.Animation loadAnimation(android.content.Context,int) -> a
    android.view.animation.Animation createAnimationFromXml(android.content.Context,org.xmlpull.v1.XmlPullParser,android.view.animation.AnimationSet,android.util.AttributeSet) -> a
cn.pedant.SweetAlert.Rotate3dAnimation -> cn.pedant.SweetAlert.Rotate3dAnimation:
    int mPivotXType -> a
    int mPivotYType -> b
    float mPivotXValue -> c
    float mPivotYValue -> d
    float mFromDegrees -> e
    float mToDegrees -> f
    float mPivotX -> g
    float mPivotY -> h
    android.graphics.Camera mCamera -> i
    int mRollType -> j
    cn.pedant.SweetAlert.Rotate3dAnimation$Description parseValue(android.util.TypedValue) -> a
    void initialize(int,int,int,int) -> initialize
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
cn.pedant.SweetAlert.Rotate3dAnimation$Description -> cn.pedant.SweetAlert.e:
    int type -> a
    float value -> b
cn.pedant.SweetAlert.SuccessTickView -> cn.pedant.SweetAlert.SuccessTickView:
    float mDensity -> a
    android.graphics.Paint mPaint -> b
    float CONST_RADIUS -> c
    float CONST_RECT_WEIGHT -> d
    float CONST_LEFT_RECT_W -> e
    float CONST_RIGHT_RECT_W -> f
    float MIN_LEFT_RECT_W -> g
    float MAX_RIGHT_RECT_W -> h
    float mMaxLeftRectWidth -> i
    float mLeftRectWidth -> j
    float mRightRectWidth -> k
    boolean mLeftRectGrowMode -> l
    void init() -> b
    void draw(android.graphics.Canvas) -> draw
    float dip2px(float) -> a
    void startTickAnim() -> a
    void access$0(cn.pedant.SweetAlert.SuccessTickView,boolean) -> a
    float access$1(cn.pedant.SweetAlert.SuccessTickView) -> a
    void access$2(cn.pedant.SweetAlert.SuccessTickView,float) -> a
    float access$3(cn.pedant.SweetAlert.SuccessTickView) -> b
    void access$4(cn.pedant.SweetAlert.SuccessTickView,float) -> b
    float access$5(cn.pedant.SweetAlert.SuccessTickView) -> c
    float access$6(cn.pedant.SweetAlert.SuccessTickView) -> d
    float access$7(cn.pedant.SweetAlert.SuccessTickView) -> e
    float access$8(cn.pedant.SweetAlert.SuccessTickView) -> f
cn.pedant.SweetAlert.SuccessTickView$1 -> cn.pedant.SweetAlert.f:
    cn.pedant.SweetAlert.SuccessTickView this$0 -> a
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
cn.pedant.SweetAlert.SweetAlertDialog -> cn.pedant.SweetAlert.g:
    android.view.View mDialogView -> a
    android.view.animation.AnimationSet mModalInAnim -> b
    android.view.animation.AnimationSet mModalOutAnim -> c
    android.view.animation.Animation mOverlayOutAnim -> d
    android.view.animation.Animation mErrorInAnim -> e
    android.view.animation.AnimationSet mErrorXInAnim -> f
    android.view.animation.AnimationSet mSuccessLayoutAnimSet -> g
    android.view.animation.Animation mSuccessBowAnim -> h
    android.widget.TextView mTitleTextView -> i
    android.widget.TextView mContentTextView -> j
    java.lang.String mTitleText -> k
    java.lang.String mContentText -> l
    boolean mShowCancel -> m
    boolean mShowContent -> n
    java.lang.String mCancelText -> o
    java.lang.String mConfirmText -> p
    int mAlertType -> q
    android.widget.FrameLayout mErrorFrame -> r
    android.widget.FrameLayout mSuccessFrame -> s
    android.widget.FrameLayout mProgressFrame -> t
    cn.pedant.SweetAlert.SuccessTickView mSuccessTick -> u
    android.widget.ImageView mErrorX -> v
    android.view.View mSuccessLeftMask -> w
    android.view.View mSuccessRightMask -> x
    android.graphics.drawable.Drawable mCustomImgDrawable -> y
    android.widget.ImageView mCustomImage -> z
    android.widget.Button mConfirmButton -> A
    android.widget.Button mCancelButton -> B
    android.widget.FrameLayout mWarningFrame -> C
    cn.pedant.SweetAlert.SweetAlertDialog$OnSweetClickListener mCancelClickListener -> D
    cn.pedant.SweetAlert.SweetAlertDialog$OnSweetClickListener mConfirmClickListener -> E
    boolean mCloseFromCancel -> F
    void onCreate(android.os.Bundle) -> onCreate
    void playAnimation() -> d
    void changeAlertType(int,boolean) -> a
    void changeAlertType$13462e() -> a
    cn.pedant.SweetAlert.SweetAlertDialog setTitleText(java.lang.String) -> a
    cn.pedant.SweetAlert.SweetAlertDialog setCustomImage(android.graphics.drawable.Drawable) -> a
    cn.pedant.SweetAlert.SweetAlertDialog setCustomImage$7eb576bb() -> b
    cn.pedant.SweetAlert.SweetAlertDialog setContentText(java.lang.String) -> b
    cn.pedant.SweetAlert.SweetAlertDialog showCancelButton(boolean) -> a
    cn.pedant.SweetAlert.SweetAlertDialog setCancelText(java.lang.String) -> c
    cn.pedant.SweetAlert.SweetAlertDialog setConfirmText(java.lang.String) -> d
    cn.pedant.SweetAlert.SweetAlertDialog setCancelClickListener$215b789a() -> c
    cn.pedant.SweetAlert.SweetAlertDialog setConfirmClickListener(cn.pedant.SweetAlert.SweetAlertDialog$OnSweetClickListener) -> a
    void onStart() -> onStart
    void cancel() -> cancel
    void dismissWithAnimation(boolean) -> b
    void onClick(android.view.View) -> onClick
    android.view.View access$0(cn.pedant.SweetAlert.SweetAlertDialog) -> a
    boolean access$1(cn.pedant.SweetAlert.SweetAlertDialog) -> b
    void access$2(cn.pedant.SweetAlert.SweetAlertDialog) -> c
    void access$3(cn.pedant.SweetAlert.SweetAlertDialog) -> d
cn.pedant.SweetAlert.SweetAlertDialog$1 -> cn.pedant.SweetAlert.h:
    cn.pedant.SweetAlert.SweetAlertDialog this$0 -> a
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    cn.pedant.SweetAlert.SweetAlertDialog access$0(cn.pedant.SweetAlert.SweetAlertDialog$1) -> a
cn.pedant.SweetAlert.SweetAlertDialog$1$1 -> cn.pedant.SweetAlert.i:
    cn.pedant.SweetAlert.SweetAlertDialog$1 this$1 -> a
    void run() -> run
cn.pedant.SweetAlert.SweetAlertDialog$2 -> cn.pedant.SweetAlert.j:
    cn.pedant.SweetAlert.SweetAlertDialog this$0 -> a
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
cn.pedant.SweetAlert.SweetAlertDialog$OnSweetClickListener -> cn.pedant.SweetAlert.k:
    void onClick(cn.pedant.SweetAlert.SweetAlertDialog) -> a
com.daimajia.androidanimations.library.BaseViewAnimator -> com.a.a.a.a:
    com.nineoldandroids.animation.AnimatorSet mAnimatorSet -> a
    long mDuration -> b
    void prepare(android.view.View) -> a
    com.daimajia.androidanimations.library.BaseViewAnimator setTarget(android.view.View) -> b
    void animate() -> a
    com.daimajia.androidanimations.library.BaseViewAnimator setDuration(long) -> a
    com.daimajia.androidanimations.library.BaseViewAnimator setStartDelay(long) -> b
    com.daimajia.androidanimations.library.BaseViewAnimator addAnimatorListener(com.nineoldandroids.animation.Animator$AnimatorListener) -> a
    com.daimajia.androidanimations.library.BaseViewAnimator setInterpolator(android.view.animation.Interpolator) -> a
    long getDuration() -> b
    com.nineoldandroids.animation.AnimatorSet getAnimatorAgent() -> c
com.daimajia.androidanimations.library.Techniques -> com.a.a.a.b:
    com.daimajia.androidanimations.library.Techniques DropOut -> a
    com.daimajia.androidanimations.library.Techniques Landing -> b
    com.daimajia.androidanimations.library.Techniques TakingOff -> c
    com.daimajia.androidanimations.library.Techniques Flash -> d
    com.daimajia.androidanimations.library.Techniques Pulse -> e
    com.daimajia.androidanimations.library.Techniques RubberBand -> f
    com.daimajia.androidanimations.library.Techniques Shake -> g
    com.daimajia.androidanimations.library.Techniques Swing -> h
    com.daimajia.androidanimations.library.Techniques Wobble -> i
    com.daimajia.androidanimations.library.Techniques Bounce -> j
    com.daimajia.androidanimations.library.Techniques Tada -> k
    com.daimajia.androidanimations.library.Techniques StandUp -> l
    com.daimajia.androidanimations.library.Techniques Wave -> m
    com.daimajia.androidanimations.library.Techniques Hinge -> n
    com.daimajia.androidanimations.library.Techniques RollIn -> o
    com.daimajia.androidanimations.library.Techniques RollOut -> p
    com.daimajia.androidanimations.library.Techniques BounceIn -> q
    com.daimajia.androidanimations.library.Techniques BounceInDown -> r
    com.daimajia.androidanimations.library.Techniques BounceInLeft -> s
    com.daimajia.androidanimations.library.Techniques BounceInRight -> t
    com.daimajia.androidanimations.library.Techniques BounceInUp -> u
    com.daimajia.androidanimations.library.Techniques FadeIn -> v
    com.daimajia.androidanimations.library.Techniques FadeInUp -> w
    com.daimajia.androidanimations.library.Techniques FadeInDown -> x
    com.daimajia.androidanimations.library.Techniques FadeInLeft -> y
    com.daimajia.androidanimations.library.Techniques FadeInRight -> z
    com.daimajia.androidanimations.library.Techniques FadeOut -> A
    com.daimajia.androidanimations.library.Techniques FadeOutDown -> B
    com.daimajia.androidanimations.library.Techniques FadeOutLeft -> C
    com.daimajia.androidanimations.library.Techniques FadeOutRight -> D
    com.daimajia.androidanimations.library.Techniques FadeOutUp -> E
    com.daimajia.androidanimations.library.Techniques FlipInX -> F
    com.daimajia.androidanimations.library.Techniques FlipOutX -> G
    com.daimajia.androidanimations.library.Techniques FlipOutY -> H
    com.daimajia.androidanimations.library.Techniques RotateIn -> I
    com.daimajia.androidanimations.library.Techniques RotateInDownLeft -> J
    com.daimajia.androidanimations.library.Techniques RotateInDownRight -> K
    com.daimajia.androidanimations.library.Techniques RotateInUpLeft -> L
    com.daimajia.androidanimations.library.Techniques RotateInUpRight -> M
    com.daimajia.androidanimations.library.Techniques RotateOut -> N
    com.daimajia.androidanimations.library.Techniques RotateOutDownLeft -> O
    com.daimajia.androidanimations.library.Techniques RotateOutDownRight -> P
    com.daimajia.androidanimations.library.Techniques RotateOutUpLeft -> Q
    com.daimajia.androidanimations.library.Techniques RotateOutUpRight -> R
    com.daimajia.androidanimations.library.Techniques SlideInLeft -> S
    com.daimajia.androidanimations.library.Techniques SlideInRight -> T
    com.daimajia.androidanimations.library.Techniques SlideInUp -> U
    com.daimajia.androidanimations.library.Techniques SlideInDown -> V
    com.daimajia.androidanimations.library.Techniques SlideOutLeft -> W
    com.daimajia.androidanimations.library.Techniques SlideOutRight -> X
    com.daimajia.androidanimations.library.Techniques SlideOutUp -> Y
    com.daimajia.androidanimations.library.Techniques SlideOutDown -> Z
    com.daimajia.androidanimations.library.Techniques ZoomIn -> aa
    com.daimajia.androidanimations.library.Techniques ZoomInDown -> ab
    com.daimajia.androidanimations.library.Techniques ZoomInLeft -> ac
    com.daimajia.androidanimations.library.Techniques ZoomInRight -> ad
    com.daimajia.androidanimations.library.Techniques ZoomInUp -> ae
    com.daimajia.androidanimations.library.Techniques ZoomOut -> af
    com.daimajia.androidanimations.library.Techniques ZoomOutDown -> ag
    com.daimajia.androidanimations.library.Techniques ZoomOutLeft -> ah
    com.daimajia.androidanimations.library.Techniques ZoomOutRight -> ai
    com.daimajia.androidanimations.library.Techniques ZoomOutUp -> aj
    java.lang.Class animatorClazz -> ak
    com.daimajia.androidanimations.library.Techniques[] ENUM$VALUES -> al
    com.daimajia.androidanimations.library.BaseViewAnimator getAnimator() -> a
    com.daimajia.androidanimations.library.Techniques[] values() -> values
    com.daimajia.androidanimations.library.Techniques valueOf(java.lang.String) -> valueOf
com.daimajia.androidanimations.library.YoYo -> com.a.a.a.c:
    com.daimajia.androidanimations.library.BaseViewAnimator animator -> a
    long duration -> b
    long delay -> c
    android.view.animation.Interpolator interpolator -> d
    java.util.List callbacks -> e
    android.view.View target -> f
    com.daimajia.androidanimations.library.YoYo$AnimationComposer with(com.daimajia.androidanimations.library.Techniques) -> a
    com.daimajia.androidanimations.library.BaseViewAnimator access$1(com.daimajia.androidanimations.library.YoYo) -> a
com.daimajia.androidanimations.library.YoYo$AnimationComposer -> com.a.a.a.d:
    java.util.List callbacks -> a
    com.daimajia.androidanimations.library.BaseViewAnimator animator -> b
    long duration -> c
    long delay -> d
    android.view.animation.Interpolator interpolator -> e
    android.view.View target -> f
    com.daimajia.androidanimations.library.YoYo$AnimationComposer duration(long) -> a
    com.daimajia.androidanimations.library.YoYo$YoYoString playOn(android.view.View) -> a
    com.daimajia.androidanimations.library.BaseViewAnimator access$0(com.daimajia.androidanimations.library.YoYo$AnimationComposer) -> a
    long access$1(com.daimajia.androidanimations.library.YoYo$AnimationComposer) -> b
    long access$2(com.daimajia.androidanimations.library.YoYo$AnimationComposer) -> c
    android.view.animation.Interpolator access$3(com.daimajia.androidanimations.library.YoYo$AnimationComposer) -> d
    java.util.List access$4(com.daimajia.androidanimations.library.YoYo$AnimationComposer) -> e
    android.view.View access$5(com.daimajia.androidanimations.library.YoYo$AnimationComposer) -> f
com.daimajia.androidanimations.library.YoYo$YoYoString -> com.a.a.a.e:
    com.daimajia.androidanimations.library.BaseViewAnimator animator -> a
    android.view.View target -> b
com.daimajia.androidanimations.library.attention.BounceAnimator -> com.a.a.a.a.a:
    void prepare(android.view.View) -> a
com.daimajia.androidanimations.library.attention.FlashAnimator -> com.a.a.a.a.b:
    void prepare(android.view.View) -> a
com.daimajia.androidanimations.library.attention.PulseAnimator -> com.a.a.a.a.c:
    void prepare(android.view.View) -> a
com.daimajia.androidanimations.library.attention.RubberBandAnimator -> com.a.a.a.a.d:
    void prepare(android.view.View) -> a
com.daimajia.androidanimations.library.attention.ShakeAnimator -> com.a.a.a.a.e:
    void prepare(android.view.View) -> a
com.daimajia.androidanimations.library.attention.StandUpAnimator -> com.a.a.a.a.f:
    void prepare(android.view.View) -> a
com.daimajia.androidanimations.library.attention.SwingAnimator -> com.a.a.a.a.g:
    void prepare(android.view.View) -> a
com.daimajia.androidanimations.library.attention.TadaAnimator -> com.a.a.a.a.h:
    void prepare(android.view.View) -> a
com.daimajia.androidanimations.library.attention.WaveAnimator -> com.a.a.a.a.i:
    void prepare(android.view.View) -> a
com.daimajia.androidanimations.library.attention.WobbleAnimator -> com.a.a.a.a.j:
    void prepare(android.view.View) -> a
com.daimajia.androidanimations.library.bouncing_entrances.BounceInAnimator -> com.a.a.a.b.a:
    void prepare(android.view.View) -> a
com.daimajia.androidanimations.library.bouncing_entrances.BounceInDownAnimator -> com.a.a.a.b.b:
    void prepare(android.view.View) -> a
com.daimajia.androidanimations.library.bouncing_entrances.BounceInLeftAnimator -> com.a.a.a.b.c:
    void prepare(android.view.View) -> a
com.daimajia.androidanimations.library.bouncing_entrances.BounceInRightAnimator -> com.a.a.a.b.d:
    void prepare(android.view.View) -> a
com.daimajia.androidanimations.library.bouncing_entrances.BounceInUpAnimator -> com.a.a.a.b.e:
    void prepare(android.view.View) -> a
com.daimajia.androidanimations.library.fading_entrances.FadeInAnimator -> com.a.a.a.c.a:
    void prepare(android.view.View) -> a
com.daimajia.androidanimations.library.fading_entrances.FadeInDownAnimator -> com.a.a.a.c.b:
    void prepare(android.view.View) -> a
com.daimajia.androidanimations.library.fading_entrances.FadeInLeftAnimator -> com.a.a.a.c.c:
    void prepare(android.view.View) -> a
com.daimajia.androidanimations.library.fading_entrances.FadeInRightAnimator -> com.a.a.a.c.d:
    void prepare(android.view.View) -> a
com.daimajia.androidanimations.library.fading_entrances.FadeInUpAnimator -> com.a.a.a.c.e:
    void prepare(android.view.View) -> a
com.daimajia.androidanimations.library.fading_exits.FadeOutAnimator -> com.a.a.a.d.a:
    void prepare(android.view.View) -> a
com.daimajia.androidanimations.library.fading_exits.FadeOutDownAnimator -> com.a.a.a.d.b:
    void prepare(android.view.View) -> a
com.daimajia.androidanimations.library.fading_exits.FadeOutLeftAnimator -> com.a.a.a.d.c:
    void prepare(android.view.View) -> a
com.daimajia.androidanimations.library.fading_exits.FadeOutRightAnimator -> com.a.a.a.d.d:
    void prepare(android.view.View) -> a
com.daimajia.androidanimations.library.fading_exits.FadeOutUpAnimator -> com.a.a.a.d.e:
    void prepare(android.view.View) -> a
com.daimajia.androidanimations.library.flippers.FlipInXAnimator -> com.a.a.a.e.a:
    void prepare(android.view.View) -> a
com.daimajia.androidanimations.library.flippers.FlipOutXAnimator -> com.a.a.a.e.b:
    void prepare(android.view.View) -> a
com.daimajia.androidanimations.library.flippers.FlipOutYAnimator -> com.a.a.a.e.c:
    void prepare(android.view.View) -> a
com.daimajia.androidanimations.library.rotating_entrances.RotateInAnimator -> com.a.a.a.f.a:
    void prepare(android.view.View) -> a
com.daimajia.androidanimations.library.rotating_entrances.RotateInDownLeftAnimator -> com.a.a.a.f.b:
    void prepare(android.view.View) -> a
com.daimajia.androidanimations.library.rotating_entrances.RotateInDownRightAnimator -> com.a.a.a.f.c:
    void prepare(android.view.View) -> a
com.daimajia.androidanimations.library.rotating_entrances.RotateInUpLeftAnimator -> com.a.a.a.f.d:
    void prepare(android.view.View) -> a
com.daimajia.androidanimations.library.rotating_entrances.RotateInUpRightAnimator -> com.a.a.a.f.e:
    void prepare(android.view.View) -> a
com.daimajia.androidanimations.library.rotating_exits.RotateOutAnimator -> com.a.a.a.g.a:
    void prepare(android.view.View) -> a
com.daimajia.androidanimations.library.rotating_exits.RotateOutDownLeftAnimator -> com.a.a.a.g.b:
    void prepare(android.view.View) -> a
com.daimajia.androidanimations.library.rotating_exits.RotateOutDownRightAnimator -> com.a.a.a.g.c:
    void prepare(android.view.View) -> a
com.daimajia.androidanimations.library.rotating_exits.RotateOutUpLeftAnimator -> com.a.a.a.g.d:
    void prepare(android.view.View) -> a
com.daimajia.androidanimations.library.rotating_exits.RotateOutUpRightAnimator -> com.a.a.a.g.e:
    void prepare(android.view.View) -> a
com.daimajia.androidanimations.library.sliders.SlideInDownAnimator -> com.a.a.a.h.a:
    void prepare(android.view.View) -> a
com.daimajia.androidanimations.library.sliders.SlideInLeftAnimator -> com.a.a.a.h.b:
    void prepare(android.view.View) -> a
com.daimajia.androidanimations.library.sliders.SlideInRightAnimator -> com.a.a.a.h.c:
    void prepare(android.view.View) -> a
com.daimajia.androidanimations.library.sliders.SlideInUpAnimator -> com.a.a.a.h.d:
    void prepare(android.view.View) -> a
com.daimajia.androidanimations.library.sliders.SlideOutDownAnimator -> com.a.a.a.h.e:
    void prepare(android.view.View) -> a
com.daimajia.androidanimations.library.sliders.SlideOutLeftAnimator -> com.a.a.a.h.f:
    void prepare(android.view.View) -> a
com.daimajia.androidanimations.library.sliders.SlideOutRightAnimator -> com.a.a.a.h.g:
    void prepare(android.view.View) -> a
com.daimajia.androidanimations.library.sliders.SlideOutUpAnimator -> com.a.a.a.h.h:
    void prepare(android.view.View) -> a
com.daimajia.androidanimations.library.specials.HingeAnimator -> com.a.a.a.i.a:
    void prepare(android.view.View) -> a
com.daimajia.androidanimations.library.specials.RollInAnimator -> com.a.a.a.i.b:
    void prepare(android.view.View) -> a
com.daimajia.androidanimations.library.specials.RollOutAnimator -> com.a.a.a.i.c:
    void prepare(android.view.View) -> a
com.daimajia.androidanimations.library.specials.in.DropOutAnimator -> com.a.a.a.i.a.a:
    void prepare(android.view.View) -> a
com.daimajia.androidanimations.library.specials.in.LandingAnimator -> com.a.a.a.i.a.b:
    void prepare(android.view.View) -> a
com.daimajia.androidanimations.library.specials.out.TakingOffAnimator -> com.a.a.a.i.b.a:
    void prepare(android.view.View) -> a
com.daimajia.androidanimations.library.zooming_entrances.ZoomInAnimator -> com.a.a.a.j.a:
    void prepare(android.view.View) -> a
com.daimajia.androidanimations.library.zooming_entrances.ZoomInDownAnimator -> com.a.a.a.j.b:
    void prepare(android.view.View) -> a
com.daimajia.androidanimations.library.zooming_entrances.ZoomInLeftAnimator -> com.a.a.a.j.c:
    void prepare(android.view.View) -> a
com.daimajia.androidanimations.library.zooming_entrances.ZoomInRightAnimator -> com.a.a.a.j.d:
    void prepare(android.view.View) -> a
com.daimajia.androidanimations.library.zooming_entrances.ZoomInUpAnimator -> com.a.a.a.j.e:
    void prepare(android.view.View) -> a
com.daimajia.androidanimations.library.zooming_exits.ZoomOutAnimator -> com.a.a.a.k.a:
    void prepare(android.view.View) -> a
com.daimajia.androidanimations.library.zooming_exits.ZoomOutDownAnimator -> com.a.a.a.k.b:
    void prepare(android.view.View) -> a
com.daimajia.androidanimations.library.zooming_exits.ZoomOutLeftAnimator -> com.a.a.a.k.c:
    void prepare(android.view.View) -> a
com.daimajia.androidanimations.library.zooming_exits.ZoomOutRightAnimator -> com.a.a.a.k.d:
    void prepare(android.view.View) -> a
com.daimajia.androidanimations.library.zooming_exits.ZoomOutUpAnimator -> com.a.a.a.k.e:
    void prepare(android.view.View) -> a
com.daimajia.easing.BaseEasingMethod -> com.a.b.a:
    float mDuration -> a
    java.util.ArrayList mListeners -> b
    java.lang.Float calculate(float,float,float,float) -> a
    java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
com.daimajia.easing.Glider -> com.a.b.b:
    com.nineoldandroids.animation.ValueAnimator glide(com.daimajia.easing.Skill,float,com.nineoldandroids.animation.ValueAnimator) -> a
com.daimajia.easing.Skill -> com.a.b.c:
    com.daimajia.easing.Skill BackEaseIn -> a
    com.daimajia.easing.Skill BackEaseOut -> b
    com.daimajia.easing.Skill BackEaseInOut -> c
    com.daimajia.easing.Skill BounceEaseIn -> d
    com.daimajia.easing.Skill BounceEaseOut -> e
    com.daimajia.easing.Skill BounceEaseInOut -> f
    com.daimajia.easing.Skill CircEaseIn -> g
    com.daimajia.easing.Skill CircEaseOut -> h
    com.daimajia.easing.Skill CircEaseInOut -> i
    com.daimajia.easing.Skill CubicEaseIn -> j
    com.daimajia.easing.Skill CubicEaseOut -> k
    com.daimajia.easing.Skill CubicEaseInOut -> l
    com.daimajia.easing.Skill ElasticEaseIn -> m
    com.daimajia.easing.Skill ElasticEaseOut -> n
    com.daimajia.easing.Skill ExpoEaseIn -> o
    com.daimajia.easing.Skill ExpoEaseOut -> p
    com.daimajia.easing.Skill ExpoEaseInOut -> q
    com.daimajia.easing.Skill QuadEaseIn -> r
    com.daimajia.easing.Skill QuadEaseOut -> s
    com.daimajia.easing.Skill QuadEaseInOut -> t
    com.daimajia.easing.Skill QuintEaseIn -> u
    com.daimajia.easing.Skill QuintEaseOut -> v
    com.daimajia.easing.Skill QuintEaseInOut -> w
    com.daimajia.easing.Skill SineEaseIn -> x
    com.daimajia.easing.Skill SineEaseOut -> y
    com.daimajia.easing.Skill SineEaseInOut -> z
    com.daimajia.easing.Skill Linear -> A
    java.lang.Class easingMethod -> B
    com.daimajia.easing.Skill[] ENUM$VALUES -> C
    com.daimajia.easing.BaseEasingMethod getMethod(float) -> a
    com.daimajia.easing.Skill[] values() -> values
    com.daimajia.easing.Skill valueOf(java.lang.String) -> valueOf
com.daimajia.easing.back.BackEaseIn -> com.a.b.a.a:
    float s -> b
    java.lang.Float calculate(float,float,float,float) -> a
com.daimajia.easing.back.BackEaseInOut -> com.a.b.a.b:
    float s -> b
    java.lang.Float calculate(float,float,float,float) -> a
com.daimajia.easing.back.BackEaseOut -> com.a.b.a.c:
    float s -> b
    java.lang.Float calculate(float,float,float,float) -> a
com.daimajia.easing.bounce.BounceEaseIn -> com.a.b.b.a:
    com.daimajia.easing.bounce.BounceEaseOut mBounceEaseOut -> b
    java.lang.Float calculate(float,float,float,float) -> a
com.daimajia.easing.bounce.BounceEaseInOut -> com.a.b.b.b:
    com.daimajia.easing.bounce.BounceEaseOut mBounceEaseOut -> b
    com.daimajia.easing.bounce.BounceEaseIn mBounceEaseIn -> c
    java.lang.Float calculate(float,float,float,float) -> a
com.daimajia.easing.bounce.BounceEaseOut -> com.a.b.b.c:
    java.lang.Float calculate(float,float,float,float) -> a
com.daimajia.easing.circ.CircEaseIn -> com.a.b.c.a:
    java.lang.Float calculate(float,float,float,float) -> a
com.daimajia.easing.circ.CircEaseInOut -> com.a.b.c.b:
    java.lang.Float calculate(float,float,float,float) -> a
com.daimajia.easing.circ.CircEaseOut -> com.a.b.c.c:
    java.lang.Float calculate(float,float,float,float) -> a
com.daimajia.easing.cubic.CubicEaseIn -> com.a.b.d.a:
    java.lang.Float calculate(float,float,float,float) -> a
com.daimajia.easing.cubic.CubicEaseInOut -> com.a.b.d.b:
    java.lang.Float calculate(float,float,float,float) -> a
com.daimajia.easing.cubic.CubicEaseOut -> com.a.b.d.c:
    java.lang.Float calculate(float,float,float,float) -> a
com.daimajia.easing.elastic.ElasticEaseIn -> com.a.b.e.a:
    java.lang.Float calculate(float,float,float,float) -> a
com.daimajia.easing.elastic.ElasticEaseOut -> com.a.b.e.b:
    java.lang.Float calculate(float,float,float,float) -> a
com.daimajia.easing.expo.ExpoEaseIn -> com.a.b.f.a:
    java.lang.Float calculate(float,float,float,float) -> a
com.daimajia.easing.expo.ExpoEaseInOut -> com.a.b.f.b:
    java.lang.Float calculate(float,float,float,float) -> a
com.daimajia.easing.expo.ExpoEaseOut -> com.a.b.f.c:
    java.lang.Float calculate(float,float,float,float) -> a
com.daimajia.easing.linear.Linear -> com.a.b.g.a:
    java.lang.Float calculate(float,float,float,float) -> a
com.daimajia.easing.quad.QuadEaseIn -> com.a.b.h.a:
    java.lang.Float calculate(float,float,float,float) -> a
com.daimajia.easing.quad.QuadEaseInOut -> com.a.b.h.b:
    java.lang.Float calculate(float,float,float,float) -> a
com.daimajia.easing.quad.QuadEaseOut -> com.a.b.h.c:
    java.lang.Float calculate(float,float,float,float) -> a
com.daimajia.easing.quint.QuintEaseIn -> com.a.b.i.a:
    java.lang.Float calculate(float,float,float,float) -> a
com.daimajia.easing.quint.QuintEaseInOut -> com.a.b.i.b:
    java.lang.Float calculate(float,float,float,float) -> a
com.daimajia.easing.quint.QuintEaseOut -> com.a.b.i.c:
    java.lang.Float calculate(float,float,float,float) -> a
com.daimajia.easing.sine.SineEaseIn -> com.a.b.j.a:
    java.lang.Float calculate(float,float,float,float) -> a
com.daimajia.easing.sine.SineEaseInOut -> com.a.b.j.b:
    java.lang.Float calculate(float,float,float,float) -> a
com.daimajia.easing.sine.SineEaseOut -> com.a.b.j.c:
    java.lang.Float calculate(float,float,float,float) -> a
com.fourmob.colorpicker.ColorPickerPalette -> com.fourmob.colorpicker.ColorPickerPalette:
    java.lang.String mDescription -> c
    java.lang.String mDescriptionSelected -> d
    int mMarginSize -> e
    int mNumColumns -> f
    com.fourmob.colorpicker.ColorPickerSwatch$OnColorSelectedListener mOnColorSelectedListener -> a
    com.fourmob.colorpicker.ContourPickerSwatch$OnContourSelectedListener mOnContourSelectedListener -> b
    int mSwatchLength -> g
    void addSwatchToRow(android.widget.TableRow,android.view.View,int) -> a
    android.widget.ImageView createBlankSpace() -> a
    android.widget.TableRow createTableRow() -> b
    void setSwatchDescription(int,int,int,boolean,android.view.View) -> a
    void drawPaletteByContour(int[],int) -> a
    void drawPalette(int[],int) -> b
    void init(int,int,com.fourmob.colorpicker.ColorPickerSwatch$OnColorSelectedListener) -> a
    void initByContour(int,int,com.fourmob.colorpicker.ContourPickerSwatch$OnContourSelectedListener) -> a
com.fourmob.colorpicker.ColorPickerSwatch -> com.fourmob.colorpicker.a:
    android.widget.ImageView mCheckmarkImage -> a
    int mColor -> b
    com.fourmob.colorpicker.ColorPickerSwatch$OnColorSelectedListener mOnColorSelectedListener -> c
    android.widget.ImageView mSwatchImage -> d
    void onClick(android.view.View) -> onClick
com.fourmob.colorpicker.ColorPickerSwatch$OnColorSelectedListener -> com.fourmob.colorpicker.b:
    void onColorSelected(int) -> a
com.fourmob.colorpicker.ColorStateDrawable -> com.fourmob.colorpicker.c:
    int mColor -> a
    boolean isStateful() -> isStateful
    boolean onStateChange(int[]) -> onStateChange
com.fourmob.colorpicker.ContourPickerSwatch -> com.fourmob.colorpicker.d:
    android.widget.ImageView mCheckmarkImage -> a
    int mContour -> b
    com.fourmob.colorpicker.ContourPickerSwatch$OnContourSelectedListener mOnContourSelectedListener -> c
    android.widget.ImageView mSwatchImage -> d
    void onClick(android.view.View) -> onClick
com.fourmob.colorpicker.ContourPickerSwatch$OnContourSelectedListener -> com.fourmob.colorpicker.e:
    void onContourSelected(int) -> b
com.fourmob.colorpicker.PickerDialog -> com.fourmob.colorpicker.f:
    android.app.AlertDialog mAlertDialog -> a
    int[] mColors -> b
    int mColumns -> c
    com.fourmob.colorpicker.ColorPickerSwatch$OnColorSelectedListener mListener -> d
    com.fourmob.colorpicker.ContourPickerSwatch$OnContourSelectedListener mContourListener -> e
    com.fourmob.colorpicker.ColorPickerPalette mPalette -> j
    android.widget.ProgressBar mProgress -> k
    int mSelectedColor -> f
    int mSize -> g
    int mType -> h
    int mTitleResId -> i
    void refreshPalette() -> a
    void initialize$9981384(int,int[],int,int) -> a
    void onColorSelected(int) -> a
    void onContourSelected(int) -> b
    void onCreate(android.os.Bundle) -> onCreate
    android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void setOnColorSelectedListener(com.fourmob.colorpicker.ColorPickerSwatch$OnColorSelectedListener) -> a
    void setOnContourSelectedListener(com.fourmob.colorpicker.ContourPickerSwatch$OnContourSelectedListener) -> a
com.fourmob.datetimepicker.Utils -> com.fourmob.datetimepicker.a:
    int getDaysInMonth(int,int) -> a
    com.nineoldandroids.animation.ObjectAnimator getPulseAnimator(android.view.View,float,float) -> a
    void tryAccessibilityAnnounce(android.view.View,java.lang.CharSequence) -> a
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> a
com.fourmob.datetimepicker.date.AccessibleDateAnimator -> com.fourmob.datetimepicker.date.AccessibleDateAnimator:
    long mDateMillis -> a
    void setDateMillis(long) -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
com.fourmob.datetimepicker.date.DatePickerController -> com.fourmob.datetimepicker.date.a:
    int getFirstDayOfWeek() -> a
    int getMaxYear() -> b
    int getMinYear() -> c
    com.fourmob.datetimepicker.date.SimpleMonthAdapter$CalendarDay getSelectedDay() -> d
    void onDayOfMonthSelected(int,int,int) -> a
    void onYearSelected(int) -> a
    void registerOnDateChangedListener(com.fourmob.datetimepicker.date.DatePickerDialog$OnDateChangedListener) -> a
    void tryVibrate() -> e
com.fourmob.datetimepicker.date.DatePickerDialog -> com.fourmob.datetimepicker.date.b:
    java.text.SimpleDateFormat DAY_FORMAT -> a
    java.text.SimpleDateFormat YEAR_FORMAT -> b
    java.text.DateFormatSymbols mDateFormatSymbols -> c
    java.util.Calendar mCalendar -> d
    java.util.HashSet mListeners -> e
    com.fourmob.datetimepicker.date.DatePickerDialog$OnDateSetListener mCallBack -> f
    com.fourmob.datetimepicker.date.AccessibleDateAnimator mAnimator -> g
    boolean mDelayAnimation -> h
    long mLastVibrate -> i
    int mCurrentView -> j
    int mWeekStart -> k
    int mMaxYear -> l
    int mMinYear -> m
    java.lang.String mDayPickerDescription -> n
    java.lang.String mYearPickerDescription -> o
    java.lang.String mSelectDay -> p
    java.lang.String mSelectYear -> q
    android.widget.TextView mDayOfWeekView -> r
    com.fourmob.datetimepicker.date.DayPickerView mDayPickerView -> s
    android.widget.Button mDoneButton -> t
    android.widget.LinearLayout mMonthAndDayView -> u
    android.widget.TextView mSelectedDayTextView -> v
    android.widget.TextView mSelectedMonthTextView -> w
    android.os.Vibrator mVibrator -> x
    com.fourmob.datetimepicker.date.YearPickerView mYearPickerView -> y
    android.widget.TextView mYearView -> z
    boolean mVibrate -> A
    boolean mCloseOnSingleTapDay -> B
    com.fourmob.datetimepicker.date.DatePickerDialog newInstance$440814b(com.fourmob.datetimepicker.date.DatePickerDialog$OnDateSetListener,int,int,int) -> a
    void setCurrentView(int,boolean) -> a
    void updateDisplay(boolean) -> a
    void updatePickers() -> h
    int getFirstDayOfWeek() -> a
    int getMaxYear() -> b
    int getMinYear() -> c
    com.fourmob.datetimepicker.date.SimpleMonthAdapter$CalendarDay getSelectedDay() -> d
    void onClick(android.view.View) -> onClick
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onDoneButtonClick() -> i
    void onDayOfMonthSelected(int,int,int) -> a
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onYearSelected(int) -> a
    void registerOnDateChangedListener(com.fourmob.datetimepicker.date.DatePickerDialog$OnDateChangedListener) -> a
    void setYearRange$255f295() -> f
    void tryVibrate() -> e
    void setCloseOnSingleTapDay$1385ff() -> g
    void access$0(com.fourmob.datetimepicker.date.DatePickerDialog) -> a
com.fourmob.datetimepicker.date.DatePickerDialog$1 -> com.fourmob.datetimepicker.date.c:
    com.fourmob.datetimepicker.date.DatePickerDialog this$0 -> a
    void onClick(android.view.View) -> onClick
com.fourmob.datetimepicker.date.DatePickerDialog$OnDateChangedListener -> com.fourmob.datetimepicker.date.d:
    void onDateChanged() -> a
com.fourmob.datetimepicker.date.DatePickerDialog$OnDateSetListener -> com.fourmob.datetimepicker.date.e:
    void onDateSet$4bb52701(int,int,int) -> a
com.fourmob.datetimepicker.date.DayPickerView -> com.fourmob.datetimepicker.date.f:
    int LIST_TOP_OFFSET -> a
    android.content.Context mContext -> b
    android.os.Handler mHandler -> c
    com.fourmob.datetimepicker.date.SimpleMonthAdapter mAdapter -> d
    com.fourmob.datetimepicker.date.DatePickerController mController -> p
    int mCurrentMonthDisplayed -> e
    int mCurrentScrollState -> f
    boolean mPerformingScroll -> q
    long mPreviousScrollPosition -> g
    int mPreviousScrollState -> h
    com.fourmob.datetimepicker.date.DayPickerView$ScrollStateRunnable mScrollStateChangedRunnable -> i
    com.fourmob.datetimepicker.date.SimpleMonthAdapter$CalendarDay mSelectedDay -> j
    com.fourmob.datetimepicker.date.SimpleMonthAdapter$CalendarDay mTempDay -> k
    int mNumWeeks -> l
    boolean mShowWeekNumber -> m
    int mDaysPerWeek -> n
    float mFriction -> o
    int getMostVisiblePosition() -> b
    void layoutChildren() -> layoutChildren
    void onChange() -> c
    void onDateChanged() -> a
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void postSetSelection(int) -> a
    void setUpAdapter() -> d
com.fourmob.datetimepicker.date.DayPickerView$1 -> com.fourmob.datetimepicker.date.g:
    com.fourmob.datetimepicker.date.DayPickerView this$0 -> a
    int val$position -> b
    void run() -> run
com.fourmob.datetimepicker.date.DayPickerView$ScrollStateRunnable -> com.fourmob.datetimepicker.date.h:
    int mNewState -> b
    com.fourmob.datetimepicker.date.DayPickerView this$0 -> a
    void doScrollStateChange$65041a77(int) -> a
    void run() -> run
com.fourmob.datetimepicker.date.SimpleMonthAdapter -> com.fourmob.datetimepicker.date.i:
    int WEEK_7_OVERHANG_HEIGHT -> a
    android.content.Context mContext -> b
    com.fourmob.datetimepicker.date.DatePickerController mController -> c
    com.fourmob.datetimepicker.date.SimpleMonthAdapter$CalendarDay mSelectedDay -> d
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void onDayClick$1b7a0f53(com.fourmob.datetimepicker.date.SimpleMonthAdapter$CalendarDay) -> a
    void setSelectedDay(com.fourmob.datetimepicker.date.SimpleMonthAdapter$CalendarDay) -> b
com.fourmob.datetimepicker.date.SimpleMonthAdapter$CalendarDay -> com.fourmob.datetimepicker.date.j:
    java.util.Calendar calendar -> d
    int day -> a
    int month -> b
    int year -> c
    void setTime(long) -> a
    void set(com.fourmob.datetimepicker.date.SimpleMonthAdapter$CalendarDay) -> a
com.fourmob.datetimepicker.date.SimpleMonthView -> com.fourmob.datetimepicker.date.k:
    int DEFAULT_HEIGHT -> a
    int DAY_SELECTED_CIRCLE_SIZE -> b
    int DAY_SEPARATOR_WIDTH -> c
    int MINI_DAY_NUMBER_TEXT_SIZE -> d
    int MIN_HEIGHT -> e
    int MONTH_DAY_LABEL_TEXT_SIZE -> f
    int MONTH_HEADER_SIZE -> g
    int MONTH_LABEL_TEXT_SIZE -> h
    float mScale -> i
    int mPadding -> j
    java.lang.String mDayOfWeekTypeface -> I
    java.lang.String mMonthTitleTypeface -> J
    android.graphics.Paint mMonthDayLabelPaint -> k
    android.graphics.Paint mMonthNumPaint -> l
    android.graphics.Paint mMonthTitleBGPaint -> m
    android.graphics.Paint mMonthTitlePaint -> n
    android.graphics.Paint mSelectedCirclePaint -> o
    int mDayTextColor -> p
    int mMonthTitleBGColor -> q
    int mMonthTitleColor -> r
    int mTodayNumberColor -> s
    java.lang.StringBuilder mStringBuilder -> K
    java.util.Formatter mFormatter -> L
    int mFirstJulianDay -> t
    int mFirstMonth -> u
    int mLastMonth -> v
    boolean mHasToday -> w
    int mSelectedDay -> x
    int mToday -> y
    int mWeekStart -> z
    int mNumDays -> A
    int mNumCells -> B
    int mSelectedLeft -> C
    int mSelectedRight -> D
    int mDayOfWeekStart -> M
    int mMonth -> E
    int mRowHeight -> F
    int mWidth -> G
    int mYear -> H
    java.util.Calendar mCalendar -> N
    java.util.Calendar mDayLabelCalendar -> O
    int mNumRows -> P
    java.text.DateFormatSymbols mDateFormatSymbols -> Q
    com.fourmob.datetimepicker.date.SimpleMonthView$OnDayClickListener mOnDayClickListener -> R
    int findDayOffset() -> b
    void onDraw(android.graphics.Canvas) -> onDraw
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void reuse() -> a
    void setMonthParams(java.util.HashMap) -> a
    void setOnDayClickListener(com.fourmob.datetimepicker.date.SimpleMonthView$OnDayClickListener) -> a
com.fourmob.datetimepicker.date.SimpleMonthView$OnDayClickListener -> com.fourmob.datetimepicker.date.l:
    void onDayClick$1b7a0f53(com.fourmob.datetimepicker.date.SimpleMonthAdapter$CalendarDay) -> a
com.fourmob.datetimepicker.date.TextViewWithCircularIndicator -> com.fourmob.datetimepicker.date.TextViewWithCircularIndicator:
    int mCircleColor -> a
    android.graphics.Paint mCirclePaint -> b
    boolean mDrawCircle -> c
    java.lang.String mItemIsSelectedText -> d
    int mRadius -> e
    void drawIndicator(boolean) -> a
    java.lang.CharSequence getContentDescription() -> getContentDescription
    void onDraw(android.graphics.Canvas) -> onDraw
com.fourmob.datetimepicker.date.YearPickerView -> com.fourmob.datetimepicker.date.m:
    com.fourmob.datetimepicker.date.YearPickerView$YearAdapter mAdapter -> a
    int mChildSize -> b
    com.fourmob.datetimepicker.date.DatePickerController mController -> c
    com.fourmob.datetimepicker.date.TextViewWithCircularIndicator mSelectedView -> d
    int mViewSize -> e
    int getYearFromTextView(android.widget.TextView) -> b
    void init(android.content.Context) -> a
    int getFirstPositionOffset() -> b
    void onDateChanged() -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    void postSetSelectionFromTop(int,int) -> a
    int access$0(android.widget.TextView) -> a
    com.fourmob.datetimepicker.date.DatePickerController access$1(com.fourmob.datetimepicker.date.YearPickerView) -> a
    void access$2(com.fourmob.datetimepicker.date.YearPickerView,com.fourmob.datetimepicker.date.TextViewWithCircularIndicator) -> a
com.fourmob.datetimepicker.date.YearPickerView$1 -> com.fourmob.datetimepicker.date.n:
    com.fourmob.datetimepicker.date.YearPickerView this$0 -> a
    int val$position -> b
    int val$y -> c
    void run() -> run
com.fourmob.datetimepicker.date.YearPickerView$YearAdapter -> com.fourmob.datetimepicker.date.o:
    com.fourmob.datetimepicker.date.YearPickerView this$0 -> a
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.ikimuhendis.ldrawer.ActionBarDrawerToggle -> com.b.a.a:
    java.lang.String TAG -> g
    android.app.Activity mActivity -> a
    android.support.v4.widget.DrawerLayout mDrawerLayout -> b
    int mOpenDrawerContentDescRes -> c
    int mCloseDrawerContentDescRes -> d
    com.ikimuhendis.ldrawer.DrawerArrowDrawable mDrawerImage -> e
    boolean animateEnabled -> f
    void syncState() -> syncState
    void setDrawerIndicatorEnabled(boolean) -> setDrawerIndicatorEnabled
    boolean isDrawerIndicatorEnabled() -> isDrawerIndicatorEnabled
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onDrawerSlide(android.view.View,float) -> onDrawerSlide
    void onDrawerOpened(android.view.View) -> onDrawerOpened
    void onDrawerClosed(android.view.View) -> onDrawerClosed
    void setActionBarUpIndicator() -> a
    void setActionBarDescription() -> b
com.ikimuhendis.ldrawer.DrawerArrowDrawable -> com.b.a.b:
    float ARROW_HEAD_ANGLE -> l
    float mBarGap -> a
    float mBarSize -> b
    float mBarThickness -> c
    float mMiddleArrowSize -> d
    android.graphics.Paint mPaint -> e
    android.graphics.Path mPath -> f
    float mProgress -> g
    int mSize -> h
    float mVerticalMirror -> i
    float mTopBottomArrowSize -> j
    android.content.Context context -> k
    void draw(android.graphics.Canvas) -> draw
    int getIntrinsicHeight() -> getIntrinsicHeight
    int getIntrinsicWidth() -> getIntrinsicWidth
    void setAlpha(int) -> setAlpha
    int getOpacity() -> getOpacity
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    void setVerticalMirror(boolean) -> a
    void setProgress(float) -> a
com.kyleduo.switchbutton.AnimationController -> com.kyleduo.switchbutton.a:
    int ANI_WHAT -> a
    int DEFAULT_VELOCITY -> b
    int DEFAULT_FRAME_DURATION -> c
    com.kyleduo.switchbutton.AnimationController$AnimationHandler mHandler -> d
    com.kyleduo.switchbutton.AnimationController$OnAnimateListener mOnAnimateListener -> e
    boolean isAnimating -> f
    int mFrame -> g
    int mFrom -> h
    int mTo -> i
    int mVelocity -> j
    com.kyleduo.switchbutton.AnimationController getDefault() -> a
    com.kyleduo.switchbutton.AnimationController init(com.kyleduo.switchbutton.AnimationController$OnAnimateListener) -> a
    void startAnimation(int,int) -> a
    void stopAnimation() -> b
    void setVelocity(int) -> a
    int access$0() -> c
    boolean access$1(com.kyleduo.switchbutton.AnimationController) -> a
    com.kyleduo.switchbutton.AnimationController$OnAnimateListener access$2(com.kyleduo.switchbutton.AnimationController) -> b
    int access$3(com.kyleduo.switchbutton.AnimationController) -> c
    com.kyleduo.switchbutton.AnimationController$AnimationHandler access$4(com.kyleduo.switchbutton.AnimationController) -> d
    int access$5() -> d
com.kyleduo.switchbutton.AnimationController$AnimationHandler -> com.kyleduo.switchbutton.b:
    void handleMessage(android.os.Message) -> handleMessage
com.kyleduo.switchbutton.AnimationController$OnAnimateListener -> com.kyleduo.switchbutton.c:
    void onAnimationStart() -> a
    boolean continueAnimating() -> b
    void onFrameUpdate(int) -> a
    void onAnimateComplete() -> c
com.kyleduo.switchbutton.AnimationController$RequireNextFrame -> com.kyleduo.switchbutton.d:
    com.kyleduo.switchbutton.AnimationController this$0 -> a
    void run() -> run
com.kyleduo.switchbutton.Configuration -> com.kyleduo.switchbutton.e:
    android.graphics.drawable.Drawable mOnDrawable -> a
    android.graphics.drawable.Drawable mOffDrawable -> b
    android.graphics.drawable.Drawable mThumbDrawable -> c
    int mOnColor -> d
    int mOffColor -> e
    int mThumbColor -> f
    int mThumbPressedColor -> g
    int mThumbMarginTop -> h
    int mThumbMarginBottom -> i
    int mThumbMarginLeft -> j
    int mThumbMarginRight -> k
    int mThumbWidth -> l
    int mThumbHeight -> m
    float density -> n
    int mVelocity -> o
    float mRadius -> p
    float mMeasureFactor -> q
    android.graphics.Rect mInsetBounds -> r
    com.kyleduo.switchbutton.Configuration getDefault(float) -> a
    void setOffDrawable(android.graphics.drawable.Drawable) -> a
    void setOnDrawable(android.graphics.drawable.Drawable) -> b
    android.graphics.drawable.Drawable getOnDrawable() -> a
    android.graphics.drawable.Drawable getOffDrawable() -> b
    void setThumbDrawable(android.graphics.drawable.Drawable) -> c
    android.graphics.drawable.Drawable getThumbDrawable() -> c
    void setThumbMarginInPixel(int,int,int,int) -> a
    void setThumbMarginInPixel(int) -> a
    int getDefaultThumbMarginInPixel() -> d
    int getThumbMarginTop() -> e
    int getThumbMarginBottom() -> f
    int getThumbMarginLeft() -> g
    int getThumbMarginRight() -> h
    void setRadius(float) -> b
    float getRadius() -> i
    void setThumbWidthAndHeightInPixel(int,int) -> a
    float getMeasureFactor() -> j
    void setMeasureFactor(float) -> c
    android.graphics.Rect getInsetBounds() -> k
    void setInsetBounds(int,int,int,int) -> b
    int getInsetX() -> l
    int getInsetY() -> m
    int getShrinkX() -> n
    int getShrinkY() -> o
    boolean needShrink() -> p
    int getThumbWidth() -> q
    int getThumbHeight() -> r
com.kyleduo.switchbutton.Configuration$Default -> com.kyleduo.switchbutton.f:
    int DEFAULT_OFF_COLOR -> a
    int DEFAULT_ON_COLOR -> b
    int DEFAULT_THUMB_COLOR -> c
    int DEFAULT_THUMB_PRESSED_COLOR -> d
    int DEFAULT_THUMB_MARGIN -> e
    int DEFAULT_RADIUS -> f
    float DEFAULT_MEASURE_FACTOR -> g
    int DEFAULT_INNER_BOUNDS -> h
com.kyleduo.switchbutton.Configuration$Limit -> com.kyleduo.switchbutton.g:
    int MIN_THUMB_SIZE -> a
com.kyleduo.switchbutton.SwitchButton -> com.kyleduo.switchbutton.SwitchButton:
    boolean SHOW_RECT -> a
    boolean mIsChecked -> b
    com.kyleduo.switchbutton.Configuration mConf -> c
    android.graphics.Rect mSafeZone -> d
    android.graphics.Rect mBackZone -> e
    android.graphics.Rect mThumbZone -> f
    android.graphics.RectF mSaveLayerZone -> g
    com.kyleduo.switchbutton.AnimationController mAnimationController -> h
    com.kyleduo.switchbutton.SwitchButton$SBAnimationListener mOnAnimateListener -> i
    boolean isAnimating -> j
    float mStartX -> k
    float mStartY -> l
    float mLastX -> m
    float mCenterPos -> n
    int mTouchSlop -> o
    int mClickTimeout -> p
    android.graphics.Paint mRectPaint -> q
    android.graphics.Rect mBounds -> r
    android.widget.CompoundButton$OnCheckedChangeListener mOnCheckedChangeListener -> s
    android.graphics.drawable.Drawable fetchDrawable(android.content.res.TypedArray,int,int,int) -> a
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean getStatusBasedOnPos() -> a
    void invalidate() -> invalidate
    boolean performClick() -> performClick
    void setChecked(boolean) -> setChecked
    boolean isChecked() -> isChecked
    void toggle() -> toggle
    void drawableStateChanged() -> drawableStateChanged
    void setDrawableState(android.graphics.drawable.Drawable) -> a
    void setOnCheckedChangeListener(android.widget.CompoundButton$OnCheckedChangeListener) -> setOnCheckedChangeListener
    void setCheckedInClass$25decb5(boolean) -> a
    void slideToChecked(boolean) -> b
    void moveThumb(int) -> a
    void access$0(com.kyleduo.switchbutton.SwitchButton,boolean) -> a
    android.graphics.Rect access$1(com.kyleduo.switchbutton.SwitchButton) -> a
    android.graphics.Rect access$2(com.kyleduo.switchbutton.SwitchButton) -> b
    void access$3(com.kyleduo.switchbutton.SwitchButton,int) -> a
    boolean access$4(com.kyleduo.switchbutton.SwitchButton) -> c
    void access$5(com.kyleduo.switchbutton.SwitchButton,boolean) -> b
com.kyleduo.switchbutton.SwitchButton$SBAnimationListener -> com.kyleduo.switchbutton.h:
    com.kyleduo.switchbutton.SwitchButton this$0 -> a
    void onAnimationStart() -> a
    boolean continueAnimating() -> b
    void onFrameUpdate(int) -> a
    void onAnimateComplete() -> c
com.nineoldandroids.animation.Animator -> com.nineoldandroids.animation.Animator:
    java.util.ArrayList mListeners -> mListeners
    void start() -> start
    void cancel() -> cancel
    void end() -> end
    long getStartDelay() -> getStartDelay
    void setStartDelay(long) -> setStartDelay
    com.nineoldandroids.animation.Animator setDuration(long) -> setDuration
    long getDuration() -> getDuration
    void setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    boolean isRunning() -> isRunning
    boolean isStarted() -> isStarted
    void addListener(com.nineoldandroids.animation.Animator$AnimatorListener) -> addListener
    void removeListener(com.nineoldandroids.animation.Animator$AnimatorListener) -> removeListener
    java.util.ArrayList getListeners() -> getListeners
    void removeAllListeners() -> removeAllListeners
    com.nineoldandroids.animation.Animator clone() -> clone
    void setupStartValues() -> setupStartValues
    void setupEndValues() -> setupEndValues
    void setTarget(java.lang.Object) -> setTarget
    java.lang.Object clone() -> clone
com.nineoldandroids.animation.Animator$AnimatorListener -> com.nineoldandroids.animation.Animator$AnimatorListener:
    void onAnimationStart(com.nineoldandroids.animation.Animator) -> onAnimationStart
    void onAnimationEnd(com.nineoldandroids.animation.Animator) -> onAnimationEnd
    void onAnimationCancel(com.nineoldandroids.animation.Animator) -> onAnimationCancel
    void onAnimationRepeat(com.nineoldandroids.animation.Animator) -> onAnimationRepeat
com.nineoldandroids.animation.AnimatorInflater -> com.nineoldandroids.animation.AnimatorInflater:
    int[] AnimatorSet -> AnimatorSet
    int AnimatorSet_ordering -> AnimatorSet_ordering
    int[] PropertyAnimator -> PropertyAnimator
    int PropertyAnimator_propertyName -> PropertyAnimator_propertyName
    int[] Animator -> Animator
    int Animator_interpolator -> Animator_interpolator
    int Animator_duration -> Animator_duration
    int Animator_startOffset -> Animator_startOffset
    int Animator_repeatCount -> Animator_repeatCount
    int Animator_repeatMode -> Animator_repeatMode
    int Animator_valueFrom -> Animator_valueFrom
    int Animator_valueTo -> Animator_valueTo
    int Animator_valueType -> Animator_valueType
    int TOGETHER -> TOGETHER
    int VALUE_TYPE_FLOAT -> VALUE_TYPE_FLOAT
    com.nineoldandroids.animation.Animator loadAnimator(android.content.Context,int) -> loadAnimator
    com.nineoldandroids.animation.Animator createAnimatorFromXml(android.content.Context,org.xmlpull.v1.XmlPullParser) -> createAnimatorFromXml
    com.nineoldandroids.animation.Animator createAnimatorFromXml(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,com.nineoldandroids.animation.AnimatorSet,int) -> createAnimatorFromXml
    com.nineoldandroids.animation.ObjectAnimator loadObjectAnimator(android.content.Context,android.util.AttributeSet) -> loadObjectAnimator
    com.nineoldandroids.animation.ValueAnimator loadAnimator(android.content.Context,android.util.AttributeSet,com.nineoldandroids.animation.ValueAnimator) -> loadAnimator
com.nineoldandroids.animation.AnimatorListenerAdapter -> com.nineoldandroids.animation.AnimatorListenerAdapter:
    void onAnimationCancel(com.nineoldandroids.animation.Animator) -> onAnimationCancel
    void onAnimationEnd(com.nineoldandroids.animation.Animator) -> onAnimationEnd
    void onAnimationRepeat(com.nineoldandroids.animation.Animator) -> onAnimationRepeat
    void onAnimationStart(com.nineoldandroids.animation.Animator) -> onAnimationStart
com.nineoldandroids.animation.AnimatorSet -> com.nineoldandroids.animation.AnimatorSet:
    java.util.ArrayList mPlayingSet -> mPlayingSet
    java.util.HashMap mNodeMap -> mNodeMap
    java.util.ArrayList mNodes -> mNodes
    java.util.ArrayList mSortedNodes -> mSortedNodes
    boolean mNeedsSort -> mNeedsSort
    com.nineoldandroids.animation.AnimatorSet$AnimatorSetListener mSetListener -> mSetListener
    boolean mTerminated -> mTerminated
    boolean mStarted -> mStarted
    long mStartDelay -> mStartDelay
    com.nineoldandroids.animation.ValueAnimator mDelayAnim -> mDelayAnim
    long mDuration -> mDuration
    void playTogether(com.nineoldandroids.animation.Animator[]) -> playTogether
    void playTogether(java.util.Collection) -> playTogether
    void playSequentially(com.nineoldandroids.animation.Animator[]) -> playSequentially
    void playSequentially(java.util.List) -> playSequentially
    java.util.ArrayList getChildAnimations() -> getChildAnimations
    void setTarget(java.lang.Object) -> setTarget
    void setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    com.nineoldandroids.animation.AnimatorSet$Builder play(com.nineoldandroids.animation.Animator) -> play
    void cancel() -> cancel
    void end() -> end
    boolean isRunning() -> isRunning
    boolean isStarted() -> isStarted
    long getStartDelay() -> getStartDelay
    void setStartDelay(long) -> setStartDelay
    long getDuration() -> getDuration
    com.nineoldandroids.animation.AnimatorSet setDuration(long) -> setDuration
    void setupStartValues() -> setupStartValues
    void setupEndValues() -> setupEndValues
    void start() -> start
    com.nineoldandroids.animation.AnimatorSet clone() -> clone
    void sortNodes() -> sortNodes
    com.nineoldandroids.animation.Animator clone() -> clone
    com.nineoldandroids.animation.Animator setDuration(long) -> setDuration
    java.lang.Object clone() -> clone
    java.util.ArrayList access$000(com.nineoldandroids.animation.AnimatorSet) -> access$000
    java.util.HashMap access$100(com.nineoldandroids.animation.AnimatorSet) -> access$100
    java.util.ArrayList access$200(com.nineoldandroids.animation.AnimatorSet) -> access$200
    boolean access$302(com.nineoldandroids.animation.AnimatorSet,boolean) -> access$302
    java.util.ArrayList access$400(com.nineoldandroids.animation.AnimatorSet) -> access$400
com.nineoldandroids.animation.AnimatorSet$1 -> com.nineoldandroids.animation.AnimatorSet$1:
    boolean canceled -> canceled
    java.util.ArrayList val$nodesToStart -> val$nodesToStart
    com.nineoldandroids.animation.AnimatorSet this$0 -> this$0
    void onAnimationCancel(com.nineoldandroids.animation.Animator) -> onAnimationCancel
    void onAnimationEnd(com.nineoldandroids.animation.Animator) -> onAnimationEnd
com.nineoldandroids.animation.AnimatorSet$AnimatorSetListener -> com.nineoldandroids.animation.AnimatorSet$AnimatorSetListener:
    com.nineoldandroids.animation.AnimatorSet mAnimatorSet -> mAnimatorSet
    com.nineoldandroids.animation.AnimatorSet this$0 -> this$0
    void onAnimationCancel(com.nineoldandroids.animation.Animator) -> onAnimationCancel
    void onAnimationEnd(com.nineoldandroids.animation.Animator) -> onAnimationEnd
    void onAnimationRepeat(com.nineoldandroids.animation.Animator) -> onAnimationRepeat
    void onAnimationStart(com.nineoldandroids.animation.Animator) -> onAnimationStart
com.nineoldandroids.animation.AnimatorSet$Builder -> com.nineoldandroids.animation.AnimatorSet$Builder:
    com.nineoldandroids.animation.AnimatorSet$Node mCurrentNode -> mCurrentNode
    com.nineoldandroids.animation.AnimatorSet this$0 -> this$0
    com.nineoldandroids.animation.AnimatorSet$Builder with(com.nineoldandroids.animation.Animator) -> with
    com.nineoldandroids.animation.AnimatorSet$Builder before(com.nineoldandroids.animation.Animator) -> before
    com.nineoldandroids.animation.AnimatorSet$Builder after(com.nineoldandroids.animation.Animator) -> after
    com.nineoldandroids.animation.AnimatorSet$Builder after(long) -> after
com.nineoldandroids.animation.AnimatorSet$Dependency -> com.nineoldandroids.animation.AnimatorSet$Dependency:
    int WITH -> WITH
    int AFTER -> AFTER
    com.nineoldandroids.animation.AnimatorSet$Node node -> node
    int rule -> rule
com.nineoldandroids.animation.AnimatorSet$DependencyListener -> com.nineoldandroids.animation.AnimatorSet$DependencyListener:
    com.nineoldandroids.animation.AnimatorSet mAnimatorSet -> mAnimatorSet
    com.nineoldandroids.animation.AnimatorSet$Node mNode -> mNode
    int mRule -> mRule
    void onAnimationCancel(com.nineoldandroids.animation.Animator) -> onAnimationCancel
    void onAnimationEnd(com.nineoldandroids.animation.Animator) -> onAnimationEnd
    void onAnimationRepeat(com.nineoldandroids.animation.Animator) -> onAnimationRepeat
    void onAnimationStart(com.nineoldandroids.animation.Animator) -> onAnimationStart
    void startIfReady(com.nineoldandroids.animation.Animator) -> startIfReady
com.nineoldandroids.animation.AnimatorSet$Node -> com.nineoldandroids.animation.AnimatorSet$Node:
    com.nineoldandroids.animation.Animator animation -> animation
    java.util.ArrayList dependencies -> dependencies
    java.util.ArrayList tmpDependencies -> tmpDependencies
    java.util.ArrayList nodeDependencies -> nodeDependencies
    java.util.ArrayList nodeDependents -> nodeDependents
    boolean done -> done
    void addDependency(com.nineoldandroids.animation.AnimatorSet$Dependency) -> addDependency
    com.nineoldandroids.animation.AnimatorSet$Node clone() -> clone
    java.lang.Object clone() -> clone
com.nineoldandroids.animation.ArgbEvaluator -> com.nineoldandroids.animation.ArgbEvaluator:
    java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
com.nineoldandroids.animation.FloatEvaluator -> com.nineoldandroids.animation.FloatEvaluator:
    java.lang.Float evaluate(float,java.lang.Number,java.lang.Number) -> evaluate
    java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
com.nineoldandroids.animation.FloatKeyframeSet -> com.nineoldandroids.animation.FloatKeyframeSet:
    float firstValue -> firstValue
    float lastValue -> lastValue
    float deltaValue -> deltaValue
    boolean firstTime -> firstTime
    java.lang.Object getValue(float) -> getValue
    com.nineoldandroids.animation.FloatKeyframeSet clone() -> clone
    float getFloatValue(float) -> getFloatValue
    com.nineoldandroids.animation.KeyframeSet clone() -> clone
    java.lang.Object clone() -> clone
com.nineoldandroids.animation.IntEvaluator -> com.nineoldandroids.animation.IntEvaluator:
    java.lang.Integer evaluate(float,java.lang.Integer,java.lang.Integer) -> evaluate
    java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
com.nineoldandroids.animation.IntKeyframeSet -> com.nineoldandroids.animation.IntKeyframeSet:
    int firstValue -> firstValue
    int lastValue -> lastValue
    int deltaValue -> deltaValue
    boolean firstTime -> firstTime
    java.lang.Object getValue(float) -> getValue
    com.nineoldandroids.animation.IntKeyframeSet clone() -> clone
    int getIntValue(float) -> getIntValue
    com.nineoldandroids.animation.KeyframeSet clone() -> clone
    java.lang.Object clone() -> clone
com.nineoldandroids.animation.Keyframe -> com.nineoldandroids.animation.Keyframe:
    float mFraction -> mFraction
    java.lang.Class mValueType -> mValueType
    android.view.animation.Interpolator mInterpolator -> mInterpolator
    boolean mHasValue -> mHasValue
    com.nineoldandroids.animation.Keyframe ofInt(float,int) -> ofInt
    com.nineoldandroids.animation.Keyframe ofInt(float) -> ofInt
    com.nineoldandroids.animation.Keyframe ofFloat(float,float) -> ofFloat
    com.nineoldandroids.animation.Keyframe ofFloat(float) -> ofFloat
    com.nineoldandroids.animation.Keyframe ofObject(float,java.lang.Object) -> ofObject
    com.nineoldandroids.animation.Keyframe ofObject(float) -> ofObject
    boolean hasValue() -> hasValue
    java.lang.Object getValue() -> getValue
    void setValue(java.lang.Object) -> setValue
    float getFraction() -> getFraction
    void setFraction(float) -> setFraction
    android.view.animation.Interpolator getInterpolator() -> getInterpolator
    void setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    java.lang.Class getType() -> getType
    com.nineoldandroids.animation.Keyframe clone() -> clone
    java.lang.Object clone() -> clone
com.nineoldandroids.animation.Keyframe$FloatKeyframe -> com.nineoldandroids.animation.Keyframe$FloatKeyframe:
    float mValue -> mValue
    float getFloatValue() -> getFloatValue
    java.lang.Object getValue() -> getValue
    void setValue(java.lang.Object) -> setValue
    com.nineoldandroids.animation.Keyframe$FloatKeyframe clone() -> clone
    com.nineoldandroids.animation.Keyframe clone() -> clone
    java.lang.Object clone() -> clone
com.nineoldandroids.animation.Keyframe$IntKeyframe -> com.nineoldandroids.animation.Keyframe$IntKeyframe:
    int mValue -> mValue
    int getIntValue() -> getIntValue
    java.lang.Object getValue() -> getValue
    void setValue(java.lang.Object) -> setValue
    com.nineoldandroids.animation.Keyframe$IntKeyframe clone() -> clone
    com.nineoldandroids.animation.Keyframe clone() -> clone
    java.lang.Object clone() -> clone
com.nineoldandroids.animation.Keyframe$ObjectKeyframe -> com.nineoldandroids.animation.Keyframe$ObjectKeyframe:
    java.lang.Object mValue -> mValue
    java.lang.Object getValue() -> getValue
    void setValue(java.lang.Object) -> setValue
    com.nineoldandroids.animation.Keyframe$ObjectKeyframe clone() -> clone
    com.nineoldandroids.animation.Keyframe clone() -> clone
    java.lang.Object clone() -> clone
com.nineoldandroids.animation.KeyframeSet -> com.nineoldandroids.animation.KeyframeSet:
    int mNumKeyframes -> mNumKeyframes
    com.nineoldandroids.animation.Keyframe mFirstKeyframe -> mFirstKeyframe
    com.nineoldandroids.animation.Keyframe mLastKeyframe -> mLastKeyframe
    android.view.animation.Interpolator mInterpolator -> mInterpolator
    java.util.ArrayList mKeyframes -> mKeyframes
    com.nineoldandroids.animation.TypeEvaluator mEvaluator -> mEvaluator
    com.nineoldandroids.animation.KeyframeSet ofInt(int[]) -> ofInt
    com.nineoldandroids.animation.KeyframeSet ofFloat(float[]) -> ofFloat
    com.nineoldandroids.animation.KeyframeSet ofKeyframe(com.nineoldandroids.animation.Keyframe[]) -> ofKeyframe
    com.nineoldandroids.animation.KeyframeSet ofObject(java.lang.Object[]) -> ofObject
    void setEvaluator(com.nineoldandroids.animation.TypeEvaluator) -> setEvaluator
    com.nineoldandroids.animation.KeyframeSet clone() -> clone
    java.lang.Object getValue(float) -> getValue
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
com.nineoldandroids.animation.ObjectAnimator -> com.nineoldandroids.animation.ObjectAnimator:
    boolean DBG -> DBG
    java.util.Map PROXY_PROPERTIES -> PROXY_PROPERTIES
    java.lang.Object mTarget -> mTarget
    java.lang.String mPropertyName -> mPropertyName
    com.nineoldandroids.util.Property mProperty -> mProperty
    void setPropertyName(java.lang.String) -> setPropertyName
    void setProperty(com.nineoldandroids.util.Property) -> setProperty
    java.lang.String getPropertyName() -> getPropertyName
    com.nineoldandroids.animation.ObjectAnimator ofInt(java.lang.Object,java.lang.String,int[]) -> ofInt
    com.nineoldandroids.animation.ObjectAnimator ofInt(java.lang.Object,com.nineoldandroids.util.Property,int[]) -> ofInt
    com.nineoldandroids.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,float[]) -> ofFloat
    com.nineoldandroids.animation.ObjectAnimator ofFloat(java.lang.Object,com.nineoldandroids.util.Property,float[]) -> ofFloat
    com.nineoldandroids.animation.ObjectAnimator ofObject(java.lang.Object,java.lang.String,com.nineoldandroids.animation.TypeEvaluator,java.lang.Object[]) -> ofObject
    com.nineoldandroids.animation.ObjectAnimator ofObject(java.lang.Object,com.nineoldandroids.util.Property,com.nineoldandroids.animation.TypeEvaluator,java.lang.Object[]) -> ofObject
    com.nineoldandroids.animation.ObjectAnimator ofPropertyValuesHolder(java.lang.Object,com.nineoldandroids.animation.PropertyValuesHolder[]) -> ofPropertyValuesHolder
    void setIntValues(int[]) -> setIntValues
    void setFloatValues(float[]) -> setFloatValues
    void setObjectValues(java.lang.Object[]) -> setObjectValues
    void start() -> start
    void initAnimation() -> initAnimation
    com.nineoldandroids.animation.ObjectAnimator setDuration(long) -> setDuration
    java.lang.Object getTarget() -> getTarget
    void setTarget(java.lang.Object) -> setTarget
    void setupStartValues() -> setupStartValues
    void setupEndValues() -> setupEndValues
    void animateValue(float) -> animateValue
    com.nineoldandroids.animation.ObjectAnimator clone() -> clone
    java.lang.String toString() -> toString
    com.nineoldandroids.animation.ValueAnimator clone() -> clone
    com.nineoldandroids.animation.ValueAnimator setDuration(long) -> setDuration
    com.nineoldandroids.animation.Animator clone() -> clone
    com.nineoldandroids.animation.Animator setDuration(long) -> setDuration
    java.lang.Object clone() -> clone
com.nineoldandroids.animation.PreHoneycombCompat -> com.nineoldandroids.animation.PreHoneycombCompat:
    com.nineoldandroids.util.Property ALPHA -> ALPHA
    com.nineoldandroids.util.Property PIVOT_X -> PIVOT_X
    com.nineoldandroids.util.Property PIVOT_Y -> PIVOT_Y
    com.nineoldandroids.util.Property TRANSLATION_X -> TRANSLATION_X
    com.nineoldandroids.util.Property TRANSLATION_Y -> TRANSLATION_Y
    com.nineoldandroids.util.Property ROTATION -> ROTATION
    com.nineoldandroids.util.Property ROTATION_X -> ROTATION_X
    com.nineoldandroids.util.Property ROTATION_Y -> ROTATION_Y
    com.nineoldandroids.util.Property SCALE_X -> SCALE_X
    com.nineoldandroids.util.Property SCALE_Y -> SCALE_Y
    com.nineoldandroids.util.Property SCROLL_X -> SCROLL_X
    com.nineoldandroids.util.Property SCROLL_Y -> SCROLL_Y
    com.nineoldandroids.util.Property X -> X
    com.nineoldandroids.util.Property Y -> Y
com.nineoldandroids.animation.PreHoneycombCompat$1 -> com.nineoldandroids.animation.PreHoneycombCompat$1:
    void setValue(android.view.View,float) -> setValue
    java.lang.Float get(android.view.View) -> get
    void setValue(java.lang.Object,float) -> setValue
    java.lang.Object get(java.lang.Object) -> get
com.nineoldandroids.animation.PreHoneycombCompat$10 -> com.nineoldandroids.animation.PreHoneycombCompat$10:
    void setValue(android.view.View,float) -> setValue
    java.lang.Float get(android.view.View) -> get
    void setValue(java.lang.Object,float) -> setValue
    java.lang.Object get(java.lang.Object) -> get
com.nineoldandroids.animation.PreHoneycombCompat$11 -> com.nineoldandroids.animation.PreHoneycombCompat$11:
    void setValue(android.view.View,int) -> setValue
    java.lang.Integer get(android.view.View) -> get
    void setValue(java.lang.Object,int) -> setValue
    java.lang.Object get(java.lang.Object) -> get
com.nineoldandroids.animation.PreHoneycombCompat$12 -> com.nineoldandroids.animation.PreHoneycombCompat$12:
    void setValue(android.view.View,int) -> setValue
    java.lang.Integer get(android.view.View) -> get
    void setValue(java.lang.Object,int) -> setValue
    java.lang.Object get(java.lang.Object) -> get
com.nineoldandroids.animation.PreHoneycombCompat$13 -> com.nineoldandroids.animation.PreHoneycombCompat$13:
    void setValue(android.view.View,float) -> setValue
    java.lang.Float get(android.view.View) -> get
    void setValue(java.lang.Object,float) -> setValue
    java.lang.Object get(java.lang.Object) -> get
com.nineoldandroids.animation.PreHoneycombCompat$14 -> com.nineoldandroids.animation.PreHoneycombCompat$14:
    void setValue(android.view.View,float) -> setValue
    java.lang.Float get(android.view.View) -> get
    void setValue(java.lang.Object,float) -> setValue
    java.lang.Object get(java.lang.Object) -> get
com.nineoldandroids.animation.PreHoneycombCompat$2 -> com.nineoldandroids.animation.PreHoneycombCompat$2:
    void setValue(android.view.View,float) -> setValue
    java.lang.Float get(android.view.View) -> get
    void setValue(java.lang.Object,float) -> setValue
    java.lang.Object get(java.lang.Object) -> get
com.nineoldandroids.animation.PreHoneycombCompat$3 -> com.nineoldandroids.animation.PreHoneycombCompat$3:
    void setValue(android.view.View,float) -> setValue
    java.lang.Float get(android.view.View) -> get
    void setValue(java.lang.Object,float) -> setValue
    java.lang.Object get(java.lang.Object) -> get
com.nineoldandroids.animation.PreHoneycombCompat$4 -> com.nineoldandroids.animation.PreHoneycombCompat$4:
    void setValue(android.view.View,float) -> setValue
    java.lang.Float get(android.view.View) -> get
    void setValue(java.lang.Object,float) -> setValue
    java.lang.Object get(java.lang.Object) -> get
com.nineoldandroids.animation.PreHoneycombCompat$5 -> com.nineoldandroids.animation.PreHoneycombCompat$5:
    void setValue(android.view.View,float) -> setValue
    java.lang.Float get(android.view.View) -> get
    void setValue(java.lang.Object,float) -> setValue
    java.lang.Object get(java.lang.Object) -> get
com.nineoldandroids.animation.PreHoneycombCompat$6 -> com.nineoldandroids.animation.PreHoneycombCompat$6:
    void setValue(android.view.View,float) -> setValue
    java.lang.Float get(android.view.View) -> get
    void setValue(java.lang.Object,float) -> setValue
    java.lang.Object get(java.lang.Object) -> get
com.nineoldandroids.animation.PreHoneycombCompat$7 -> com.nineoldandroids.animation.PreHoneycombCompat$7:
    void setValue(android.view.View,float) -> setValue
    java.lang.Float get(android.view.View) -> get
    void setValue(java.lang.Object,float) -> setValue
    java.lang.Object get(java.lang.Object) -> get
com.nineoldandroids.animation.PreHoneycombCompat$8 -> com.nineoldandroids.animation.PreHoneycombCompat$8:
    void setValue(android.view.View,float) -> setValue
    java.lang.Float get(android.view.View) -> get
    void setValue(java.lang.Object,float) -> setValue
    java.lang.Object get(java.lang.Object) -> get
com.nineoldandroids.animation.PreHoneycombCompat$9 -> com.nineoldandroids.animation.PreHoneycombCompat$9:
    void setValue(android.view.View,float) -> setValue
    java.lang.Float get(android.view.View) -> get
    void setValue(java.lang.Object,float) -> setValue
    java.lang.Object get(java.lang.Object) -> get
com.nineoldandroids.animation.PropertyValuesHolder -> com.nineoldandroids.animation.PropertyValuesHolder:
    java.lang.String mPropertyName -> mPropertyName
    com.nineoldandroids.util.Property mProperty -> mProperty
    java.lang.reflect.Method mSetter -> mSetter
    java.lang.reflect.Method mGetter -> mGetter
    java.lang.Class mValueType -> mValueType
    com.nineoldandroids.animation.KeyframeSet mKeyframeSet -> mKeyframeSet
    com.nineoldandroids.animation.TypeEvaluator sIntEvaluator -> sIntEvaluator
    com.nineoldandroids.animation.TypeEvaluator sFloatEvaluator -> sFloatEvaluator
    java.lang.Class[] FLOAT_VARIANTS -> FLOAT_VARIANTS
    java.lang.Class[] INTEGER_VARIANTS -> INTEGER_VARIANTS
    java.lang.Class[] DOUBLE_VARIANTS -> DOUBLE_VARIANTS
    java.util.HashMap sSetterPropertyMap -> sSetterPropertyMap
    java.util.HashMap sGetterPropertyMap -> sGetterPropertyMap
    java.util.concurrent.locks.ReentrantReadWriteLock mPropertyMapLock -> mPropertyMapLock
    java.lang.Object[] mTmpValueArray -> mTmpValueArray
    com.nineoldandroids.animation.TypeEvaluator mEvaluator -> mEvaluator
    java.lang.Object mAnimatedValue -> mAnimatedValue
    com.nineoldandroids.animation.PropertyValuesHolder ofInt(java.lang.String,int[]) -> ofInt
    com.nineoldandroids.animation.PropertyValuesHolder ofInt(com.nineoldandroids.util.Property,int[]) -> ofInt
    com.nineoldandroids.animation.PropertyValuesHolder ofFloat(java.lang.String,float[]) -> ofFloat
    com.nineoldandroids.animation.PropertyValuesHolder ofFloat(com.nineoldandroids.util.Property,float[]) -> ofFloat
    com.nineoldandroids.animation.PropertyValuesHolder ofObject(java.lang.String,com.nineoldandroids.animation.TypeEvaluator,java.lang.Object[]) -> ofObject
    com.nineoldandroids.animation.PropertyValuesHolder ofObject(com.nineoldandroids.util.Property,com.nineoldandroids.animation.TypeEvaluator,java.lang.Object[]) -> ofObject
    com.nineoldandroids.animation.PropertyValuesHolder ofKeyframe(java.lang.String,com.nineoldandroids.animation.Keyframe[]) -> ofKeyframe
    com.nineoldandroids.animation.PropertyValuesHolder ofKeyframe(com.nineoldandroids.util.Property,com.nineoldandroids.animation.Keyframe[]) -> ofKeyframe
    void setIntValues(int[]) -> setIntValues
    void setFloatValues(float[]) -> setFloatValues
    void setKeyframes(com.nineoldandroids.animation.Keyframe[]) -> setKeyframes
    void setObjectValues(java.lang.Object[]) -> setObjectValues
    java.lang.reflect.Method getPropertyFunction(java.lang.Class,java.lang.String,java.lang.Class) -> getPropertyFunction
    java.lang.reflect.Method setupSetterOrGetter(java.lang.Class,java.util.HashMap,java.lang.String,java.lang.Class) -> setupSetterOrGetter
    void setupSetter(java.lang.Class) -> setupSetter
    void setupGetter(java.lang.Class) -> setupGetter
    void setupSetterAndGetter(java.lang.Object) -> setupSetterAndGetter
    void setupValue(java.lang.Object,com.nineoldandroids.animation.Keyframe) -> setupValue
    void setupStartValue(java.lang.Object) -> setupStartValue
    void setupEndValue(java.lang.Object) -> setupEndValue
    com.nineoldandroids.animation.PropertyValuesHolder clone() -> clone
    void setAnimatedValue(java.lang.Object) -> setAnimatedValue
    void init() -> init
    void setEvaluator(com.nineoldandroids.animation.TypeEvaluator) -> setEvaluator
    void calculateValue(float) -> calculateValue
    void setPropertyName(java.lang.String) -> setPropertyName
    void setProperty(com.nineoldandroids.util.Property) -> setProperty
    java.lang.String getPropertyName() -> getPropertyName
    java.lang.Object getAnimatedValue() -> getAnimatedValue
    java.lang.String toString() -> toString
    java.lang.String getMethodName(java.lang.String,java.lang.String) -> getMethodName
    java.lang.Object clone() -> clone
com.nineoldandroids.animation.PropertyValuesHolder$1 -> com.nineoldandroids.animation.PropertyValuesHolder$1:
com.nineoldandroids.animation.PropertyValuesHolder$FloatPropertyValuesHolder -> com.nineoldandroids.animation.PropertyValuesHolder$FloatPropertyValuesHolder:
    com.nineoldandroids.util.FloatProperty mFloatProperty -> mFloatProperty
    com.nineoldandroids.animation.FloatKeyframeSet mFloatKeyframeSet -> mFloatKeyframeSet
    float mFloatAnimatedValue -> mFloatAnimatedValue
    void setFloatValues(float[]) -> setFloatValues
    void calculateValue(float) -> calculateValue
    java.lang.Object getAnimatedValue() -> getAnimatedValue
    com.nineoldandroids.animation.PropertyValuesHolder$FloatPropertyValuesHolder clone() -> clone
    void setAnimatedValue(java.lang.Object) -> setAnimatedValue
    void setupSetter(java.lang.Class) -> setupSetter
    com.nineoldandroids.animation.PropertyValuesHolder clone() -> clone
    java.lang.Object clone() -> clone
com.nineoldandroids.animation.PropertyValuesHolder$IntPropertyValuesHolder -> com.nineoldandroids.animation.PropertyValuesHolder$IntPropertyValuesHolder:
    com.nineoldandroids.util.IntProperty mIntProperty -> mIntProperty
    com.nineoldandroids.animation.IntKeyframeSet mIntKeyframeSet -> mIntKeyframeSet
    int mIntAnimatedValue -> mIntAnimatedValue
    void setIntValues(int[]) -> setIntValues
    void calculateValue(float) -> calculateValue
    java.lang.Object getAnimatedValue() -> getAnimatedValue
    com.nineoldandroids.animation.PropertyValuesHolder$IntPropertyValuesHolder clone() -> clone
    void setAnimatedValue(java.lang.Object) -> setAnimatedValue
    void setupSetter(java.lang.Class) -> setupSetter
    com.nineoldandroids.animation.PropertyValuesHolder clone() -> clone
    java.lang.Object clone() -> clone
com.nineoldandroids.animation.TimeAnimator -> com.nineoldandroids.animation.TimeAnimator:
    com.nineoldandroids.animation.TimeAnimator$TimeListener mListener -> mListener
    long mPreviousTime -> mPreviousTime
    boolean animationFrame(long) -> animationFrame
    void setTimeListener(com.nineoldandroids.animation.TimeAnimator$TimeListener) -> setTimeListener
    void animateValue(float) -> animateValue
    void initAnimation() -> initAnimation
com.nineoldandroids.animation.TimeAnimator$TimeListener -> com.nineoldandroids.animation.TimeAnimator$TimeListener:
    void onTimeUpdate(com.nineoldandroids.animation.TimeAnimator,long,long) -> onTimeUpdate
com.nineoldandroids.animation.TypeEvaluator -> com.nineoldandroids.animation.TypeEvaluator:
    java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
com.nineoldandroids.animation.ValueAnimator -> com.nineoldandroids.animation.ValueAnimator:
    long DEFAULT_FRAME_DELAY -> DEFAULT_FRAME_DELAY
    int ANIMATION_START -> ANIMATION_START
    int ANIMATION_FRAME -> ANIMATION_FRAME
    int STOPPED -> STOPPED
    int RUNNING -> RUNNING
    int SEEKED -> SEEKED
    long mStartTime -> mStartTime
    long mSeekTime -> mSeekTime
    java.lang.ThreadLocal sAnimationHandler -> sAnimationHandler
    java.lang.ThreadLocal sAnimations -> sAnimations
    java.lang.ThreadLocal sPendingAnimations -> sPendingAnimations
    java.lang.ThreadLocal sDelayedAnims -> sDelayedAnims
    java.lang.ThreadLocal sEndingAnims -> sEndingAnims
    java.lang.ThreadLocal sReadyAnims -> sReadyAnims
    android.view.animation.Interpolator sDefaultInterpolator -> sDefaultInterpolator
    com.nineoldandroids.animation.TypeEvaluator sIntEvaluator -> sIntEvaluator
    com.nineoldandroids.animation.TypeEvaluator sFloatEvaluator -> sFloatEvaluator
    boolean mPlayingBackwards -> mPlayingBackwards
    int mCurrentIteration -> mCurrentIteration
    float mCurrentFraction -> mCurrentFraction
    boolean mStartedDelay -> mStartedDelay
    long mDelayStartTime -> mDelayStartTime
    int mPlayingState -> mPlayingState
    boolean mRunning -> mRunning
    boolean mStarted -> mStarted
    boolean mInitialized -> mInitialized
    long mDuration -> mDuration
    long mStartDelay -> mStartDelay
    long sFrameDelay -> sFrameDelay
    int mRepeatCount -> mRepeatCount
    int mRepeatMode -> mRepeatMode
    android.view.animation.Interpolator mInterpolator -> mInterpolator
    java.util.ArrayList mUpdateListeners -> mUpdateListeners
    com.nineoldandroids.animation.PropertyValuesHolder[] mValues -> mValues
    java.util.HashMap mValuesMap -> mValuesMap
    int RESTART -> RESTART
    int REVERSE -> REVERSE
    int INFINITE -> INFINITE
    com.nineoldandroids.animation.ValueAnimator ofInt(int[]) -> ofInt
    com.nineoldandroids.animation.ValueAnimator ofFloat(float[]) -> ofFloat
    com.nineoldandroids.animation.ValueAnimator ofPropertyValuesHolder(com.nineoldandroids.animation.PropertyValuesHolder[]) -> ofPropertyValuesHolder
    com.nineoldandroids.animation.ValueAnimator ofObject(com.nineoldandroids.animation.TypeEvaluator,java.lang.Object[]) -> ofObject
    void setIntValues(int[]) -> setIntValues
    void setFloatValues(float[]) -> setFloatValues
    void setObjectValues(java.lang.Object[]) -> setObjectValues
    void setValues(com.nineoldandroids.animation.PropertyValuesHolder[]) -> setValues
    com.nineoldandroids.animation.PropertyValuesHolder[] getValues() -> getValues
    void initAnimation() -> initAnimation
    com.nineoldandroids.animation.ValueAnimator setDuration(long) -> setDuration
    long getDuration() -> getDuration
    void setCurrentPlayTime(long) -> setCurrentPlayTime
    long getCurrentPlayTime() -> getCurrentPlayTime
    long getStartDelay() -> getStartDelay
    void setStartDelay(long) -> setStartDelay
    long getFrameDelay() -> getFrameDelay
    void setFrameDelay(long) -> setFrameDelay
    java.lang.Object getAnimatedValue() -> getAnimatedValue
    java.lang.Object getAnimatedValue(java.lang.String) -> getAnimatedValue
    void setRepeatCount(int) -> setRepeatCount
    int getRepeatCount() -> getRepeatCount
    void setRepeatMode(int) -> setRepeatMode
    int getRepeatMode() -> getRepeatMode
    void addUpdateListener(com.nineoldandroids.animation.ValueAnimator$AnimatorUpdateListener) -> addUpdateListener
    void removeAllUpdateListeners() -> removeAllUpdateListeners
    void removeUpdateListener(com.nineoldandroids.animation.ValueAnimator$AnimatorUpdateListener) -> removeUpdateListener
    void setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    android.view.animation.Interpolator getInterpolator() -> getInterpolator
    void setEvaluator(com.nineoldandroids.animation.TypeEvaluator) -> setEvaluator
    void start(boolean) -> start
    void start() -> start
    void cancel() -> cancel
    void end() -> end
    boolean isRunning() -> isRunning
    boolean isStarted() -> isStarted
    void reverse() -> reverse
    void endAnimation() -> endAnimation
    void startAnimation() -> startAnimation
    boolean delayedAnimationFrame(long) -> delayedAnimationFrame
    boolean animationFrame(long) -> animationFrame
    float getAnimatedFraction() -> getAnimatedFraction
    void animateValue(float) -> animateValue
    com.nineoldandroids.animation.ValueAnimator clone() -> clone
    int getCurrentAnimationsCount() -> getCurrentAnimationsCount
    void clearAllAnimations() -> clearAllAnimations
    java.lang.String toString() -> toString
    com.nineoldandroids.animation.Animator clone() -> clone
    com.nineoldandroids.animation.Animator setDuration(long) -> setDuration
    java.lang.Object clone() -> clone
    java.lang.ThreadLocal access$000() -> access$000
    java.lang.ThreadLocal access$100() -> access$100
    java.lang.ThreadLocal access$200() -> access$200
    long access$300(com.nineoldandroids.animation.ValueAnimator) -> access$300
    void access$400(com.nineoldandroids.animation.ValueAnimator) -> access$400
    java.lang.ThreadLocal access$500() -> access$500
    java.lang.ThreadLocal access$600() -> access$600
    boolean access$700(com.nineoldandroids.animation.ValueAnimator,long) -> access$700
    boolean access$802(com.nineoldandroids.animation.ValueAnimator,boolean) -> access$802
    void access$900(com.nineoldandroids.animation.ValueAnimator) -> access$900
    long access$1000() -> access$1000
com.nineoldandroids.animation.ValueAnimator$1 -> com.nineoldandroids.animation.ValueAnimator$1:
    java.util.ArrayList initialValue() -> initialValue
    java.lang.Object initialValue() -> initialValue
com.nineoldandroids.animation.ValueAnimator$2 -> com.nineoldandroids.animation.ValueAnimator$2:
    java.util.ArrayList initialValue() -> initialValue
    java.lang.Object initialValue() -> initialValue
com.nineoldandroids.animation.ValueAnimator$3 -> com.nineoldandroids.animation.ValueAnimator$3:
    java.util.ArrayList initialValue() -> initialValue
    java.lang.Object initialValue() -> initialValue
com.nineoldandroids.animation.ValueAnimator$4 -> com.nineoldandroids.animation.ValueAnimator$4:
    java.util.ArrayList initialValue() -> initialValue
    java.lang.Object initialValue() -> initialValue
com.nineoldandroids.animation.ValueAnimator$5 -> com.nineoldandroids.animation.ValueAnimator$5:
    java.util.ArrayList initialValue() -> initialValue
    java.lang.Object initialValue() -> initialValue
com.nineoldandroids.animation.ValueAnimator$AnimationHandler -> com.nineoldandroids.animation.ValueAnimator$AnimationHandler:
    void handleMessage(android.os.Message) -> handleMessage
com.nineoldandroids.animation.ValueAnimator$AnimatorUpdateListener -> com.nineoldandroids.animation.ValueAnimator$AnimatorUpdateListener:
    void onAnimationUpdate(com.nineoldandroids.animation.ValueAnimator) -> onAnimationUpdate
com.nineoldandroids.util.FloatProperty -> com.nineoldandroids.util.FloatProperty:
    void setValue(java.lang.Object,float) -> setValue
    void set(java.lang.Object,java.lang.Float) -> set
    void set(java.lang.Object,java.lang.Object) -> set
com.nineoldandroids.util.IntProperty -> com.nineoldandroids.util.IntProperty:
    void setValue(java.lang.Object,int) -> setValue
    void set(java.lang.Object,java.lang.Integer) -> set
    void set(java.lang.Object,java.lang.Object) -> set
com.nineoldandroids.util.NoSuchPropertyException -> com.nineoldandroids.util.NoSuchPropertyException:
com.nineoldandroids.util.Property -> com.nineoldandroids.util.Property:
    java.lang.String mName -> mName
    java.lang.Class mType -> mType
    com.nineoldandroids.util.Property of(java.lang.Class,java.lang.Class,java.lang.String) -> of
    boolean isReadOnly() -> isReadOnly
    void set(java.lang.Object,java.lang.Object) -> set
    java.lang.Object get(java.lang.Object) -> get
    java.lang.String getName() -> getName
    java.lang.Class getType() -> getType
com.nineoldandroids.util.ReflectiveProperty -> com.nineoldandroids.util.ReflectiveProperty:
    java.lang.String PREFIX_GET -> PREFIX_GET
    java.lang.String PREFIX_IS -> PREFIX_IS
    java.lang.String PREFIX_SET -> PREFIX_SET
    java.lang.reflect.Method mSetter -> mSetter
    java.lang.reflect.Method mGetter -> mGetter
    java.lang.reflect.Field mField -> mField
    boolean typesMatch(java.lang.Class,java.lang.Class) -> typesMatch
    void set(java.lang.Object,java.lang.Object) -> set
    java.lang.Object get(java.lang.Object) -> get
    boolean isReadOnly() -> isReadOnly
com.nineoldandroids.view.ViewHelper -> com.nineoldandroids.view.ViewHelper:
    float getAlpha(android.view.View) -> getAlpha
    void setAlpha(android.view.View,float) -> setAlpha
    float getPivotX(android.view.View) -> getPivotX
    void setPivotX(android.view.View,float) -> setPivotX
    float getPivotY(android.view.View) -> getPivotY
    void setPivotY(android.view.View,float) -> setPivotY
    float getRotation(android.view.View) -> getRotation
    void setRotation(android.view.View,float) -> setRotation
    float getRotationX(android.view.View) -> getRotationX
    void setRotationX(android.view.View,float) -> setRotationX
    float getRotationY(android.view.View) -> getRotationY
    void setRotationY(android.view.View,float) -> setRotationY
    float getScaleX(android.view.View) -> getScaleX
    void setScaleX(android.view.View,float) -> setScaleX
    float getScaleY(android.view.View) -> getScaleY
    void setScaleY(android.view.View,float) -> setScaleY
    float getScrollX(android.view.View) -> getScrollX
    void setScrollX(android.view.View,int) -> setScrollX
    float getScrollY(android.view.View) -> getScrollY
    void setScrollY(android.view.View,int) -> setScrollY
    float getTranslationX(android.view.View) -> getTranslationX
    void setTranslationX(android.view.View,float) -> setTranslationX
    float getTranslationY(android.view.View) -> getTranslationY
    void setTranslationY(android.view.View,float) -> setTranslationY
    float getX(android.view.View) -> getX
    void setX(android.view.View,float) -> setX
    float getY(android.view.View) -> getY
    void setY(android.view.View,float) -> setY
com.nineoldandroids.view.ViewHelper$Honeycomb -> com.nineoldandroids.view.ViewHelper$Honeycomb:
    float getAlpha(android.view.View) -> getAlpha
    void setAlpha(android.view.View,float) -> setAlpha
    float getPivotX(android.view.View) -> getPivotX
    void setPivotX(android.view.View,float) -> setPivotX
    float getPivotY(android.view.View) -> getPivotY
    void setPivotY(android.view.View,float) -> setPivotY
    float getRotation(android.view.View) -> getRotation
    void setRotation(android.view.View,float) -> setRotation
    float getRotationX(android.view.View) -> getRotationX
    void setRotationX(android.view.View,float) -> setRotationX
    float getRotationY(android.view.View) -> getRotationY
    void setRotationY(android.view.View,float) -> setRotationY
    float getScaleX(android.view.View) -> getScaleX
    void setScaleX(android.view.View,float) -> setScaleX
    float getScaleY(android.view.View) -> getScaleY
    void setScaleY(android.view.View,float) -> setScaleY
    float getScrollX(android.view.View) -> getScrollX
    void setScrollX(android.view.View,int) -> setScrollX
    float getScrollY(android.view.View) -> getScrollY
    void setScrollY(android.view.View,int) -> setScrollY
    float getTranslationX(android.view.View) -> getTranslationX
    void setTranslationX(android.view.View,float) -> setTranslationX
    float getTranslationY(android.view.View) -> getTranslationY
    void setTranslationY(android.view.View,float) -> setTranslationY
    float getX(android.view.View) -> getX
    void setX(android.view.View,float) -> setX
    float getY(android.view.View) -> getY
    void setY(android.view.View,float) -> setY
com.nineoldandroids.view.ViewPropertyAnimator -> com.nineoldandroids.view.ViewPropertyAnimator:
    java.util.WeakHashMap ANIMATORS -> ANIMATORS
    com.nineoldandroids.view.ViewPropertyAnimator animate(android.view.View) -> animate
    com.nineoldandroids.view.ViewPropertyAnimator setDuration(long) -> setDuration
    long getDuration() -> getDuration
    long getStartDelay() -> getStartDelay
    com.nineoldandroids.view.ViewPropertyAnimator setStartDelay(long) -> setStartDelay
    com.nineoldandroids.view.ViewPropertyAnimator setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    com.nineoldandroids.view.ViewPropertyAnimator setListener(com.nineoldandroids.animation.Animator$AnimatorListener) -> setListener
    void start() -> start
    void cancel() -> cancel
    com.nineoldandroids.view.ViewPropertyAnimator x(float) -> x
    com.nineoldandroids.view.ViewPropertyAnimator xBy(float) -> xBy
    com.nineoldandroids.view.ViewPropertyAnimator y(float) -> y
    com.nineoldandroids.view.ViewPropertyAnimator yBy(float) -> yBy
    com.nineoldandroids.view.ViewPropertyAnimator rotation(float) -> rotation
    com.nineoldandroids.view.ViewPropertyAnimator rotationBy(float) -> rotationBy
    com.nineoldandroids.view.ViewPropertyAnimator rotationX(float) -> rotationX
    com.nineoldandroids.view.ViewPropertyAnimator rotationXBy(float) -> rotationXBy
    com.nineoldandroids.view.ViewPropertyAnimator rotationY(float) -> rotationY
    com.nineoldandroids.view.ViewPropertyAnimator rotationYBy(float) -> rotationYBy
    com.nineoldandroids.view.ViewPropertyAnimator translationX(float) -> translationX
    com.nineoldandroids.view.ViewPropertyAnimator translationXBy(float) -> translationXBy
    com.nineoldandroids.view.ViewPropertyAnimator translationY(float) -> translationY
    com.nineoldandroids.view.ViewPropertyAnimator translationYBy(float) -> translationYBy
    com.nineoldandroids.view.ViewPropertyAnimator scaleX(float) -> scaleX
    com.nineoldandroids.view.ViewPropertyAnimator scaleXBy(float) -> scaleXBy
    com.nineoldandroids.view.ViewPropertyAnimator scaleY(float) -> scaleY
    com.nineoldandroids.view.ViewPropertyAnimator scaleYBy(float) -> scaleYBy
    com.nineoldandroids.view.ViewPropertyAnimator alpha(float) -> alpha
    com.nineoldandroids.view.ViewPropertyAnimator alphaBy(float) -> alphaBy
com.nineoldandroids.view.ViewPropertyAnimatorHC -> com.nineoldandroids.view.ViewPropertyAnimatorHC:
    java.lang.ref.WeakReference mView -> mView
    long mDuration -> mDuration
    boolean mDurationSet -> mDurationSet
    long mStartDelay -> mStartDelay
    boolean mStartDelaySet -> mStartDelaySet
    android.view.animation.Interpolator mInterpolator -> mInterpolator
    boolean mInterpolatorSet -> mInterpolatorSet
    com.nineoldandroids.animation.Animator$AnimatorListener mListener -> mListener
    com.nineoldandroids.view.ViewPropertyAnimatorHC$AnimatorEventListener mAnimatorEventListener -> mAnimatorEventListener
    java.util.ArrayList mPendingAnimations -> mPendingAnimations
    int NONE -> NONE
    int TRANSLATION_X -> TRANSLATION_X
    int TRANSLATION_Y -> TRANSLATION_Y
    int SCALE_X -> SCALE_X
    int SCALE_Y -> SCALE_Y
    int ROTATION -> ROTATION
    int ROTATION_X -> ROTATION_X
    int ROTATION_Y -> ROTATION_Y
    int X -> X
    int Y -> Y
    int ALPHA -> ALPHA
    int TRANSFORM_MASK -> TRANSFORM_MASK
    java.lang.Runnable mAnimationStarter -> mAnimationStarter
    java.util.HashMap mAnimatorMap -> mAnimatorMap
    com.nineoldandroids.view.ViewPropertyAnimator setDuration(long) -> setDuration
    long getDuration() -> getDuration
    long getStartDelay() -> getStartDelay
    com.nineoldandroids.view.ViewPropertyAnimator setStartDelay(long) -> setStartDelay
    com.nineoldandroids.view.ViewPropertyAnimator setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    com.nineoldandroids.view.ViewPropertyAnimator setListener(com.nineoldandroids.animation.Animator$AnimatorListener) -> setListener
    void start() -> start
    void cancel() -> cancel
    com.nineoldandroids.view.ViewPropertyAnimator x(float) -> x
    com.nineoldandroids.view.ViewPropertyAnimator xBy(float) -> xBy
    com.nineoldandroids.view.ViewPropertyAnimator y(float) -> y
    com.nineoldandroids.view.ViewPropertyAnimator yBy(float) -> yBy
    com.nineoldandroids.view.ViewPropertyAnimator rotation(float) -> rotation
    com.nineoldandroids.view.ViewPropertyAnimator rotationBy(float) -> rotationBy
    com.nineoldandroids.view.ViewPropertyAnimator rotationX(float) -> rotationX
    com.nineoldandroids.view.ViewPropertyAnimator rotationXBy(float) -> rotationXBy
    com.nineoldandroids.view.ViewPropertyAnimator rotationY(float) -> rotationY
    com.nineoldandroids.view.ViewPropertyAnimator rotationYBy(float) -> rotationYBy
    com.nineoldandroids.view.ViewPropertyAnimator translationX(float) -> translationX
    com.nineoldandroids.view.ViewPropertyAnimator translationXBy(float) -> translationXBy
    com.nineoldandroids.view.ViewPropertyAnimator translationY(float) -> translationY
    com.nineoldandroids.view.ViewPropertyAnimator translationYBy(float) -> translationYBy
    com.nineoldandroids.view.ViewPropertyAnimator scaleX(float) -> scaleX
    com.nineoldandroids.view.ViewPropertyAnimator scaleXBy(float) -> scaleXBy
    com.nineoldandroids.view.ViewPropertyAnimator scaleY(float) -> scaleY
    com.nineoldandroids.view.ViewPropertyAnimator scaleYBy(float) -> scaleYBy
    com.nineoldandroids.view.ViewPropertyAnimator alpha(float) -> alpha
    com.nineoldandroids.view.ViewPropertyAnimator alphaBy(float) -> alphaBy
    void startAnimation() -> startAnimation
    void animateProperty(int,float) -> animateProperty
    void animatePropertyBy(int,float) -> animatePropertyBy
    void animatePropertyBy(int,float,float) -> animatePropertyBy
    void setValue(int,float) -> setValue
    float getValue(int) -> getValue
    void access$100(com.nineoldandroids.view.ViewPropertyAnimatorHC) -> access$100
    com.nineoldandroids.animation.Animator$AnimatorListener access$200(com.nineoldandroids.view.ViewPropertyAnimatorHC) -> access$200
    java.util.HashMap access$300(com.nineoldandroids.view.ViewPropertyAnimatorHC) -> access$300
    com.nineoldandroids.animation.Animator$AnimatorListener access$202(com.nineoldandroids.view.ViewPropertyAnimatorHC,com.nineoldandroids.animation.Animator$AnimatorListener) -> access$202
    java.lang.ref.WeakReference access$400(com.nineoldandroids.view.ViewPropertyAnimatorHC) -> access$400
    void access$500(com.nineoldandroids.view.ViewPropertyAnimatorHC,int,float) -> access$500
com.nineoldandroids.view.ViewPropertyAnimatorHC$1 -> com.nineoldandroids.view.ViewPropertyAnimatorHC$1:
    com.nineoldandroids.view.ViewPropertyAnimatorHC this$0 -> this$0
    void run() -> run
com.nineoldandroids.view.ViewPropertyAnimatorHC$AnimatorEventListener -> com.nineoldandroids.view.ViewPropertyAnimatorHC$AnimatorEventListener:
    com.nineoldandroids.view.ViewPropertyAnimatorHC this$0 -> this$0
    void onAnimationStart(com.nineoldandroids.animation.Animator) -> onAnimationStart
    void onAnimationCancel(com.nineoldandroids.animation.Animator) -> onAnimationCancel
    void onAnimationRepeat(com.nineoldandroids.animation.Animator) -> onAnimationRepeat
    void onAnimationEnd(com.nineoldandroids.animation.Animator) -> onAnimationEnd
    void onAnimationUpdate(com.nineoldandroids.animation.ValueAnimator) -> onAnimationUpdate
com.nineoldandroids.view.ViewPropertyAnimatorHC$NameValuesHolder -> com.nineoldandroids.view.ViewPropertyAnimatorHC$NameValuesHolder:
    int mNameConstant -> mNameConstant
    float mFromValue -> mFromValue
    float mDeltaValue -> mDeltaValue
com.nineoldandroids.view.ViewPropertyAnimatorHC$PropertyBundle -> com.nineoldandroids.view.ViewPropertyAnimatorHC$PropertyBundle:
    int mPropertyMask -> mPropertyMask
    java.util.ArrayList mNameValuesHolder -> mNameValuesHolder
    boolean cancel(int) -> cancel
com.nineoldandroids.view.ViewPropertyAnimatorICS -> com.nineoldandroids.view.ViewPropertyAnimatorICS:
    long RETURN_WHEN_NULL -> RETURN_WHEN_NULL
    java.lang.ref.WeakReference mNative -> mNative
    com.nineoldandroids.view.ViewPropertyAnimator setDuration(long) -> setDuration
    long getDuration() -> getDuration
    com.nineoldandroids.view.ViewPropertyAnimator setStartDelay(long) -> setStartDelay
    long getStartDelay() -> getStartDelay
    com.nineoldandroids.view.ViewPropertyAnimator setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    com.nineoldandroids.view.ViewPropertyAnimator setListener(com.nineoldandroids.animation.Animator$AnimatorListener) -> setListener
    void start() -> start
    void cancel() -> cancel
    com.nineoldandroids.view.ViewPropertyAnimator x(float) -> x
    com.nineoldandroids.view.ViewPropertyAnimator xBy(float) -> xBy
    com.nineoldandroids.view.ViewPropertyAnimator y(float) -> y
    com.nineoldandroids.view.ViewPropertyAnimator yBy(float) -> yBy
    com.nineoldandroids.view.ViewPropertyAnimator rotation(float) -> rotation
    com.nineoldandroids.view.ViewPropertyAnimator rotationBy(float) -> rotationBy
    com.nineoldandroids.view.ViewPropertyAnimator rotationX(float) -> rotationX
    com.nineoldandroids.view.ViewPropertyAnimator rotationXBy(float) -> rotationXBy
    com.nineoldandroids.view.ViewPropertyAnimator rotationY(float) -> rotationY
    com.nineoldandroids.view.ViewPropertyAnimator rotationYBy(float) -> rotationYBy
    com.nineoldandroids.view.ViewPropertyAnimator translationX(float) -> translationX
    com.nineoldandroids.view.ViewPropertyAnimator translationXBy(float) -> translationXBy
    com.nineoldandroids.view.ViewPropertyAnimator translationY(float) -> translationY
    com.nineoldandroids.view.ViewPropertyAnimator translationYBy(float) -> translationYBy
    com.nineoldandroids.view.ViewPropertyAnimator scaleX(float) -> scaleX
    com.nineoldandroids.view.ViewPropertyAnimator scaleXBy(float) -> scaleXBy
    com.nineoldandroids.view.ViewPropertyAnimator scaleY(float) -> scaleY
    com.nineoldandroids.view.ViewPropertyAnimator scaleYBy(float) -> scaleYBy
    com.nineoldandroids.view.ViewPropertyAnimator alpha(float) -> alpha
    com.nineoldandroids.view.ViewPropertyAnimator alphaBy(float) -> alphaBy
com.nineoldandroids.view.ViewPropertyAnimatorICS$1 -> com.nineoldandroids.view.ViewPropertyAnimatorICS$1:
    com.nineoldandroids.animation.Animator$AnimatorListener val$listener -> val$listener
    com.nineoldandroids.view.ViewPropertyAnimatorICS this$0 -> this$0
    void onAnimationStart(android.animation.Animator) -> onAnimationStart
    void onAnimationRepeat(android.animation.Animator) -> onAnimationRepeat
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
com.nineoldandroids.view.ViewPropertyAnimatorPreHC -> com.nineoldandroids.view.ViewPropertyAnimatorPreHC:
    com.nineoldandroids.view.animation.AnimatorProxy mProxy -> mProxy
    java.lang.ref.WeakReference mView -> mView
    long mDuration -> mDuration
    boolean mDurationSet -> mDurationSet
    long mStartDelay -> mStartDelay
    boolean mStartDelaySet -> mStartDelaySet
    android.view.animation.Interpolator mInterpolator -> mInterpolator
    boolean mInterpolatorSet -> mInterpolatorSet
    com.nineoldandroids.animation.Animator$AnimatorListener mListener -> mListener
    com.nineoldandroids.view.ViewPropertyAnimatorPreHC$AnimatorEventListener mAnimatorEventListener -> mAnimatorEventListener
    java.util.ArrayList mPendingAnimations -> mPendingAnimations
    int NONE -> NONE
    int TRANSLATION_X -> TRANSLATION_X
    int TRANSLATION_Y -> TRANSLATION_Y
    int SCALE_X -> SCALE_X
    int SCALE_Y -> SCALE_Y
    int ROTATION -> ROTATION
    int ROTATION_X -> ROTATION_X
    int ROTATION_Y -> ROTATION_Y
    int X -> X
    int Y -> Y
    int ALPHA -> ALPHA
    int TRANSFORM_MASK -> TRANSFORM_MASK
    java.lang.Runnable mAnimationStarter -> mAnimationStarter
    java.util.HashMap mAnimatorMap -> mAnimatorMap
    com.nineoldandroids.view.ViewPropertyAnimator setDuration(long) -> setDuration
    long getDuration() -> getDuration
    long getStartDelay() -> getStartDelay
    com.nineoldandroids.view.ViewPropertyAnimator setStartDelay(long) -> setStartDelay
    com.nineoldandroids.view.ViewPropertyAnimator setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    com.nineoldandroids.view.ViewPropertyAnimator setListener(com.nineoldandroids.animation.Animator$AnimatorListener) -> setListener
    void start() -> start
    void cancel() -> cancel
    com.nineoldandroids.view.ViewPropertyAnimator x(float) -> x
    com.nineoldandroids.view.ViewPropertyAnimator xBy(float) -> xBy
    com.nineoldandroids.view.ViewPropertyAnimator y(float) -> y
    com.nineoldandroids.view.ViewPropertyAnimator yBy(float) -> yBy
    com.nineoldandroids.view.ViewPropertyAnimator rotation(float) -> rotation
    com.nineoldandroids.view.ViewPropertyAnimator rotationBy(float) -> rotationBy
    com.nineoldandroids.view.ViewPropertyAnimator rotationX(float) -> rotationX
    com.nineoldandroids.view.ViewPropertyAnimator rotationXBy(float) -> rotationXBy
    com.nineoldandroids.view.ViewPropertyAnimator rotationY(float) -> rotationY
    com.nineoldandroids.view.ViewPropertyAnimator rotationYBy(float) -> rotationYBy
    com.nineoldandroids.view.ViewPropertyAnimator translationX(float) -> translationX
    com.nineoldandroids.view.ViewPropertyAnimator translationXBy(float) -> translationXBy
    com.nineoldandroids.view.ViewPropertyAnimator translationY(float) -> translationY
    com.nineoldandroids.view.ViewPropertyAnimator translationYBy(float) -> translationYBy
    com.nineoldandroids.view.ViewPropertyAnimator scaleX(float) -> scaleX
    com.nineoldandroids.view.ViewPropertyAnimator scaleXBy(float) -> scaleXBy
    com.nineoldandroids.view.ViewPropertyAnimator scaleY(float) -> scaleY
    com.nineoldandroids.view.ViewPropertyAnimator scaleYBy(float) -> scaleYBy
    com.nineoldandroids.view.ViewPropertyAnimator alpha(float) -> alpha
    com.nineoldandroids.view.ViewPropertyAnimator alphaBy(float) -> alphaBy
    void startAnimation() -> startAnimation
    void animateProperty(int,float) -> animateProperty
    void animatePropertyBy(int,float) -> animatePropertyBy
    void animatePropertyBy(int,float,float) -> animatePropertyBy
    void setValue(int,float) -> setValue
    float getValue(int) -> getValue
    void access$100(com.nineoldandroids.view.ViewPropertyAnimatorPreHC) -> access$100
    com.nineoldandroids.animation.Animator$AnimatorListener access$200(com.nineoldandroids.view.ViewPropertyAnimatorPreHC) -> access$200
    java.util.HashMap access$300(com.nineoldandroids.view.ViewPropertyAnimatorPreHC) -> access$300
    com.nineoldandroids.animation.Animator$AnimatorListener access$202(com.nineoldandroids.view.ViewPropertyAnimatorPreHC,com.nineoldandroids.animation.Animator$AnimatorListener) -> access$202
    java.lang.ref.WeakReference access$400(com.nineoldandroids.view.ViewPropertyAnimatorPreHC) -> access$400
    void access$500(com.nineoldandroids.view.ViewPropertyAnimatorPreHC,int,float) -> access$500
com.nineoldandroids.view.ViewPropertyAnimatorPreHC$1 -> com.nineoldandroids.view.ViewPropertyAnimatorPreHC$1:
    com.nineoldandroids.view.ViewPropertyAnimatorPreHC this$0 -> this$0
    void run() -> run
com.nineoldandroids.view.ViewPropertyAnimatorPreHC$AnimatorEventListener -> com.nineoldandroids.view.ViewPropertyAnimatorPreHC$AnimatorEventListener:
    com.nineoldandroids.view.ViewPropertyAnimatorPreHC this$0 -> this$0
    void onAnimationStart(com.nineoldandroids.animation.Animator) -> onAnimationStart
    void onAnimationCancel(com.nineoldandroids.animation.Animator) -> onAnimationCancel
    void onAnimationRepeat(com.nineoldandroids.animation.Animator) -> onAnimationRepeat
    void onAnimationEnd(com.nineoldandroids.animation.Animator) -> onAnimationEnd
    void onAnimationUpdate(com.nineoldandroids.animation.ValueAnimator) -> onAnimationUpdate
com.nineoldandroids.view.ViewPropertyAnimatorPreHC$NameValuesHolder -> com.nineoldandroids.view.ViewPropertyAnimatorPreHC$NameValuesHolder:
    int mNameConstant -> mNameConstant
    float mFromValue -> mFromValue
    float mDeltaValue -> mDeltaValue
com.nineoldandroids.view.ViewPropertyAnimatorPreHC$PropertyBundle -> com.nineoldandroids.view.ViewPropertyAnimatorPreHC$PropertyBundle:
    int mPropertyMask -> mPropertyMask
    java.util.ArrayList mNameValuesHolder -> mNameValuesHolder
    boolean cancel(int) -> cancel
com.nineoldandroids.view.animation.AnimatorProxy -> com.nineoldandroids.view.animation.AnimatorProxy:
    boolean NEEDS_PROXY -> NEEDS_PROXY
    java.util.WeakHashMap PROXIES -> PROXIES
    java.lang.ref.WeakReference mView -> mView
    android.graphics.Camera mCamera -> mCamera
    boolean mHasPivot -> mHasPivot
    float mAlpha -> mAlpha
    float mPivotX -> mPivotX
    float mPivotY -> mPivotY
    float mRotationX -> mRotationX
    float mRotationY -> mRotationY
    float mRotationZ -> mRotationZ
    float mScaleX -> mScaleX
    float mScaleY -> mScaleY
    float mTranslationX -> mTranslationX
    float mTranslationY -> mTranslationY
    android.graphics.RectF mBefore -> mBefore
    android.graphics.RectF mAfter -> mAfter
    android.graphics.Matrix mTempMatrix -> mTempMatrix
    com.nineoldandroids.view.animation.AnimatorProxy wrap(android.view.View) -> wrap
    float getAlpha() -> getAlpha
    void setAlpha(float) -> setAlpha
    float getPivotX() -> getPivotX
    void setPivotX(float) -> setPivotX
    float getPivotY() -> getPivotY
    void setPivotY(float) -> setPivotY
    float getRotation() -> getRotation
    void setRotation(float) -> setRotation
    float getRotationX() -> getRotationX
    void setRotationX(float) -> setRotationX
    float getRotationY() -> getRotationY
    void setRotationY(float) -> setRotationY
    float getScaleX() -> getScaleX
    void setScaleX(float) -> setScaleX
    float getScaleY() -> getScaleY
    void setScaleY(float) -> setScaleY
    int getScrollX() -> getScrollX
    void setScrollX(int) -> setScrollX
    int getScrollY() -> getScrollY
    void setScrollY(int) -> setScrollY
    float getTranslationX() -> getTranslationX
    void setTranslationX(float) -> setTranslationX
    float getTranslationY() -> getTranslationY
    void setTranslationY(float) -> setTranslationY
    float getX() -> getX
    void setX(float) -> setX
    float getY() -> getY
    void setY(float) -> setY
    void prepareForUpdate() -> prepareForUpdate
    void invalidateAfterUpdate() -> invalidateAfterUpdate
    void computeRect(android.graphics.RectF,android.view.View) -> computeRect
    void transformMatrix(android.graphics.Matrix,android.view.View) -> transformMatrix
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
com.ogaclejapan.arclayout.Arc -> com.ogaclejapan.arclayout.a:
    com.ogaclejapan.arclayout.Arc CENTER -> a
    com.ogaclejapan.arclayout.Arc LEFT -> b
    com.ogaclejapan.arclayout.Arc RIGHT -> c
    com.ogaclejapan.arclayout.Arc TOP -> d
    com.ogaclejapan.arclayout.Arc TOP_LEFT -> e
    com.ogaclejapan.arclayout.Arc TOP_RIGHT -> f
    com.ogaclejapan.arclayout.Arc BOTTOM -> g
    com.ogaclejapan.arclayout.Arc BOTTOM_LEFT -> h
    com.ogaclejapan.arclayout.Arc BOTTOM_RIGHT -> i
    int startAngle -> j
    int sweepAngle -> k
    com.ogaclejapan.arclayout.Arc[] ENUM$VALUES -> l
    int x(int,float) -> a
    int y(int,float) -> b
    com.ogaclejapan.arclayout.Arc of(int) -> a
    float computeDegrees(int,float) -> c
    float computeReverseDegrees(int,float) -> d
    float computePerDegrees(int) -> b
    android.graphics.Path computePath(int,int,int,int,int) -> a
    android.graphics.Point computeOrigin(int,int,int,int) -> a
    int computeWidth(int) -> c
    int computeHeight(int) -> d
    com.ogaclejapan.arclayout.Arc[] values() -> values
    com.ogaclejapan.arclayout.Arc valueOf(java.lang.String) -> valueOf
com.ogaclejapan.arclayout.Arc$1 -> com.ogaclejapan.arclayout.b:
    android.graphics.Path computePath(int,int,int,int,int) -> a
com.ogaclejapan.arclayout.Arc$2 -> com.ogaclejapan.arclayout.c:
    android.graphics.Point computeOrigin(int,int,int,int) -> a
    int computeWidth(int) -> c
com.ogaclejapan.arclayout.Arc$3 -> com.ogaclejapan.arclayout.d:
    android.graphics.Point computeOrigin(int,int,int,int) -> a
    int computeWidth(int) -> c
com.ogaclejapan.arclayout.Arc$4 -> com.ogaclejapan.arclayout.e:
    android.graphics.Point computeOrigin(int,int,int,int) -> a
    int computeHeight(int) -> d
com.ogaclejapan.arclayout.Arc$5 -> com.ogaclejapan.arclayout.f:
    android.graphics.Point computeOrigin(int,int,int,int) -> a
    int computeWidth(int) -> c
    int computeHeight(int) -> d
com.ogaclejapan.arclayout.Arc$6 -> com.ogaclejapan.arclayout.g:
    android.graphics.Point computeOrigin(int,int,int,int) -> a
    int computeWidth(int) -> c
    int computeHeight(int) -> d
com.ogaclejapan.arclayout.Arc$7 -> com.ogaclejapan.arclayout.h:
    android.graphics.Point computeOrigin(int,int,int,int) -> a
    int computeHeight(int) -> d
com.ogaclejapan.arclayout.Arc$8 -> com.ogaclejapan.arclayout.i:
    android.graphics.Point computeOrigin(int,int,int,int) -> a
    int computeWidth(int) -> c
    int computeHeight(int) -> d
com.ogaclejapan.arclayout.Arc$9 -> com.ogaclejapan.arclayout.j:
    android.graphics.Point computeOrigin(int,int,int,int) -> a
    int computeWidth(int) -> c
    int computeHeight(int) -> d
com.ogaclejapan.arclayout.ArcDrawable -> com.ogaclejapan.arclayout.k:
    android.graphics.Paint mPaint -> a
    android.graphics.Path mPath -> b
    com.ogaclejapan.arclayout.Arc mArc -> c
    int mRadius -> d
    int getRadius() -> a
    void setBounds(int,int,int,int) -> setBounds
    void draw(android.graphics.Canvas) -> draw
    void setAlpha(int) -> setAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    int getOpacity() -> getOpacity
    int getIntrinsicWidth() -> getIntrinsicWidth
    int getIntrinsicHeight() -> getIntrinsicHeight
    void getOutline(android.graphics.Outline) -> getOutline
com.ogaclejapan.arclayout.ArcLayout -> com.ogaclejapan.arclayout.ArcLayout:
    java.util.WeakHashMap mChildAngleHolder -> a
    com.ogaclejapan.arclayout.Arc mArc -> b
    com.ogaclejapan.arclayout.ArcDrawable mArcDrawable -> c
    int mAxisRadius -> d
    android.graphics.Point mSize -> e
    boolean mIsFreeAngle -> f
    boolean mIsReverseAngle -> g
    void init(android.content.Context,android.util.AttributeSet,int,int) -> a
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onDraw(android.graphics.Canvas) -> onDraw
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
com.ogaclejapan.arclayout.ArcLayout$LayoutParams -> com.ogaclejapan.arclayout.ArcLayout$LayoutParams:
    int origin -> a
    float angle -> b
com.ogaclejapan.arclayout.Utils -> com.ogaclejapan.arclayout.l:
    boolean JELLY_BEAN_MR1_OR_LATER -> a
    boolean LOLLIPOP_OR_LATER -> b
    int computeMeasureSize(int,int) -> a
    float computeCircleX(float,float) -> a
    float computeCircleY(float,float) -> b
    int computeWidth(int,int,int) -> a
    int computeHeight(int,int,int) -> b
com.qc4w.ilocker.LockerApplication -> com.qc4w.ilocker.LockerApplication:
    void onCreate() -> onCreate
com.qc4w.ilocker.R -> com.qc4w.ilocker.R:
com.qc4w.ilocker.R$anim -> com.qc4w.ilocker.R$anim:
    int default_anim_in -> default_anim_in
    int default_anim_out -> default_anim_out
    int error_frame_in -> error_frame_in
    int error_x_in -> error_x_in
    int modal_in -> modal_in
    int modal_out -> modal_out
    int push_left_in -> push_left_in
    int push_left_out -> push_left_out
    int push_right_in -> push_right_in
    int push_right_out -> push_right_out
    int success_bow_roate -> success_bow_roate
    int success_mask_layout -> success_mask_layout
com.qc4w.ilocker.R$array -> com.qc4w.ilocker.R$array:
    int answers -> answers
    int colors -> colors
    int locker_screen_titles -> locker_screen_titles
    int main_menus -> main_menus
    int questions -> questions
    int widget_type -> widget_type
com.qc4w.ilocker.R$attr -> com.qc4w.ilocker.R$attr:
    int LeftAnimationDuratioin -> LeftAnimationDuratioin
    int MinDistanceToUnlock -> MinDistanceToUnlock
    int MinVelocityXToUnlock -> MinVelocityXToUnlock
    int RightAnimationDuratioin -> RightAnimationDuratioin
    int SlideColor -> SlideColor
    int StringToShow -> StringToShow
    int SwipeBackLayoutStyle -> SwipeBackLayoutStyle
    int TextColor -> TextColor
    int TextSize -> TextSize
    int animationVelocity -> animationVelocity
    int arc_angle -> arc_angle
    int arc_axisRadius -> arc_axisRadius
    int arc_color -> arc_color
    int arc_freeAngle -> arc_freeAngle
    int arc_origin -> arc_origin
    int arc_radius -> arc_radius
    int arc_reverseAngle -> arc_reverseAngle
    int arrowGreenUp -> arrowGreenUp
    int arrowRedUp -> arrowRedUp
    int aspect -> aspect
    int borderWidth -> borderWidth
    int btnNormal -> btnNormal
    int btnTouched -> btnTouched
    int circleGreen -> circleGreen
    int circleNormal -> circleNormal
    int circleRed -> circleRed
    int cropImageStyle -> cropImageStyle
    int edge_flag -> edge_flag
    int edge_size -> edge_size
    int fab_addButtonColorNormal -> fab_addButtonColorNormal
    int fab_addButtonColorPressed -> fab_addButtonColorPressed
    int fab_addButtonPlusIconColor -> fab_addButtonPlusIconColor
    int fab_colorNormal -> fab_colorNormal
    int fab_colorPressed -> fab_colorPressed
    int fab_expandDirection -> fab_expandDirection
    int fab_icon -> fab_icon
    int fab_plusIconColor -> fab_plusIconColor
    int fab_size -> fab_size
    int fbv_alpha -> fbv_alpha
    int fbv_color -> fbv_color
    int fbv_radius -> fbv_radius
    int fibv_alpha -> fibv_alpha
    int fibv_color -> fibv_color
    int fibv_number -> fibv_number
    int fibv_radius -> fibv_radius
    int fromDeg -> fromDeg
    int highlightColor -> highlightColor
    int indicatorHeight -> indicatorHeight
    int insetBottom -> insetBottom
    int insetLeft -> insetLeft
    int insetRight -> insetRight
    int insetTop -> insetTop
    int line -> line
    int measureFactor -> measureFactor
    int niv_radius -> niv_radius
    int numSize -> numSize
    int num_color -> num_color
    int offColor -> offColor
    int offDrawable -> offDrawable
    int onColor -> onColor
    int onDrawable -> onDrawable
    int pivotX -> pivotX
    int pivotY -> pivotY
    int radius -> radius
    int reflectionColor -> reflectionColor
    int rollType -> rollType
    int shadow_bottom -> shadow_bottom
    int shadow_left -> shadow_left
    int shadow_right -> shadow_right
    int showHandles -> showHandles
    int showThirds -> showThirds
    int siIndicatorColor -> siIndicatorColor
    int siIndicatorColors -> siIndicatorColors
    int siRadiusMax -> siRadiusMax
    int siRadiusMin -> siRadiusMin
    int siSelectedTextColor -> siSelectedTextColor
    int siTextBg -> siTextBg
    int siTextColor -> siTextColor
    int siTextSize -> siTextSize
    int stl_customTabTextLayoutId -> stl_customTabTextLayoutId
    int stl_customTabTextViewId -> stl_customTabTextViewId
    int stl_defaultTabTextAllCaps -> stl_defaultTabTextAllCaps
    int stl_defaultTabTextColor -> stl_defaultTabTextColor
    int stl_defaultTabTextHorizontalPadding -> stl_defaultTabTextHorizontalPadding
    int stl_defaultTabTextMinWidth -> stl_defaultTabTextMinWidth
    int stl_defaultTabTextSize -> stl_defaultTabTextSize
    int stl_distributeEvenly -> stl_distributeEvenly
    int stl_dividerColor -> stl_dividerColor
    int stl_dividerColors -> stl_dividerColors
    int stl_dividerThickness -> stl_dividerThickness
    int stl_indicatorAlwaysInCenter -> stl_indicatorAlwaysInCenter
    int stl_indicatorColor -> stl_indicatorColor
    int stl_indicatorColors -> stl_indicatorColors
    int stl_indicatorCornerRadius -> stl_indicatorCornerRadius
    int stl_indicatorInFront -> stl_indicatorInFront
    int stl_indicatorInterpolation -> stl_indicatorInterpolation
    int stl_indicatorThickness -> stl_indicatorThickness
    int stl_underlineColor -> stl_underlineColor
    int stl_underlineThickness -> stl_underlineThickness
    int tabCount -> tabCount
    int textArray -> textArray
    int textColor -> textColor
    int textColor_default -> textColor_default
    int textColor_selected -> textColor_selected
    int textSize -> textSize
    int thumbColor -> thumbColor
    int thumbDrawable -> thumbDrawable
    int thumbPressedColor -> thumbPressedColor
    int thumb_height -> thumb_height
    int thumb_margin -> thumb_margin
    int thumb_marginBottom -> thumb_marginBottom
    int thumb_marginLeft -> thumb_marginLeft
    int thumb_marginRight -> thumb_marginRight
    int thumb_marginTop -> thumb_marginTop
    int thumb_width -> thumb_width
    int toDeg -> toDeg
com.qc4w.ilocker.R$color -> com.qc4w.ilocker.R$color:
    int Grey -> Grey
    int LightGray -> LightGray
    int accent -> accent
    int ampm_text_color -> ampm_text_color
    int app_main_color -> app_main_color
    int app_main_color_pressed -> app_main_color_pressed
    int background -> background
    int black -> black
    int black_light -> black_light
    int black_translucent -> black_translucent
    int blue -> blue
    int blue_btn_bg_color -> blue_btn_bg_color
    int blue_btn_bg_pressed_color -> blue_btn_bg_pressed_color
    int blue_semi_transparent -> blue_semi_transparent
    int blue_semi_transparent_pressed -> blue_semi_transparent_pressed
    int brown -> brown
    int button_text_color -> button_text_color
    int calendar_header -> calendar_header
    int circle_background -> circle_background
    int colorAccent -> colorAccent
    int colorPrimary -> colorPrimary
    int colorPrimaryDark -> colorPrimaryDark
    int colorPrimaryLight -> colorPrimaryLight
    int crop__button_bar -> crop__button_bar
    int crop__button_text -> crop__button_text
    int crop__selector_focused -> crop__selector_focused
    int crop__selector_pressed -> crop__selector_pressed
    int darker_blue -> darker_blue
    int date_picker_selector -> date_picker_selector
    int date_picker_text_normal -> date_picker_text_normal
    int date_picker_view_animator -> date_picker_view_animator
    int date_picker_year_selector -> date_picker_year_selector
    int default_defalult_color -> default_defalult_color
    int default_select_color -> default_select_color
    int divider_color -> divider_color
    int done_text_color -> done_text_color
    int done_text_color_disabled -> done_text_color_disabled
    int done_text_color_normal -> done_text_color_normal
    int drak_gray -> drak_gray
    int drawer_arrow_second_color -> drawer_arrow_second_color
    int error_stroke_color -> error_stroke_color
    int float_transparent -> float_transparent
    int gradient_slide_text_color -> gradient_slide_text_color
    int gradient_text_color -> gradient_text_color
    int gray -> gray
    int gray_btn_bg_color -> gray_btn_bg_color
    int gray_btn_bg_pressed_color -> gray_btn_bg_pressed_color
    int gray_color_normal -> gray_color_normal
    int gray_color_pressed -> gray_color_pressed
    int gray_dark -> gray_dark
    int gray_light -> gray_light
    int half_black -> half_black
    int half_transparent -> half_transparent
    int indicator_1 -> indicator_1
    int indicator_2 -> indicator_2
    int indicator_3 -> indicator_3
    int indicator_4 -> indicator_4
    int ldrawer_color -> ldrawer_color
    int line_background -> line_background
    int material_blue_grey_80 -> material_blue_grey_80
    int material_blue_grey_90 -> material_blue_grey_90
    int material_blue_grey_95 -> material_blue_grey_95
    int material_deep_teal_20 -> material_deep_teal_20
    int material_deep_teal_50 -> material_deep_teal_50
    int num_color -> num_color
    int numbers_text_color -> numbers_text_color
    int pink -> pink
    int pink_pressed -> pink_pressed
    int progress_blue -> progress_blue
    int progress_green -> progress_green
    int progress_red -> progress_red
    int progress_yellow -> progress_yellow
    int red_btn_bg_color -> red_btn_bg_color
    int red_btn_bg_pressed_color -> red_btn_bg_pressed_color
    int si_default_indicator_bg -> si_default_indicator_bg
    int si_default_text_color -> si_default_text_color
    int si_default_text_color_selected -> si_default_text_color_selected
    int success_stroke_color -> success_stroke_color
    int sweet_dialog_bg_color -> sweet_dialog_bg_color
    int text_color -> text_color
    int trans_success_stroke_color -> trans_success_stroke_color
    int transparent -> transparent
    int transparent_black -> transparent_black
    int transparent_white -> transparent_white
    int transparent_white_pressed -> transparent_white_pressed
    int warning_stroke_color -> warning_stroke_color
    int white -> white
    int white_pressed -> white_pressed
com.qc4w.ilocker.R$dimen -> com.qc4w.ilocker.R$dimen:
    int action_button_content_margin -> action_button_content_margin
    int action_button_margin -> action_button_margin
    int action_button_size -> action_button_size
    int action_menu_radius -> action_menu_radius
    int activity_content_padding -> activity_content_padding
    int activity_horizontal_margin -> activity_horizontal_margin
    int activity_padding -> activity_padding
    int activity_vertical_margin -> activity_vertical_margin
    int alert_width -> alert_width
    int ampm_label_size -> ampm_label_size
    int ampm_left_padding -> ampm_left_padding
    int color_swatch_large -> color_swatch_large
    int color_swatch_margins_large -> color_swatch_margins_large
    int color_swatch_margins_small -> color_swatch_margins_small
    int color_swatch_small -> color_swatch_small
    int common_circle_width -> common_circle_width
    int crop__bar_height -> crop__bar_height
    int date_picker_component_width -> date_picker_component_width
    int date_picker_header_height -> date_picker_header_height
    int date_picker_header_text_size -> date_picker_header_text_size
    int date_picker_view_animator_height -> date_picker_view_animator_height
    int day_number_select_circle_radius -> day_number_select_circle_radius
    int day_number_size -> day_number_size
    int default_indicator_height -> default_indicator_height
    int default_num_size -> default_num_size
    int default_text_size -> default_text_size
    int divider_height -> divider_height
    int done_label_size -> done_label_size
    int emoticon_keyboard_height -> emoticon_keyboard_height
    int extra_time_label_margin -> extra_time_label_margin
    int fab_actions_spacing -> fab_actions_spacing
    int fab_icon_size -> fab_icon_size
    int fab_plus_icon_size -> fab_plus_icon_size
    int fab_plus_icon_stroke -> fab_plus_icon_stroke
    int fab_shadow_offset -> fab_shadow_offset
    int fab_shadow_radius -> fab_shadow_radius
    int fab_size_mini -> fab_size_mini
    int fab_size_normal -> fab_size_normal
    int fab_stroke_width -> fab_stroke_width
    int gradient_text_size -> gradient_text_size
    int gradient_view_margin_left -> gradient_view_margin_left
    int header_height -> header_height
    int layout_child_offset_large -> layout_child_offset_large
    int layout_radius_large -> layout_radius_large
    int ldrawer_barSize -> ldrawer_barSize
    int ldrawer_drawableSize -> ldrawer_drawableSize
    int ldrawer_gapBetweenBars -> ldrawer_gapBetweenBars
    int ldrawer_middleBarArrowSize -> ldrawer_middleBarArrowSize
    int ldrawer_thickness -> ldrawer_thickness
    int ldrawer_topBottomBarArrowSize -> ldrawer_topBottomBarArrowSize
    int ll_operations_height -> ll_operations_height
    int lock_type_height -> lock_type_height
    int lock_type_width -> lock_type_width
    int main_menu_icon_size -> main_menu_icon_size
    int main_menu_text_size -> main_menu_text_size
    int minimum_margin_sides -> minimum_margin_sides
    int minimum_margin_top_bottom -> minimum_margin_top_bottom
    int month_day_label_text_size -> month_day_label_text_size
    int month_label_size -> month_label_size
    int month_list_item_header_height -> month_list_item_header_height
    int month_select_circle_radius -> month_select_circle_radius
    int navdrawer_width -> navdrawer_width
    int over_flow_text_size -> over_flow_text_size
    int picker_dimen -> picker_dimen
    int progress_circle_radius -> progress_circle_radius
    int selected_calendar_layout_height -> selected_calendar_layout_height
    int selected_date_day_size -> selected_date_day_size
    int selected_date_month_size -> selected_date_month_size
    int selected_date_year_size -> selected_date_year_size
    int separator_padding -> separator_padding
    int setting_item_height -> setting_item_height
    int si_default_radius_max -> si_default_radius_max
    int si_default_radius_min -> si_default_radius_min
    int si_default_text_size -> si_default_text_size
    int slide_bar_height -> slide_bar_height
    int slide_bar_width -> slide_bar_width
    int slide_locker_banner_height -> slide_locker_banner_height
    int sub_action_button_content_margin -> sub_action_button_content_margin
    int sub_action_button_size -> sub_action_button_size
    int tab_height -> tab_height
    int time_label_size -> time_label_size
    int wallpaper_height -> wallpaper_height
    int wallpaper_width -> wallpaper_width
    int year_label_height -> year_label_height
    int year_label_text_size -> year_label_text_size
com.qc4w.ilocker.R$drawable -> com.qc4w.ilocker.R$drawable:
    int about_logo -> about_logo
    int android_mms -> android_mms
    int android_phone -> android_phone
    int bg_edittext_dash_white -> bg_edittext_dash_white
    int bg_female -> bg_female
    int bg_male -> bg_male
    int bg_round_conner -> bg_round_conner
    int blue_button_background -> blue_button_background
    int btn_app_theme -> btn_app_theme
    int btn_backspace_normal -> btn_backspace_normal
    int btn_delete_selector -> btn_delete_selector
    int circle_logo -> circle_logo
    int collapse -> collapse
    int color_picker_swatch -> color_picker_swatch
    int comment_close_icon -> comment_close_icon
    int comment_close_icon_hover -> comment_close_icon_hover
    int comment_submit_icon -> comment_submit_icon
    int comment_submit_icon_hover -> comment_submit_icon_hover
    int crop__divider -> crop__divider
    int crop__ic_cancel -> crop__ic_cancel
    int crop__ic_done -> crop__ic_done
    int crop__selectable_background -> crop__selectable_background
    int crop__texture -> crop__texture
    int crop__tile -> crop__tile
    int dialog_background -> dialog_background
    int error_center_x -> error_center_x
    int error_circle -> error_circle
    int gesture_pattern_item_bg -> gesture_pattern_item_bg
    int gesture_pattern_selected -> gesture_pattern_selected
    int gesture_pattern_selected_wrong -> gesture_pattern_selected_wrong
    int gray_button_background -> gray_button_background
    int home_up -> home_up
    int ic_about_normal -> ic_about_normal
    int ic_about_select -> ic_about_select
    int ic_action_camera -> ic_action_camera
    int ic_action_camera_light -> ic_action_camera_light
    int ic_action_chat -> ic_action_chat
    int ic_action_chat_light -> ic_action_chat_light
    int ic_action_headphones -> ic_action_headphones
    int ic_action_important -> ic_action_important
    int ic_action_location_found -> ic_action_location_found
    int ic_action_new -> ic_action_new
    int ic_action_new_light -> ic_action_new_light
    int ic_action_picture -> ic_action_picture
    int ic_action_picture_light -> ic_action_picture_light
    int ic_action_place -> ic_action_place
    int ic_action_place_light -> ic_action_place_light
    int ic_action_send_now -> ic_action_send_now
    int ic_action_send_now_light -> ic_action_send_now_light
    int ic_action_settings -> ic_action_settings
    int ic_action_video -> ic_action_video
    int ic_action_video_light -> ic_action_video_light
    int ic_camera -> ic_camera
    int ic_colorpicker_swatch_selected -> ic_colorpicker_swatch_selected
    int ic_delete_normal -> ic_delete_normal
    int ic_delete_pressed -> ic_delete_pressed
    int ic_drawer -> ic_drawer
    int ic_goto_arrow -> ic_goto_arrow
    int ic_launcher -> ic_launcher
    int ic_menu_more -> ic_menu_more
    int ic_remind_normal -> ic_remind_normal
    int ic_remind_select -> ic_remind_select
    int ic_right_arrow -> ic_right_arrow
    int ic_selected -> ic_selected
    int ic_switch_normal -> ic_switch_normal
    int ic_switch_select -> ic_switch_select
    int ic_theme_normal -> ic_theme_normal
    int ic_theme_select -> ic_theme_select
    int ic_unselect -> ic_unselect
    int ic_wallpaper_normal -> ic_wallpaper_normal
    int ic_wallpaper_select -> ic_wallpaper_select
    int icon_blog -> icon_blog
    int icon_github -> icon_github
    int img_back_off -> img_back_off
    int img_back_on -> img_back_on
    int img_thumb -> img_thumb
    int img_thumb_pressed -> img_thumb_pressed
    int input_wrap -> input_wrap
    int ios_off -> ios_off
    int ios_thumb -> ios_thumb
    int left_rotate -> left_rotate
    int list_wrap -> list_wrap
    int lock_item_alarm -> lock_item_alarm
    int lock_item_apple -> lock_item_apple
    int lock_item_circle -> lock_item_circle
    int lock_item_crab -> lock_item_crab
    int lock_item_crown -> lock_item_crown
    int lock_item_flower -> lock_item_flower
    int lock_item_hexagon -> lock_item_hexagon
    int lock_item_kety -> lock_item_kety
    int lock_item_leaf -> lock_item_leaf
    int lock_item_love -> lock_item_love
    int lock_item_medal -> lock_item_medal
    int lock_item_miky -> lock_item_miky
    int lock_item_pear -> lock_item_pear
    int lock_item_prism -> lock_item_prism
    int lock_item_rect -> lock_item_rect
    int lock_item_robot -> lock_item_robot
    int lock_item_start -> lock_item_start
    int lock_item_strawberry -> lock_item_strawberry
    int lock_item_strawberry_2 -> lock_item_strawberry_2
    int lock_item_triangle -> lock_item_triangle
    int lock_normal_alarmclock -> lock_normal_alarmclock
    int lock_normal_apple -> lock_normal_apple
    int lock_normal_circle -> lock_normal_circle
    int lock_normal_crab -> lock_normal_crab
    int lock_normal_crown -> lock_normal_crown
    int lock_normal_flower -> lock_normal_flower
    int lock_normal_hexagon -> lock_normal_hexagon
    int lock_normal_kety -> lock_normal_kety
    int lock_normal_leaf -> lock_normal_leaf
    int lock_normal_love -> lock_normal_love
    int lock_normal_medal -> lock_normal_medal
    int lock_normal_miky -> lock_normal_miky
    int lock_normal_pear -> lock_normal_pear
    int lock_normal_prism -> lock_normal_prism
    int lock_normal_rect -> lock_normal_rect
    int lock_normal_robot -> lock_normal_robot
    int lock_normal_start -> lock_normal_start
    int lock_normal_strawberry -> lock_normal_strawberry
    int lock_normal_strawberry_2 -> lock_normal_strawberry_2
    int lock_normal_triangle -> lock_normal_triangle
    int lock_pressed_alarmclock -> lock_pressed_alarmclock
    int lock_pressed_apple -> lock_pressed_apple
    int lock_pressed_circle -> lock_pressed_circle
    int lock_pressed_crab -> lock_pressed_crab
    int lock_pressed_crown -> lock_pressed_crown
    int lock_pressed_flower -> lock_pressed_flower
    int lock_pressed_hexagon -> lock_pressed_hexagon
    int lock_pressed_kety -> lock_pressed_kety
    int lock_pressed_leaf -> lock_pressed_leaf
    int lock_pressed_love -> lock_pressed_love
    int lock_pressed_medal -> lock_pressed_medal
    int lock_pressed_miky -> lock_pressed_miky
    int lock_pressed_pear -> lock_pressed_pear
    int lock_pressed_prism -> lock_pressed_prism
    int lock_pressed_rect -> lock_pressed_rect
    int lock_pressed_robot -> lock_pressed_robot
    int lock_pressed_start -> lock_pressed_start
    int lock_pressed_strawberry -> lock_pressed_strawberry
    int lock_pressed_strawberry_2 -> lock_pressed_strawberry_2
    int lock_pressed_triangle -> lock_pressed_triangle
    int md_back_off -> md_back_off
    int md_back_on -> md_back_on
    int md_switch_thumb_disable -> md_switch_thumb_disable
    int md_switch_thumb_off_normal -> md_switch_thumb_off_normal
    int md_switch_thumb_off_pressed -> md_switch_thumb_off_pressed
    int md_switch_thumb_on_normal -> md_switch_thumb_on_normal
    int md_switch_thumb_on_pressed -> md_switch_thumb_on_pressed
    int md_thumb -> md_thumb
    int menu_about -> menu_about
    int menu_feedback -> menu_feedback
    int menu_miui -> menu_miui
    int menu_rate -> menu_rate
    int menu_update -> menu_update
    int nav_bar -> nav_bar
    int picture_add -> picture_add
    int red_button_background -> red_button_background
    int right_rotate -> right_rotate
    int rotate_bg -> rotate_bg
    int selector_gray_bg -> selector_gray_bg
    int selector_group -> selector_group
    int selector_thumb -> selector_thumb
    int shadow_bottom -> shadow_bottom
    int shadow_left -> shadow_left
    int shadow_right -> shadow_right
    int success_bow -> success_bow
    int success_circle -> success_circle
    int texture -> texture
    int tile -> tile
    int titlebar_btn_close -> titlebar_btn_close
    int titlebar_btn_submit -> titlebar_btn_submit
    int unlock_cpattern -> unlock_cpattern
    int unlock_digit -> unlock_digit
    int unlock_dpicture -> unlock_dpicture
    int unlock_lpicture -> unlock_lpicture
    int unlock_mylover -> unlock_mylover
    int unlock_myname -> unlock_myname
    int unlock_pattern -> unlock_pattern
    int unlock_ppicture -> unlock_ppicture
    int unlock_ring -> unlock_ring
    int unlock_slide -> unlock_slide
    int warning_circle -> warning_circle
    int warning_sigh -> warning_sigh
com.qc4w.ilocker.R$id -> com.qc4w.ilocker.R$id:
    int CropOverlayView -> CropOverlayView
    int ImageView_image -> ImageView_image
    int action_settings -> action_settings
    int all -> all
    int always -> always
    int ampm_hitspace -> ampm_hitspace
    int ampm_label -> ampm_label
    int animator -> animator
    int arc_layout -> arc_layout
    int bottom -> bottom
    int btn_cancel -> btn_cancel
    int btn_del -> btn_del
    int btn_done -> btn_done
    int btn_reset -> btn_reset
    int button1 -> button1
    int cancel_button -> cancel_button
    int ccv_0 -> ccv_0
    int ccv_1 -> ccv_1
    int ccv_2 -> ccv_2
    int ccv_3 -> ccv_3
    int ccv_4 -> ccv_4
    int ccv_5 -> ccv_5
    int ccv_6 -> ccv_6
    int ccv_7 -> ccv_7
    int ccv_8 -> ccv_8
    int ccv_9 -> ccv_9
    int center -> center
    int centerActionButton -> centerActionButton
    int center_horizontal -> center_horizontal
    int center_vertical -> center_vertical
    int center_view -> center_view
    int changing -> changing
    int circle_color_view -> circle_color_view
    int clear -> clear
    int color_picker -> color_picker
    int color_picker_checkmark -> color_picker_checkmark
    int color_picker_swatch -> color_picker_swatch
    int confirm_button -> confirm_button
    int container -> container
    int content_text -> content_text
    int crop_image -> crop_image
    int custom_image -> custom_image
    int date_picker_day -> date_picker_day
    int date_picker_header -> date_picker_header
    int date_picker_month -> date_picker_month
    int date_picker_month_and_day -> date_picker_month_and_day
    int date_picker_year -> date_picker_year
    int day_picker_selected_date_layout -> day_picker_selected_date_layout
    int del -> del
    int done -> done
    int done_button -> done_button
    int down -> down
    int dppv_password_view -> dppv_password_view
    int dpv_password_view -> dpv_password_view
    int drawer_layout -> drawer_layout
    int edi_indicator -> edi_indicator
    int edii_1 -> edii_1
    int edii_2 -> edii_2
    int edii_3 -> edii_3
    int edii_4 -> edii_4
    int eight -> eight
    int end -> end
    int error_frame -> error_frame
    int error_x -> error_x
    int et_images_text -> et_images_text
    int et_name_image_text -> et_name_image_text
    int et_slide_text -> et_slide_text
    int expandablelist -> expandablelist
    int fab -> fab
    int fab_expand_menu_button -> fab_expand_menu_button
    int fbv_0 -> fbv_0
    int fbv_1 -> fbv_1
    int fbv_2 -> fbv_2
    int fbv_3 -> fbv_3
    int fbv_4 -> fbv_4
    int fbv_5 -> fbv_5
    int fbv_6 -> fbv_6
    int fbv_7 -> fbv_7
    int fbv_8 -> fbv_8
    int fbv_9 -> fbv_9
    int fbv_del -> fbv_del
    int fibv_0 -> fibv_0
    int fibv_1 -> fibv_1
    int fibv_2 -> fibv_2
    int fibv_3 -> fibv_3
    int fibv_4 -> fibv_4
    int fibv_5 -> fibv_5
    int fibv_6 -> fibv_6
    int fibv_7 -> fibv_7
    int fibv_8 -> fibv_8
    int fibv_9 -> fibv_9
    int fibv_del -> fibv_del
    int five -> five
    int fl_fragment_container -> fl_fragment_container
    int fl_image_female -> fl_image_female
    int fl_image_male -> fl_image_male
    int fl_normal -> fl_normal
    int fl_touched -> fl_touched
    int four -> four
    int fragment_comment_close -> fragment_comment_close
    int fragment_comment_content -> fragment_comment_content
    int fragment_comment_footer_placeholder -> fragment_comment_footer_placeholder
    int fragment_comment_layout_container -> fragment_comment_layout_container
    int fragment_comment_layout_main -> fragment_comment_layout_main
    int fragment_comment_submit -> fragment_comment_submit
    int grid_view -> grid_view
    int group -> group
    int gv_lock_type -> gv_lock_type
    int gv_wallpaper -> gv_wallpaper
    int hfibv_0 -> hfibv_0
    int hfibv_1 -> hfibv_1
    int hfibv_2 -> hfibv_2
    int hfibv_3 -> hfibv_3
    int hfibv_4 -> hfibv_4
    int hfibv_5 -> hfibv_5
    int hfibv_6 -> hfibv_6
    int hfibv_7 -> hfibv_7
    int hfibv_8 -> hfibv_8
    int hfibv_9 -> hfibv_9
    int hour_space -> hour_space
    int hours -> hours
    int hpv_password_view -> hpv_password_view
    int ic_launcher -> ic_launcher
    int imageView1 -> imageView1
    int iv_app_icon -> iv_app_icon
    int iv_app_icon1 -> iv_app_icon1
    int iv_background -> iv_background
    int iv_boder -> iv_boder
    int iv_camera -> iv_camera
    int iv_camera_flag -> iv_camera_flag
    int iv_change_password -> iv_change_password
    int iv_color_btn -> iv_color_btn
    int iv_countdown_flag -> iv_countdown_flag
    int iv_current_flag -> iv_current_flag
    int iv_delete -> iv_delete
    int iv_disable_system_lock -> iv_disable_system_lock
    int iv_enable_auto_start -> iv_enable_auto_start
    int iv_enable_system_alert -> iv_enable_system_alert
    int iv_female -> iv_female
    int iv_image -> iv_image
    int iv_image_female -> iv_image_female
    int iv_image_male -> iv_image_male
    int iv_left_rotate -> iv_left_rotate
    int iv_lock_type -> iv_lock_type
    int iv_male -> iv_male
    int iv_menu_item -> iv_menu_item
    int iv_normal -> iv_normal
    int iv_notification_flag -> iv_notification_flag
    int iv_onkey_lock -> iv_onkey_lock
    int iv_right_rotate -> iv_right_rotate
    int iv_sentence_flag -> iv_sentence_flag
    int iv_time_flag -> iv_time_flag
    int iv_timing_flag -> iv_timing_flag
    int iv_touched -> iv_touched
    int iv_wallpaper -> iv_wallpaper
    int left -> left
    int linear -> linear
    int ll_bottom_operations -> ll_bottom_operations
    int ll_images -> ll_images
    int ll_line1 -> ll_line1
    int ll_line2 -> ll_line2
    int ll_line3 -> ll_line3
    int ll_operations -> ll_operations
    int ll_operations1 -> ll_operations1
    int ll_operations2 -> ll_operations2
    int ll_operations3 -> ll_operations3
    int ll_operations4 -> ll_operations4
    int ll_page_titles -> ll_page_titles
    int ll_version -> ll_version
    int loading -> loading
    int lockHeight -> lockHeight
    int lockWidth -> lockWidth
    int lppv_lockview -> lppv_lockview
    int lpv_lockview -> lpv_lockview
    int lv_app_list -> lv_app_list
    int lv_notifications -> lv_notifications
    int mask_left -> mask_left
    int mask_right -> mask_right
    int menu_feedback -> menu_feedback
    int menu_help -> menu_help
    int menu_layout -> menu_layout
    int menu_mi -> menu_mi
    int menu_rate -> menu_rate
    int mini -> mini
    int minutes -> minutes
    int minutes_space -> minutes_space
    int month_text_view -> month_text_view
    int navdrawer -> navdrawer
    int never -> never
    int nine -> nine
    int niv_name_image -> niv_name_image
    int normal -> normal
    int one -> one
    int pppv_password_view -> pppv_password_view
    int progressWheel -> progressWheel
    int progress_dialog -> progress_dialog
    int result_image -> result_image
    int right -> right
    int rl_basic_settings -> rl_basic_settings
    int rl_camera -> rl_camera
    int rl_camera_container -> rl_camera_container
    int rl_change_password -> rl_change_password
    int rl_countdown -> rl_countdown
    int rl_countdown_container -> rl_countdown_container
    int rl_disable_system_lock -> rl_disable_system_lock
    int rl_enable_auto_start -> rl_enable_auto_start
    int rl_enable_system_alert -> rl_enable_system_alert
    int rl_fragment_container -> rl_fragment_container
    int rl_loading -> rl_loading
    int rl_notification -> rl_notification
    int rl_notification_container -> rl_notification_container
    int rl_notification_line1 -> rl_notification_line1
    int rl_onekey_settings -> rl_onekey_settings
    int rl_onkey_lock -> rl_onkey_lock
    int rl_pick_wallpaper_from_gallery -> rl_pick_wallpaper_from_gallery
    int rl_product_feedback -> rl_product_feedback
    int rl_product_help -> rl_product_help
    int rl_product_info -> rl_product_info
    int rl_sentence -> rl_sentence
    int rl_sentence_container -> rl_sentence_container
    int rl_service_enable -> rl_service_enable
    int rl_time -> rl_time
    int rl_time_container -> rl_time_container
    int rl_timing -> rl_timing
    int rl_timing_container -> rl_timing_container
    int root_layout -> root_layout
    int rpv_password_view -> rpv_password_view
    int sb_notification_enable -> sb_notification_enable
    int sb_service_enable -> sb_service_enable
    int sdc_clock -> sdc_clock
    int separator -> separator
    int seven -> seven
    int shimmer_tv -> shimmer_tv
    int six -> six
    int smart -> smart
    int square -> square
    int start -> start
    int sticky_content -> sticky_content
    int sticky_header -> sticky_header
    int sticky_layout -> sticky_layout
    int success_frame -> success_frame
    int success_tick -> success_tick
    int svp_viewpager -> svp_viewpager
    int swipe -> swipe
    int tab_container -> tab_container
    int textView -> textView
    int three -> three
    int time_picker -> time_picker
    int time_picker_dialog -> time_picker_dialog
    int title_text -> title_text
    int top -> top
    int tv_0 -> tv_0
    int tv_1 -> tv_1
    int tv_2 -> tv_2
    int tv_3 -> tv_3
    int tv_4 -> tv_4
    int tv_5 -> tv_5
    int tv_6 -> tv_6
    int tv_7 -> tv_7
    int tv_8 -> tv_8
    int tv_9 -> tv_9
    int tv_app_name -> tv_app_name
    int tv_app_name1 -> tv_app_name1
    int tv_apply -> tv_apply
    int tv_basic_settings -> tv_basic_settings
    int tv_countdown_content -> tv_countdown_content
    int tv_countdown_time -> tv_countdown_time
    int tv_date -> tv_date
    int tv_disable -> tv_disable
    int tv_disable_system_lock -> tv_disable_system_lock
    int tv_disable_system_lock_des -> tv_disable_system_lock_des
    int tv_draw_pattern -> tv_draw_pattern
    int tv_enable -> tv_enable
    int tv_enable_auto_start -> tv_enable_auto_start
    int tv_enable_auto_start_des -> tv_enable_auto_start_des
    int tv_enable_system_alert -> tv_enable_system_alert
    int tv_enable_system_alert_des -> tv_enable_system_alert_des
    int tv_enter_digital -> tv_enter_digital
    int tv_images_text -> tv_images_text
    int tv_label_camera -> tv_label_camera
    int tv_label_countdown -> tv_label_countdown
    int tv_label_notification -> tv_label_notification
    int tv_label_sentence -> tv_label_sentence
    int tv_label_time -> tv_label_time
    int tv_label_timing -> tv_label_timing
    int tv_lock_type_name -> tv_lock_type_name
    int tv_menu_item -> tv_menu_item
    int tv_name_image_text -> tv_name_image_text
    int tv_normal_contour -> tv_normal_contour
    int tv_notification_content -> tv_notification_content
    int tv_notification_content1 -> tv_notification_content1
    int tv_notification_time -> tv_notification_time
    int tv_ok -> tv_ok
    int tv_onekey_settings -> tv_onekey_settings
    int tv_onkey_lock -> tv_onkey_lock
    int tv_onkey_lock_des -> tv_onkey_lock_des
    int tv_pick_color -> tv_pick_color
    int tv_pick_contour -> tv_pick_contour
    int tv_product_feedback -> tv_product_feedback
    int tv_product_help -> tv_product_help
    int tv_product_info -> tv_product_info
    int tv_sentence -> tv_sentence
    int tv_sentence_content -> tv_sentence_content
    int tv_service_enable -> tv_service_enable
    int tv_timing_content -> tv_timing_content
    int tv_timing_time -> tv_timing_time
    int tv_touched_contour -> tv_touched_contour
    int tv_version -> tv_version
    int tv_week -> tv_week
    int tv_welcome -> tv_welcome
    int two -> two
    int up -> up
    int v_devider_disable_system -> v_devider_disable_system
    int v_devider_service_enable -> v_devider_service_enable
    int v_divider -> v_divider
    int view_divider -> view_divider
    int view_divider1 -> view_divider1
    int view_divider2 -> view_divider2
    int view_divider3 -> view_divider3
    int view_divider_help -> view_divider_help
    int view_divider_info -> view_divider_info
    int view_divider_version -> view_divider_version
    int view_header -> view_header
    int view_message_title -> view_message_title
    int view_message_title_indicator -> view_message_title_indicator
    int view_pager -> view_pager
    int vp_pager -> vp_pager
    int vp_widget_pager -> vp_widget_pager
    int vpti_pager_indicator -> vpti_pager_indicator
    int warning_frame -> warning_frame
    int x -> x
    int y -> y
    int z -> z
    int zero -> zero
com.qc4w.ilocker.R$integer -> com.qc4w.ilocker.R$integer:
    int default_indicator_count -> default_indicator_count
com.qc4w.ilocker.R$layout -> com.qc4w.ilocker.R$layout:
    int activity_comment -> activity_comment
    int activity_confirm_password -> activity_confirm_password
    int activity_create_password -> activity_create_password
    int activity_crop_image -> activity_crop_image
    int activity_help -> activity_help
    int activity_lock_screen -> activity_lock_screen
    int activity_main -> activity_main
    int activity_menu_with_custom_animation -> activity_menu_with_custom_animation
    int activity_miui_settings -> activity_miui_settings
    int activity_preview -> activity_preview
    int activity_splash -> activity_splash
    int activity_widget_settings -> activity_widget_settings
    int alert_dialog -> alert_dialog
    int child -> child
    int crop__activity_crop -> crop__activity_crop
    int crop__layout_done_cancel -> crop__layout_done_cancel
    int date_picker_dialog -> date_picker_dialog
    int date_picker_done_button -> date_picker_done_button
    int date_picker_header_view -> date_picker_header_view
    int date_picker_selected_date -> date_picker_selected_date
    int date_picker_view_animator -> date_picker_view_animator
    int fragment_about -> fragment_about
    int fragment_cpattern_confirm_password -> fragment_cpattern_confirm_password
    int fragment_cpattern_create_password -> fragment_cpattern_create_password
    int fragment_cpattern_unlock_settings -> fragment_cpattern_unlock_settings
    int fragment_digital_confirm_password -> fragment_digital_confirm_password
    int fragment_digital_create_password -> fragment_digital_create_password
    int fragment_digital_unlock_settings -> fragment_digital_unlock_settings
    int fragment_dpicture_confirm_password -> fragment_dpicture_confirm_password
    int fragment_dpicture_create_password -> fragment_dpicture_create_password
    int fragment_dpicture_unlock_settings -> fragment_dpicture_unlock_settings
    int fragment_heart_unlock_settings -> fragment_heart_unlock_settings
    int fragment_locker_mode -> fragment_locker_mode
    int fragment_locker_screen -> fragment_locker_screen
    int fragment_lovers_locker_screen_settings -> fragment_lovers_locker_screen_settings
    int fragment_lpicture_confirm_password -> fragment_lpicture_confirm_password
    int fragment_lpicture_create_password -> fragment_lpicture_create_password
    int fragment_main_screen -> fragment_main_screen
    int fragment_main_stage -> fragment_main_stage
    int fragment_menu_with_custom_action_button -> fragment_menu_with_custom_action_button
    int fragment_menu_with_custom_animation -> fragment_menu_with_custom_animation
    int fragment_mood_locker_screen_settings -> fragment_mood_locker_screen_settings
    int fragment_name_locker_screen_settings -> fragment_name_locker_screen_settings
    int fragment_pattern_confirm_password -> fragment_pattern_confirm_password
    int fragment_pattern_create_password -> fragment_pattern_create_password
    int fragment_pattern_unlock_settings -> fragment_pattern_unlock_settings
    int fragment_ppicture_confirm_password -> fragment_ppicture_confirm_password
    int fragment_ppicture_create_password -> fragment_ppicture_create_password
    int fragment_ppicture_unlock_settings -> fragment_ppicture_unlock_settings
    int fragment_right_screen -> fragment_right_screen
    int fragment_ring_confirm_password -> fragment_ring_confirm_password
    int fragment_ring_create_password -> fragment_ring_create_password
    int fragment_ring_unlock_settings -> fragment_ring_unlock_settings
    int fragment_settings -> fragment_settings
    int fragment_simple_locker_screen_settings -> fragment_simple_locker_screen_settings
    int fragment_wallpaper -> fragment_wallpaper
    int fragment_widget -> fragment_widget
    int fragment_widget_camera_settings -> fragment_widget_camera_settings
    int fragment_widget_countdown_settings -> fragment_widget_countdown_settings
    int fragment_widget_notification_settings -> fragment_widget_notification_settings
    int fragment_widget_sentence_settings -> fragment_widget_sentence_settings
    int fragment_widget_time_settings -> fragment_widget_time_settings
    int fragment_widget_timing_settings -> fragment_widget_timing_settings
    int group -> group
    int layout_color_picker_dialog -> layout_color_picker_dialog
    int layout_color_picker_swatch -> layout_color_picker_swatch
    int layout_color_picker_view -> layout_color_picker_view
    int layout_crop_image_view -> layout_crop_image_view
    int layout_digital_password_view -> layout_digital_password_view
    int layout_dpicture_password_view -> layout_dpicture_password_view
    int layout_heart_password_view -> layout_heart_password_view
    int layout_locker_mode_cpattern -> layout_locker_mode_cpattern
    int layout_locker_mode_digital -> layout_locker_mode_digital
    int layout_locker_mode_dpicture -> layout_locker_mode_dpicture
    int layout_locker_mode_lpicture -> layout_locker_mode_lpicture
    int layout_locker_mode_none -> layout_locker_mode_none
    int layout_locker_mode_pattern -> layout_locker_mode_pattern
    int layout_locker_mode_ppattern -> layout_locker_mode_ppattern
    int layout_locker_mode_ring -> layout_locker_mode_ring
    int layout_locker_view -> layout_locker_view
    int layout_lockerview_countdown_view -> layout_lockerview_countdown_view
    int layout_lockerview_sentence_view -> layout_lockerview_sentence_view
    int layout_lockerview_time_view -> layout_lockerview_time_view
    int layout_lockerview_timing_view -> layout_lockerview_timing_view
    int layout_lovers_it_view -> layout_lovers_it_view
    int layout_lovers_locker_screen -> layout_lovers_locker_screen
    int layout_lovers_unlock -> layout_lovers_unlock
    int layout_main_menu_item -> layout_main_menu_item
    int layout_name_image_view -> layout_name_image_view
    int layout_name_it_view -> layout_name_it_view
    int layout_name_locker_screen -> layout_name_locker_screen
    int layout_ppicture_password_view -> layout_ppicture_password_view
    int layout_ring_password_view -> layout_ring_password_view
    int layout_simple_locker_screen -> layout_simple_locker_screen
    int layout_view_pager_tab_indicator -> layout_view_pager_tab_indicator
    int list_item_color_picker -> list_item_color_picker
    int list_item_notification -> list_item_notification
    int list_item_notification_app -> list_item_notification_app
    int list_lock_type_item -> list_lock_type_item
    int list_wallpaper_item -> list_wallpaper_item
    int swipeback_layout -> swipeback_layout
    int time_header_label -> time_header_label
    int time_picker_dialog -> time_picker_dialog
    int view_enter_digital_indicator -> view_enter_digital_indicator
    int view_message_indicator -> view_message_indicator
    int year_label_text_view -> year_label_text_view
com.qc4w.ilocker.R$menu -> com.qc4w.ilocker.R$menu:
    int main_menu -> main_menu
    int main_menu_miui -> main_menu_miui
    int menu_with_custom_animation -> menu_with_custom_animation
com.qc4w.ilocker.R$string -> com.qc4w.ilocker.R$string:
    int LOADING -> LOADING
    int accessilibity_des -> accessilibity_des
    int action_not_support -> action_not_support
    int ampm_circle_radius_multiplier -> ampm_circle_radius_multiplier
    int app_name -> app_name
    int apply_label -> apply_label
    int basic_settings -> basic_settings
    int camera_not_found -> camera_not_found
    int cancel -> cancel
    int change_password -> change_password
    int circle_radius_multiplier -> circle_radius_multiplier
    int circle_radius_multiplier_24HourMode -> circle_radius_multiplier_24HourMode
    int clear_label -> clear_label
    int color_dialog_title -> color_dialog_title
    int color_picker_default_title -> color_picker_default_title
    int color_swatch_description -> color_swatch_description
    int color_swatch_description_selected -> color_swatch_description_selected
    int confirm_delete -> confirm_delete
    int confirm_delete_cancel -> confirm_delete_cancel
    int confirm_delete_des -> confirm_delete_des
    int confirm_delete_ok -> confirm_delete_ok
    int confirm_delete_success -> confirm_delete_success
    int confirm_delete_success_des -> confirm_delete_success_des
    int confirm_password -> confirm_password
    int confirm_save -> confirm_save
    int confirm_save_des -> confirm_save_des
    int contour_dialog_title -> contour_dialog_title
    int create_password -> create_password
    int crop__cancel -> crop__cancel
    int crop__done -> crop__done
    int crop__pick_error -> crop__pick_error
    int crop__saving -> crop__saving
    int crop__wait -> crop__wait
    int current_locker_mode_not_need_password -> current_locker_mode_not_need_password
    int day_of_week_label_typeface -> day_of_week_label_typeface
    int day_picker_description -> day_picker_description
    int delete_label -> delete_label
    int deleted_key -> deleted_key
    int dialog_cancel -> dialog_cancel
    int dialog_default_title -> dialog_default_title
    int dialog_ok -> dialog_ok
    int disable_system_lock -> disable_system_lock
    int disable_system_lock_des -> disable_system_lock_des
    int done_label -> done_label
    int draw_pattern_password -> draw_pattern_password
    int drawer_close -> drawer_close
    int drawer_open -> drawer_open
    int email_not_found -> email_not_found
    int enable_admin_tip -> enable_admin_tip
    int enable_auto_start -> enable_auto_start
    int enable_auto_start_des -> enable_auto_start_des
    int enable_system_alert -> enable_system_alert
    int enable_system_alert_des -> enable_system_alert_des
    int enter_digital_password -> enter_digital_password
    int feedback -> feedback
    int gesture_password_guide_creat_btn -> gesture_password_guide_creat_btn
    int gesture_password_guide_text -> gesture_password_guide_text
    int hour_picker_description -> hour_picker_description
    int item_is_selected -> item_is_selected
    int label_crop_image -> label_crop_image
    int label_lock_type_cpattern -> label_lock_type_cpattern
    int label_lock_type_digit -> label_lock_type_digit
    int label_lock_type_dpicture -> label_lock_type_dpicture
    int label_lock_type_lpicture -> label_lock_type_lpicture
    int label_lock_type_mood -> label_lock_type_mood
    int label_lock_type_mylover -> label_lock_type_mylover
    int label_lock_type_myname -> label_lock_type_myname
    int label_lock_type_none -> label_lock_type_none
    int label_lock_type_pattern -> label_lock_type_pattern
    int label_lock_type_ppicture -> label_lock_type_ppicture
    int label_lock_type_ring -> label_lock_type_ring
    int label_lock_type_slide -> label_lock_type_slide
    int label_menu -> label_menu
    int label_preview -> label_preview
    int loading -> loading
    int lockpattern_confirm_button_text -> lockpattern_confirm_button_text
    int lockpattern_continue_button_text -> lockpattern_continue_button_text
    int lockpattern_need_to_confirm -> lockpattern_need_to_confirm
    int lockpattern_need_to_unlock_wrong -> lockpattern_need_to_unlock_wrong
    int lockpattern_pattern_confirmed_header -> lockpattern_pattern_confirmed_header
    int lockpattern_pattern_entered_header -> lockpattern_pattern_entered_header
    int lockpattern_recording_incorrect_too_short -> lockpattern_recording_incorrect_too_short
    int lockpattern_recording_inprogress -> lockpattern_recording_inprogress
    int lockpattern_recording_intro_header -> lockpattern_recording_intro_header
    int lockpattern_retry_button_text -> lockpattern_retry_button_text
    int lockpattern_settings_help_how_to_record -> lockpattern_settings_help_how_to_record
    int lockscreen_access_pattern_cell_added -> lockscreen_access_pattern_cell_added
    int lockscreen_access_pattern_cleared -> lockscreen_access_pattern_cleared
    int lockscreen_access_pattern_detected -> lockscreen_access_pattern_detected
    int lockscreen_access_pattern_start -> lockscreen_access_pattern_start
    int menu_feedback -> menu_feedback
    int menu_help -> menu_help
    int menu_mi -> menu_mi
    int menu_rate -> menu_rate
    int menu_share -> menu_share
    int message_not_found -> message_not_found
    int minute_picker_description -> minute_picker_description
    int no_market_founded -> no_market_founded
    int notification_content -> notification_content
    int numbers_radius_multiplier_inner -> numbers_radius_multiplier_inner
    int numbers_radius_multiplier_normal -> numbers_radius_multiplier_normal
    int numbers_radius_multiplier_outer -> numbers_radius_multiplier_outer
    int ok -> ok
    int one_key_lock_screen -> one_key_lock_screen
    int onekey_settings -> onekey_settings
    int onkey_lock -> onkey_lock
    int onkey_lock_des -> onkey_lock_des
    int password_not_equal -> password_not_equal
    int password_wrong -> password_wrong
    int phone_not_found -> phone_not_found
    int pick_color_label -> pick_color_label
    int pick_contour_label -> pick_contour_label
    int pick_wallpaper_from_gallery -> pick_wallpaper_from_gallery
    int press_back_to_finish -> press_back_to_finish
    int product_info -> product_info
    int radial_numbers_typeface -> radial_numbers_typeface
    int reset -> reset
    int sans_serif -> sans_serif
    int save_cancel -> save_cancel
    int save_completed -> save_completed
    int save_ok -> save_ok
    int save_settings_completed -> save_settings_completed
    int select_day -> select_day
    int select_hours -> select_hours
    int select_minutes -> select_minutes
    int select_year -> select_year
    int selection_radius_multiplier -> selection_radius_multiplier
    int service_enable -> service_enable
    int slide_to_unlock_string -> slide_to_unlock_string
    int text_size_multiplier_inner -> text_size_multiplier_inner
    int text_size_multiplier_normal -> text_size_multiplier_normal
    int text_size_multiplier_outer -> text_size_multiplier_outer
    int time_format -> time_format
    int time_placeholder -> time_placeholder
    int time_separator -> time_separator
    int try_again -> try_again
    int use_help -> use_help
    int version_check_update -> version_check_update
    int widget_countdown_content_default -> widget_countdown_content_default
    int widget_display -> widget_display
    int widget_hide -> widget_hide
    int widget_label_camera -> widget_label_camera
    int widget_label_countdown -> widget_label_countdown
    int widget_label_notification -> widget_label_notification
    int widget_label_sentence -> widget_label_sentence
    int widget_label_time -> widget_label_time
    int widget_label_timing -> widget_label_timing
    int widget_notification_disable_tip -> widget_notification_disable_tip
    int widget_notification_enable_tip -> widget_notification_enable_tip
    int widget_sentence_content_default -> widget_sentence_content_default
    int widget_settings_label -> widget_settings_label
    int widget_timing_content_default -> widget_timing_content_default
    int year_picker_description -> year_picker_description
com.qc4w.ilocker.R$style -> com.qc4w.ilocker.R$style:
    int ActionBar -> ActionBar
    int ActionBar_TitleText -> ActionBar_TitleText
    int Animation_Activity_Translucent -> Animation_Activity_Translucent
    int AppBaseTheme -> AppBaseTheme
    int AppTheme -> AppTheme
    int Button_Operations -> Button_Operations
    int Button_Operations_Negative -> Button_Operations_Negative
    int Crop -> Crop
    int Crop_ActionButton -> Crop_ActionButton
    int Crop_ActionButtonText -> Crop_ActionButtonText
    int Crop_ActionButtonText_Cancel -> Crop_ActionButtonText_Cancel
    int Crop_ActionButtonText_Done -> Crop_ActionButtonText_Done
    int Crop_DoneCancelBar -> Crop_DoneCancelBar
    int LinearLayout_Operations -> LinearLayout_Operations
    int LockScreen -> LockScreen
    int MD -> MD
    int MaterialDesignStyle -> MaterialDesignStyle
    int PopupMenu -> PopupMenu
    int PopupMenuListView -> PopupMenuListView
    int PopupMenuTextView -> PopupMenuTextView
    int SwipeBackLayout -> SwipeBackLayout
    int TransparentDialog -> TransparentDialog
    int alert_dialog -> alert_dialog
    int ampm_label -> ampm_label
    int day_of_week_label_condensed -> day_of_week_label_condensed
    int dialog_blue_button -> dialog_blue_button
    int time_label -> time_label
com.qc4w.ilocker.R$styleable -> com.qc4w.ilocker.R$styleable:
    int[] AddFloatingActionButton -> AddFloatingActionButton
    int AddFloatingActionButton_fab_plusIconColor -> AddFloatingActionButton_fab_plusIconColor
    int[] CircularProgress -> CircularProgress
    int CircularProgress_borderWidth -> CircularProgress_borderWidth
    int[] CropImageView -> CropImageView
    int CropImageView_highlightColor -> CropImageView_highlightColor
    int CropImageView_showHandles -> CropImageView_showHandles
    int CropImageView_showThirds -> CropImageView_showThirds
    int[] FadeButtonView -> FadeButtonView
    int FadeButtonView_fbv_alpha -> FadeButtonView_fbv_alpha
    int FadeButtonView_fbv_color -> FadeButtonView_fbv_color
    int FadeButtonView_fbv_radius -> FadeButtonView_fbv_radius
    int[] FadeImageButtonView -> FadeImageButtonView
    int FadeImageButtonView_fibv_alpha -> FadeImageButtonView_fibv_alpha
    int FadeImageButtonView_fibv_color -> FadeImageButtonView_fibv_color
    int FadeImageButtonView_fibv_number -> FadeImageButtonView_fibv_number
    int FadeImageButtonView_fibv_radius -> FadeImageButtonView_fibv_radius
    int[] FloatingActionButton -> FloatingActionButton
    int FloatingActionButton_fab_colorNormal -> FloatingActionButton_fab_colorNormal
    int FloatingActionButton_fab_colorPressed -> FloatingActionButton_fab_colorPressed
    int FloatingActionButton_fab_icon -> FloatingActionButton_fab_icon
    int FloatingActionButton_fab_size -> FloatingActionButton_fab_size
    int[] FloatingActionsMenu -> FloatingActionsMenu
    int FloatingActionsMenu_fab_addButtonColorNormal -> FloatingActionsMenu_fab_addButtonColorNormal
    int FloatingActionsMenu_fab_addButtonColorPressed -> FloatingActionsMenu_fab_addButtonColorPressed
    int FloatingActionsMenu_fab_addButtonPlusIconColor -> FloatingActionsMenu_fab_addButtonPlusIconColor
    int FloatingActionsMenu_fab_expandDirection -> FloatingActionsMenu_fab_expandDirection
    int[] GradientView -> GradientView
    int GradientView_SlideColor -> GradientView_SlideColor
    int GradientView_StringToShow -> GradientView_StringToShow
    int GradientView_TextColor -> GradientView_TextColor
    int GradientView_TextSize -> GradientView_TextSize
    int[] LockPatternView -> LockPatternView
    int LockPatternView_arrowGreenUp -> LockPatternView_arrowGreenUp
    int LockPatternView_arrowRedUp -> LockPatternView_arrowRedUp
    int LockPatternView_aspect -> LockPatternView_aspect
    int LockPatternView_btnNormal -> LockPatternView_btnNormal
    int LockPatternView_btnTouched -> LockPatternView_btnTouched
    int LockPatternView_circleGreen -> LockPatternView_circleGreen
    int LockPatternView_circleNormal -> LockPatternView_circleNormal
    int LockPatternView_circleRed -> LockPatternView_circleRed
    int LockPatternView_line -> LockPatternView_line
    int[] NameImageView -> NameImageView
    int NameImageView_niv_radius -> NameImageView_niv_radius
    int[] Rotate3dAnimation -> Rotate3dAnimation
    int Rotate3dAnimation_fromDeg -> Rotate3dAnimation_fromDeg
    int Rotate3dAnimation_pivotX -> Rotate3dAnimation_pivotX
    int Rotate3dAnimation_pivotY -> Rotate3dAnimation_pivotY
    int Rotate3dAnimation_rollType -> Rotate3dAnimation_rollType
    int Rotate3dAnimation_toDeg -> Rotate3dAnimation_toDeg
    int[] ShimmerView -> ShimmerView
    int ShimmerView_reflectionColor -> ShimmerView_reflectionColor
    int[] SlideBar -> SlideBar
    int SlideBar_LeftAnimationDuratioin -> SlideBar_LeftAnimationDuratioin
    int SlideBar_MinDistanceToUnlock -> SlideBar_MinDistanceToUnlock
    int SlideBar_MinVelocityXToUnlock -> SlideBar_MinVelocityXToUnlock
    int SlideBar_RightAnimationDuratioin -> SlideBar_RightAnimationDuratioin
    int[] SpringIndicator -> SpringIndicator
    int SpringIndicator_siIndicatorColor -> SpringIndicator_siIndicatorColor
    int SpringIndicator_siIndicatorColors -> SpringIndicator_siIndicatorColors
    int SpringIndicator_siRadiusMax -> SpringIndicator_siRadiusMax
    int SpringIndicator_siRadiusMin -> SpringIndicator_siRadiusMin
    int SpringIndicator_siSelectedTextColor -> SpringIndicator_siSelectedTextColor
    int SpringIndicator_siTextBg -> SpringIndicator_siTextBg
    int SpringIndicator_siTextColor -> SpringIndicator_siTextColor
    int SpringIndicator_siTextSize -> SpringIndicator_siTextSize
    int[] SwipeBackLayout -> SwipeBackLayout
    int SwipeBackLayout_edge_flag -> SwipeBackLayout_edge_flag
    int SwipeBackLayout_edge_size -> SwipeBackLayout_edge_size
    int SwipeBackLayout_shadow_bottom -> SwipeBackLayout_shadow_bottom
    int SwipeBackLayout_shadow_left -> SwipeBackLayout_shadow_left
    int SwipeBackLayout_shadow_right -> SwipeBackLayout_shadow_right
    int[] SwitchButton -> SwitchButton
    int SwitchButton_animationVelocity -> SwitchButton_animationVelocity
    int SwitchButton_insetBottom -> SwitchButton_insetBottom
    int SwitchButton_insetLeft -> SwitchButton_insetLeft
    int SwitchButton_insetRight -> SwitchButton_insetRight
    int SwitchButton_insetTop -> SwitchButton_insetTop
    int SwitchButton_measureFactor -> SwitchButton_measureFactor
    int SwitchButton_offColor -> SwitchButton_offColor
    int SwitchButton_offDrawable -> SwitchButton_offDrawable
    int SwitchButton_onColor -> SwitchButton_onColor
    int SwitchButton_onDrawable -> SwitchButton_onDrawable
    int SwitchButton_radius -> SwitchButton_radius
    int SwitchButton_thumbColor -> SwitchButton_thumbColor
    int SwitchButton_thumbDrawable -> SwitchButton_thumbDrawable
    int SwitchButton_thumbPressedColor -> SwitchButton_thumbPressedColor
    int SwitchButton_thumb_height -> SwitchButton_thumb_height
    int SwitchButton_thumb_margin -> SwitchButton_thumb_margin
    int SwitchButton_thumb_marginBottom -> SwitchButton_thumb_marginBottom
    int SwitchButton_thumb_marginLeft -> SwitchButton_thumb_marginLeft
    int SwitchButton_thumb_marginRight -> SwitchButton_thumb_marginRight
    int SwitchButton_thumb_marginTop -> SwitchButton_thumb_marginTop
    int SwitchButton_thumb_width -> SwitchButton_thumb_width
    int[] ViewMsgTitleIndict -> ViewMsgTitleIndict
    int ViewMsgTitleIndict_indicatorHeight -> ViewMsgTitleIndict_indicatorHeight
    int ViewMsgTitleIndict_numSize -> ViewMsgTitleIndict_numSize
    int ViewMsgTitleIndict_num_color -> ViewMsgTitleIndict_num_color
    int ViewMsgTitleIndict_tabCount -> ViewMsgTitleIndict_tabCount
    int ViewMsgTitleIndict_textArray -> ViewMsgTitleIndict_textArray
    int ViewMsgTitleIndict_textColor -> ViewMsgTitleIndict_textColor
    int ViewMsgTitleIndict_textColor_default -> ViewMsgTitleIndict_textColor_default
    int ViewMsgTitleIndict_textColor_selected -> ViewMsgTitleIndict_textColor_selected
    int ViewMsgTitleIndict_textSize -> ViewMsgTitleIndict_textSize
    int[] arc_ArcLayout -> arc_ArcLayout
    int arc_ArcLayout_arc_axisRadius -> arc_ArcLayout_arc_axisRadius
    int arc_ArcLayout_arc_color -> arc_ArcLayout_arc_color
    int arc_ArcLayout_arc_freeAngle -> arc_ArcLayout_arc_freeAngle
    int arc_ArcLayout_arc_origin -> arc_ArcLayout_arc_origin
    int arc_ArcLayout_arc_radius -> arc_ArcLayout_arc_radius
    int arc_ArcLayout_arc_reverseAngle -> arc_ArcLayout_arc_reverseAngle
    int[] arc_ArcLayout_Layout -> arc_ArcLayout_Layout
    int arc_ArcLayout_Layout_arc_angle -> arc_ArcLayout_Layout_arc_angle
    int arc_ArcLayout_Layout_arc_origin -> arc_ArcLayout_Layout_arc_origin
    int[] stl_SmartTabLayout -> stl_SmartTabLayout
    int stl_SmartTabLayout_stl_customTabTextLayoutId -> stl_SmartTabLayout_stl_customTabTextLayoutId
    int stl_SmartTabLayout_stl_customTabTextViewId -> stl_SmartTabLayout_stl_customTabTextViewId
    int stl_SmartTabLayout_stl_defaultTabTextAllCaps -> stl_SmartTabLayout_stl_defaultTabTextAllCaps
    int stl_SmartTabLayout_stl_defaultTabTextColor -> stl_SmartTabLayout_stl_defaultTabTextColor
    int stl_SmartTabLayout_stl_defaultTabTextHorizontalPadding -> stl_SmartTabLayout_stl_defaultTabTextHorizontalPadding
    int stl_SmartTabLayout_stl_defaultTabTextMinWidth -> stl_SmartTabLayout_stl_defaultTabTextMinWidth
    int stl_SmartTabLayout_stl_defaultTabTextSize -> stl_SmartTabLayout_stl_defaultTabTextSize
    int stl_SmartTabLayout_stl_distributeEvenly -> stl_SmartTabLayout_stl_distributeEvenly
    int stl_SmartTabLayout_stl_dividerColor -> stl_SmartTabLayout_stl_dividerColor
    int stl_SmartTabLayout_stl_dividerColors -> stl_SmartTabLayout_stl_dividerColors
    int stl_SmartTabLayout_stl_dividerThickness -> stl_SmartTabLayout_stl_dividerThickness
    int stl_SmartTabLayout_stl_indicatorAlwaysInCenter -> stl_SmartTabLayout_stl_indicatorAlwaysInCenter
    int stl_SmartTabLayout_stl_indicatorColor -> stl_SmartTabLayout_stl_indicatorColor
    int stl_SmartTabLayout_stl_indicatorColors -> stl_SmartTabLayout_stl_indicatorColors
    int stl_SmartTabLayout_stl_indicatorCornerRadius -> stl_SmartTabLayout_stl_indicatorCornerRadius
    int stl_SmartTabLayout_stl_indicatorInFront -> stl_SmartTabLayout_stl_indicatorInFront
    int stl_SmartTabLayout_stl_indicatorInterpolation -> stl_SmartTabLayout_stl_indicatorInterpolation
    int stl_SmartTabLayout_stl_indicatorThickness -> stl_SmartTabLayout_stl_indicatorThickness
    int stl_SmartTabLayout_stl_underlineColor -> stl_SmartTabLayout_stl_underlineColor
    int stl_SmartTabLayout_stl_underlineThickness -> stl_SmartTabLayout_stl_underlineThickness
com.qc4w.ilocker.R$xml -> com.qc4w.ilocker.R$xml:
    int accessibility_service_config -> accessibility_service_config
    int lock_screen -> lock_screen
com.qc4w.ilocker.config.ConfigManager -> com.qc4w.ilocker.a.a:
    com.qc4w.ilocker.config.ConfigManager instance -> a
    android.content.SharedPreferences mPreferences -> b
    android.content.Context mContext -> c
    com.qc4w.ilocker.config.ConfigManager getInstance(android.content.Context) -> a
    boolean isMIUISettingsTip() -> a
    void setMIUISettingsTip$1385ff() -> b
    boolean isServiceEnable() -> c
    void setServiceEnable(boolean) -> a
    boolean isWallpaperInited() -> d
    void setWallpaperInited$1385ff() -> e
    int getLockerScreenType() -> f
    void setLockerScreenType(int) -> a
    int getLockerModeType() -> g
    void setLockerModeType(int) -> b
    java.lang.String getSlideUnlockText() -> h
    void setSlideUnlockText(java.lang.String) -> a
    int getSlideUnlockTextColor() -> i
    void setSlideUnlockTextColor(int) -> c
    java.lang.String getLoversUnlockText() -> j
    void setLoversUnlockText(java.lang.String) -> b
    java.lang.String getLoversImagesText() -> k
    void setLoversImageText(java.lang.String) -> c
    int getLoversUnlockTextColor() -> l
    void setLoversUnlockTextColor(int) -> d
    int getLoversImagesTextColor() -> m
    void setLoversImagesTextColor(int) -> e
    boolean isNotificationIconShown() -> n
    void setScreenHeight(int) -> f
    int getScreenHeight() -> o
    void setScreenWidth(int) -> g
    int getScreenWidth() -> p
    java.lang.String getDigitalPassword() -> q
    void setDigitalPassword(java.lang.String) -> d
    java.lang.String getPatternPassword() -> r
    void setPatternPassword(java.lang.String) -> e
    void setDigitalColor(int) -> h
    int getDigitalColor() -> s
    void setDigitalContour(int) -> i
    int getDigitalContour() -> t
    void setNameUnlockText(java.lang.String) -> f
    java.lang.String getNameUnlockText() -> u
    void setNameImageText(java.lang.String) -> g
    java.lang.String getNameImageText() -> v
    void setNameUnlockTextColor(int) -> j
    int getNameUnlockTextColor() -> w
    void setNameImageTextColor(int) -> k
    int getNameImageTextColor() -> x
    void setNameImageContour(int) -> l
    int getNameImageContour() -> y
    void setPatternColor(int) -> m
    int getDPictureContour() -> z
    void setDPictureContour(int) -> n
    int getDPictureColor() -> A
    void setDPictureColor(int) -> o
    int getPPictureContour() -> B
    void setPPictureContour(int) -> p
    int getPPictureColor() -> C
    void setPPictureColor(int) -> q
    int getLPictureContour() -> D
    void setLPictureContour(int) -> r
    int getRingColor() -> E
    void setRingColor(int) -> s
    int getRingContour() -> F
    void setRingContour(int) -> t
    int getLPictureColor() -> G
    void setLPictureColor(int) -> u
    int getPatternColor() -> H
    int getCPatternNormalContour() -> I
    void setCPatternNormalContour(int) -> v
    int getCPatternTouchedContour() -> J
    void setCPatternTouchedContour(int) -> w
    boolean isWidgetTimeEnable() -> K
    void setWidgetTimeEnable(boolean) -> b
    boolean isWidgetSentenceEnable() -> L
    void setWidgetSentenceEnable(boolean) -> c
    boolean isWidgetCountdownEnable() -> M
    void setWidgetCountdownEnable(boolean) -> d
    boolean isWidgetTimingEnable() -> N
    void setWidgetTimingEnable(boolean) -> e
    boolean isWidgetCameraEnable() -> O
    void setWidgetCameraEnable(boolean) -> f
    java.lang.String getSentenceContent() -> P
    void setSentenceContnet(java.lang.String) -> h
    java.lang.String getCountdownContent() -> Q
    void setCountdownContent(java.lang.String) -> i
    long getCountdownTimestamp() -> R
    void setCountdownTimestamp(long) -> a
    java.lang.String getTimingContent() -> S
    void setTimingContent(java.lang.String) -> j
    long getTimingTimestamp() -> T
    void setTimingTimestamp(long) -> b
    int getWidgetTimeColor() -> U
    void setWidgetTimeColor(int) -> x
    int getWidgetSentenceColor() -> V
    void setWidgetSentenceColor(int) -> y
    int getWidgetCountdownColor() -> W
    void setWidgetCountdownColor(int) -> z
    int getWidgetTimingColor() -> X
    void setWidgetTimingColor(int) -> A
    int getWidgetCameraColor() -> Y
    void setWidgetCameraColor(int) -> B
com.qc4w.ilocker.db.ILockerDBHelper -> com.qc4w.ilocker.b.a:
    com.qc4w.ilocker.db.ILockerDBHelper instance -> a
    com.qc4w.ilocker.db.ILockerDBHelper getInstance(android.content.Context) -> a
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
com.qc4w.ilocker.db.NotificationAppConstants -> com.qc4w.ilocker.b.b:
    java.lang.String create_table_sql -> a
com.qc4w.ilocker.db.NotificationAppDAO -> com.qc4w.ilocker.b.c:
    java.lang.String TAG -> a
    com.qc4w.ilocker.db.NotificationAppDAO instance -> b
    android.database.sqlite.SQLiteOpenHelper mDBHelper -> c
    android.content.Context context -> d
    com.qc4w.ilocker.db.NotificationAppDAO getInstance(android.content.Context) -> a
    void add(com.qc4w.ilocker.domain.NotificationApp) -> a
    void delete(java.lang.String) -> a
    boolean isAppExists(java.lang.String) -> b
com.qc4w.ilocker.db.WallpaperConstants -> com.qc4w.ilocker.b.d:
    java.lang.String create_table_sql -> a
com.qc4w.ilocker.db.WallpaperDAO -> com.qc4w.ilocker.b.e:
    java.lang.String TAG -> a
    com.qc4w.ilocker.db.WallpaperDAO instance -> b
    com.qc4w.ilocker.db.ILockerDBHelper mDBHelper -> c
    com.qc4w.ilocker.db.WallpaperDAO getInstance(android.content.Context) -> a
    com.qc4w.ilocker.domain.Wallpaper getCurrent() -> a
    long add(com.qc4w.ilocker.domain.Wallpaper) -> a
    java.util.List getAll() -> b
    int delete(int) -> a
    void cancelCurrent() -> c
    void setCurrent(int) -> b
    void initWallpaper(android.content.Context) -> b
com.qc4w.ilocker.domain.NotificationApp -> com.qc4w.ilocker.c.a:
    java.lang.String label -> a
    java.lang.String pkgName -> b
    boolean showNotification -> c
    boolean hasActivity -> d
    java.lang.String getLabel() -> a
    void setLabel(java.lang.String) -> a
    java.lang.String getPkgName() -> b
    void setPkgName(java.lang.String) -> b
    boolean isShowNotification() -> c
    void setShowNotification(boolean) -> a
    void setHasActivity$1385ff() -> d
com.qc4w.ilocker.domain.NotificationWrapper -> com.qc4w.ilocker.c.b:
    android.app.Notification notification -> a
    android.app.Notification getNotification() -> a
    boolean equals(java.lang.Object) -> equals
com.qc4w.ilocker.domain.Wallpaper -> com.qc4w.ilocker.c.c:
    long serialVersionUID -> serialVersionUID
    int id -> a
    java.lang.String path -> b
    boolean isPreSet -> c
    boolean isCurrent -> d
    int getId() -> a
    void setId(int) -> a
    java.lang.String getPath() -> b
    void setPath(java.lang.String) -> a
    boolean isPreSet() -> c
    void setPreSet(boolean) -> a
    boolean isCurrent() -> d
    void setCurrent(boolean) -> b
com.qc4w.ilocker.receiver.AdminReceiver -> com.qc4w.ilocker.receiver.AdminReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.qc4w.ilocker.receiver.AutoBootReceiver -> com.qc4w.ilocker.receiver.AutoBootReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.qc4w.ilocker.receiver.SystemStateHelper -> com.qc4w.ilocker.receiver.a:
    android.content.Context mContext -> b
    boolean mStarted -> c
    com.qc4w.ilocker.receiver.SystemStateHelper instance -> d
    java.util.List mListeners -> a
    android.content.BroadcastReceiver mReceiver -> e
    com.qc4w.ilocker.receiver.SystemStateHelper getInstance(android.content.Context) -> a
    void startService() -> a
    void addListener(com.qc4w.ilocker.receiver.SystemStateHelper$OnScreenListener) -> a
com.qc4w.ilocker.receiver.SystemStateHelper$1 -> com.qc4w.ilocker.receiver.b:
    com.qc4w.ilocker.receiver.SystemStateHelper this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.qc4w.ilocker.receiver.SystemStateHelper$OnScreenListener -> com.qc4w.ilocker.receiver.c:
    void onScreenOff() -> a
com.qc4w.ilocker.service.LockerService -> com.qc4w.ilocker.service.LockerService:
    com.qc4w.ilocker.receiver.SystemStateHelper mScreenStateHelper -> a
    com.qc4w.ilocker.ui.lock.LockerManager mLockerManager -> b
    com.qc4w.ilocker.config.ConfigManager mConfig -> c
    boolean isCalling -> d
    void onCreate() -> onCreate
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void onScreenOff() -> a
    void onIdle() -> b
    void onRinging() -> c
    void onOutGoingCall() -> d
com.qc4w.ilocker.service.NotifyAccessibilityService -> com.qc4w.ilocker.service.NotifyAccessibilityService:
    void onAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onAccessibilityEvent
    void onServiceConnected() -> onServiceConnected
    void onInterrupt() -> onInterrupt
com.qc4w.ilocker.service.PhoneListener -> com.qc4w.ilocker.service.a:
    com.qc4w.ilocker.service.PhoneListener$OnPhoneStateChangeListener listener -> a
    android.content.BroadcastReceiver mReceiver -> b
    void onCallStateChanged(int,java.lang.String) -> onCallStateChanged
    com.qc4w.ilocker.service.PhoneListener$OnPhoneStateChangeListener access$0(com.qc4w.ilocker.service.PhoneListener) -> a
com.qc4w.ilocker.service.PhoneListener$1 -> com.qc4w.ilocker.service.b:
    com.qc4w.ilocker.service.PhoneListener this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.qc4w.ilocker.service.PhoneListener$OnPhoneStateChangeListener -> com.qc4w.ilocker.service.c:
    void onIdle() -> b
    void onRinging() -> c
    void onOutGoingCall() -> d
com.qc4w.ilocker.ui.ActivityBase -> com.qc4w.ilocker.ui.a:
    void onCreate(android.os.Bundle) -> onCreate
com.qc4w.ilocker.ui.CPatternPickerActivity -> com.qc4w.ilocker.ui.CPatternPickerActivity:
    void onCreate(android.os.Bundle) -> onCreate
com.qc4w.ilocker.ui.CommentActivity -> com.qc4w.ilocker.ui.CommentActivity:
    java.lang.String content -> a
    android.widget.PopupWindow popupWindow -> b
    com.qc4w.ilocker.ui.view.KeyPressListenableFrameLayout mLayoutComment -> c
    android.widget.LinearLayout mLayoutFooterPlaceHolder -> d
    android.widget.EditText mEditTextComment -> e
    android.widget.ImageView mImageClose -> f
    android.widget.ImageView mImageSubmit -> g
    android.view.LayoutInflater inflater -> h
    com.qc4w.ilocker.ui.view.NoSizeCircleColorView mIVColorButton -> i
    boolean isKeyBoardVisible -> j
    int previousParentHeight -> k
    int keyboardHeight -> l
    int width -> m
    com.qc4w.ilocker.ui.view.ColorPickerView colorPickerView -> n
    int color -> o
    void onCreate(android.os.Bundle) -> onCreate
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void changeKeyboardHeight(int) -> a
    void onClick(android.view.View) -> onClick
    void finishComment(boolean) -> a
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyPreIme(android.view.KeyEvent) -> onKeyPreIme
    void onColorSelected(int) -> onColorSelected
    com.qc4w.ilocker.ui.view.KeyPressListenableFrameLayout access$0(com.qc4w.ilocker.ui.CommentActivity) -> a
    int access$1(com.qc4w.ilocker.ui.CommentActivity) -> b
    android.widget.PopupWindow access$2(com.qc4w.ilocker.ui.CommentActivity) -> c
    void access$3(com.qc4w.ilocker.ui.CommentActivity,int) -> a
    void access$4(com.qc4w.ilocker.ui.CommentActivity,boolean) -> a
    void access$5(com.qc4w.ilocker.ui.CommentActivity,int) -> b
    android.widget.LinearLayout access$6(com.qc4w.ilocker.ui.CommentActivity) -> d
com.qc4w.ilocker.ui.CommentActivity$1 -> com.qc4w.ilocker.ui.b:
    com.qc4w.ilocker.ui.CommentActivity this$0 -> a
    void onGlobalLayout() -> onGlobalLayout
com.qc4w.ilocker.ui.CommentActivity$2 -> com.qc4w.ilocker.ui.c:
    com.qc4w.ilocker.ui.CommentActivity this$0 -> a
    void onDismiss() -> onDismiss
com.qc4w.ilocker.ui.ConfirmPasswordActivity -> com.qc4w.ilocker.ui.ConfirmPasswordActivity:
    int type -> a
    void onCreate(android.os.Bundle) -> onCreate
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
com.qc4w.ilocker.ui.CreatePasswordActivity -> com.qc4w.ilocker.ui.CreatePasswordActivity:
    int type -> a
    void onCreate(android.os.Bundle) -> onCreate
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
com.qc4w.ilocker.ui.CropImageActivity -> com.qc4w.ilocker.ui.CropImageActivity:
    java.lang.String path -> a
    int aspectX -> b
    int aspectY -> c
    void onCreate(android.os.Bundle) -> onCreate
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
com.qc4w.ilocker.ui.DismissActivity -> com.qc4w.ilocker.ui.DismissActivity:
    android.app.Activity instance -> a
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onPause() -> onPause
    android.app.Activity getInstance() -> a
com.qc4w.ilocker.ui.HelpActivity -> com.qc4w.ilocker.ui.HelpActivity:
    com.qc4w.ilocker.ui.view.PinnedHeaderExpandableListView expandableListView -> a
    com.qc4w.ilocker.ui.view.StickyLayout stickyLayout -> b
    java.lang.String[] questions -> c
    java.lang.String[] answers -> d
    com.qc4w.ilocker.ui.HelpActivity$MyexpandableListAdapter adapter -> e
    void onCreate(android.os.Bundle) -> onCreate
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    android.view.View getPinnedHeader() -> getPinnedHeader
    void updatePinnedHeader(android.view.View,int) -> updatePinnedHeader
    boolean giveUpTouchEvent(android.view.MotionEvent) -> giveUpTouchEvent
    java.lang.String[] access$0(com.qc4w.ilocker.ui.HelpActivity) -> a
    java.lang.String[] access$1(com.qc4w.ilocker.ui.HelpActivity) -> b
com.qc4w.ilocker.ui.HelpActivity$1 -> com.qc4w.ilocker.ui.d:
    com.qc4w.ilocker.ui.HelpActivity this$0 -> a
    boolean onGroupClick(android.widget.ExpandableListView,android.view.View,int,long) -> onGroupClick
com.qc4w.ilocker.ui.HelpActivity$ChildHolder -> com.qc4w.ilocker.ui.e:
    android.widget.TextView textName -> a
    com.qc4w.ilocker.ui.HelpActivity this$0 -> b
com.qc4w.ilocker.ui.HelpActivity$GroupHolder -> com.qc4w.ilocker.ui.f:
    android.widget.TextView textView -> a
    com.qc4w.ilocker.ui.HelpActivity this$0 -> b
com.qc4w.ilocker.ui.HelpActivity$MyexpandableListAdapter -> com.qc4w.ilocker.ui.g:
    android.content.Context context -> b
    android.view.LayoutInflater inflater -> c
    com.qc4w.ilocker.ui.HelpActivity this$0 -> a
    int getGroupCount() -> getGroupCount
    int getChildrenCount(int) -> getChildrenCount
    java.lang.Object getGroup(int) -> getGroup
    java.lang.Object getChild(int,int) -> getChild
    long getGroupId(int) -> getGroupId
    long getChildId(int,int) -> getChildId
    boolean hasStableIds() -> hasStableIds
    android.view.View getGroupView(int,boolean,android.view.View,android.view.ViewGroup) -> getGroupView
    android.view.View getChildView(int,int,boolean,android.view.View,android.view.ViewGroup) -> getChildView
    boolean isChildSelectable(int,int) -> isChildSelectable
com.qc4w.ilocker.ui.LockScreenActivity -> com.qc4w.ilocker.ui.LockScreenActivity:
    android.app.admin.DevicePolicyManager policyManager -> a
    android.content.ComponentName componentName -> b
    void onCreate(android.os.Bundle) -> onCreate
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
com.qc4w.ilocker.ui.MIUISettingsActivity -> com.qc4w.ilocker.ui.MIUISettingsActivity:
    void onCreate(android.os.Bundle) -> onCreate
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onClick(android.view.View) -> onClick
com.qc4w.ilocker.ui.MainStageActivity -> com.qc4w.ilocker.ui.MainStageActivity:
    android.support.v4.widget.DrawerLayout mDrawerLayout -> a
    android.widget.ListView mDrawerList -> b
    com.ikimuhendis.ldrawer.ActionBarDrawerToggle mDrawerToggle -> c
    com.ikimuhendis.ldrawer.DrawerArrowDrawable drawerArrow -> d
    com.qc4w.ilocker.ui.adapter.MenuAdapter mMenuAdapter -> e
    android.support.v4.app.FragmentManager mFM -> f
    android.support.v4.app.Fragment mOldFragment -> g
    long mLastKeyTime -> h
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onPause() -> onPause
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onPostCreate(android.os.Bundle) -> onPostCreate
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    android.support.v4.widget.DrawerLayout access$0(com.qc4w.ilocker.ui.MainStageActivity) -> a
    android.widget.ListView access$1(com.qc4w.ilocker.ui.MainStageActivity) -> b
    com.qc4w.ilocker.ui.adapter.MenuAdapter access$2(com.qc4w.ilocker.ui.MainStageActivity) -> c
    android.support.v4.app.Fragment access$3(com.qc4w.ilocker.ui.MainStageActivity) -> d
    android.support.v4.app.FragmentManager access$4(com.qc4w.ilocker.ui.MainStageActivity) -> e
    void access$5(com.qc4w.ilocker.ui.MainStageActivity,android.support.v4.app.Fragment) -> a
com.qc4w.ilocker.ui.MainStageActivity$1 -> com.qc4w.ilocker.ui.h:
    com.qc4w.ilocker.ui.MainStageActivity this$0 -> l
com.qc4w.ilocker.ui.MainStageActivity$2 -> com.qc4w.ilocker.ui.i:
    com.qc4w.ilocker.ui.MainStageActivity this$0 -> g
    void onDrawerClosed(android.view.View) -> onDrawerClosed
    void onDrawerOpened(android.view.View) -> onDrawerOpened
com.qc4w.ilocker.ui.MainStageActivity$3 -> com.qc4w.ilocker.ui.j:
    com.qc4w.ilocker.ui.MainStageActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.qc4w.ilocker.ui.MenuDemoActivity -> com.qc4w.ilocker.ui.MenuDemoActivity:
    void onCreate(android.os.Bundle) -> onCreate
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
com.qc4w.ilocker.ui.MenuDemoActivity$CustomAnimationDemoFragment -> com.qc4w.ilocker.ui.k:
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
com.qc4w.ilocker.ui.MenuDemoActivity$CustomAnimationDemoFragment$1 -> com.qc4w.ilocker.ui.l:
    com.qc4w.ilocker.ui.MenuDemoActivity$CustomAnimationDemoFragment this$1 -> a
    void onContourSelected(int) -> b
com.qc4w.ilocker.ui.MenuDemoActivity$CustomAnimationDemoFragment$2 -> com.qc4w.ilocker.ui.m:
    com.qc4w.ilocker.ui.MenuDemoActivity$CustomAnimationDemoFragment this$1 -> a
    com.fourmob.colorpicker.PickerDialog val$contourPickerDialog -> b
    void onClick(android.view.View) -> onClick
com.qc4w.ilocker.ui.PreViewActivity -> com.qc4w.ilocker.ui.PreViewActivity:
    com.qc4w.ilocker.ui.fragment.FragmentBase fragment -> a
    int page -> b
    int type -> c
    void onCreate(android.os.Bundle) -> onCreate
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
com.qc4w.ilocker.ui.SplashActivity -> com.qc4w.ilocker.ui.SplashActivity:
    java.lang.String TAG -> a
    android.widget.Button fab -> b
    android.view.View mRootLayout -> c
    com.qc4w.ilocker.ui.view.ClipRevealFrame mMenuLayout -> d
    android.widget.TextView mTVWelcome -> e
    android.os.Handler mHandler -> f
    void onCreate(android.os.Bundle) -> onCreate
    android.widget.Button access$0(com.qc4w.ilocker.ui.SplashActivity) -> a
    void access$1(com.qc4w.ilocker.ui.SplashActivity,android.view.View) -> a
com.qc4w.ilocker.ui.SplashActivity$1 -> com.qc4w.ilocker.ui.n:
    com.qc4w.ilocker.ui.SplashActivity this$0 -> a
    boolean handleMessage(android.os.Message) -> handleMessage
com.qc4w.ilocker.ui.SplashActivity$2 -> com.qc4w.ilocker.ui.o:
    com.qc4w.ilocker.ui.SplashActivity this$0 -> a
    com.qc4w.ilocker.ui.view.ClipRevealFrame val$view -> b
    void onAnimationStart(android.animation.Animator) -> onAnimationStart
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    void onAnimationRepeat(android.animation.Animator) -> onAnimationRepeat
com.qc4w.ilocker.ui.WidgetSettingsActivity -> com.qc4w.ilocker.ui.WidgetSettingsActivity:
    int widgetType -> a
    void onCreate(android.os.Bundle) -> onCreate
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
com.qc4w.ilocker.ui.adapter.ColorPickerAdapter -> com.qc4w.ilocker.ui.a.a:
    int[] colors -> a
    android.view.LayoutInflater inflater -> b
    int defColor -> c
    com.qc4w.ilocker.ui.adapter.ColorPickerAdapter$OnColorSelectedListener listener -> d
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    int[] access$0(com.qc4w.ilocker.ui.adapter.ColorPickerAdapter) -> a
    void access$1(com.qc4w.ilocker.ui.adapter.ColorPickerAdapter,int) -> a
    com.qc4w.ilocker.ui.adapter.ColorPickerAdapter$OnColorSelectedListener access$2(com.qc4w.ilocker.ui.adapter.ColorPickerAdapter) -> b
    int access$3(com.qc4w.ilocker.ui.adapter.ColorPickerAdapter) -> c
com.qc4w.ilocker.ui.adapter.ColorPickerAdapter$1 -> com.qc4w.ilocker.ui.a.b:
    com.qc4w.ilocker.ui.adapter.ColorPickerAdapter this$0 -> a
    int val$position -> b
    void onClick(android.view.View) -> onClick
com.qc4w.ilocker.ui.adapter.ColorPickerAdapter$OnColorSelectedListener -> com.qc4w.ilocker.ui.a.c:
    void onColorSelected(int) -> onColorSelected
com.qc4w.ilocker.ui.adapter.ColorPickerAdapter$ViewHolder -> com.qc4w.ilocker.ui.a.d:
    com.qc4w.ilocker.ui.view.CircleColorView ccv -> a
    android.widget.ImageView ivCurrentFlag -> b
    com.qc4w.ilocker.ui.adapter.ColorPickerAdapter this$0 -> c
com.qc4w.ilocker.ui.adapter.LockerModeAdapter -> com.qc4w.ilocker.ui.a.e:
    android.view.LayoutInflater mInflater -> a
    com.qc4w.ilocker.config.ConfigManager mConfig -> b
    android.content.Context mContext -> c
    int[] images -> d
    int[] names -> e
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    com.qc4w.ilocker.config.ConfigManager access$0(com.qc4w.ilocker.ui.adapter.LockerModeAdapter) -> a
    android.content.Context access$1(com.qc4w.ilocker.ui.adapter.LockerModeAdapter) -> b
com.qc4w.ilocker.ui.adapter.LockerModeAdapter$1 -> com.qc4w.ilocker.ui.a.f:
    com.qc4w.ilocker.ui.adapter.LockerModeAdapter this$0 -> a
    int val$position -> b
    android.widget.ImageView val$current -> c
    void onClick(android.view.View) -> onClick
com.qc4w.ilocker.ui.adapter.LockerScreenAdapter -> com.qc4w.ilocker.ui.a.g:
    android.view.LayoutInflater mInflater -> a
    com.qc4w.ilocker.config.ConfigManager mConfig -> b
    android.content.Context mContext -> c
    int[] images -> d
    int[] names -> e
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.content.Context access$0(com.qc4w.ilocker.ui.adapter.LockerScreenAdapter) -> a
com.qc4w.ilocker.ui.adapter.LockerScreenAdapter$1 -> com.qc4w.ilocker.ui.a.h:
    com.qc4w.ilocker.ui.adapter.LockerScreenAdapter this$0 -> a
    int val$position -> b
    void onClick(android.view.View) -> onClick
com.qc4w.ilocker.ui.adapter.LockerViewWidgetAdapter -> com.qc4w.ilocker.ui.a.i:
    java.util.List views -> a
    int getCount() -> getCount
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
com.qc4w.ilocker.ui.adapter.MenuAdapter -> com.qc4w.ilocker.ui.a.j:
    int[] mImagesNormal -> a
    int[] mImagesSelect -> b
    java.lang.String[] mMenus -> c
    int mDefaultColor -> d
    int mSelectColor -> e
    int mCurrentPosition -> f
    android.view.LayoutInflater mInflater -> g
    void setSelectPosition(int) -> a
    int getSelectPosition() -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.qc4w.ilocker.ui.adapter.NotificationAdapter -> com.qc4w.ilocker.ui.a.k:
    java.util.List notifications -> a
    android.view.LayoutInflater inflater -> b
    android.content.Context context -> c
    com.qc4w.ilocker.util.PackageImageLoader loader -> d
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.qc4w.ilocker.ui.adapter.NotificationAdapter$ViewHolder -> com.qc4w.ilocker.ui.a.l:
    android.widget.ImageView iv_app_icon -> a
    android.widget.TextView tv_app_name -> b
    android.widget.TextView tv_notification_content -> c
    android.widget.TextView tv_notification_time -> d
    com.qc4w.ilocker.ui.adapter.NotificationAdapter this$0 -> e
com.qc4w.ilocker.ui.adapter.NotificationAppAdapter -> com.qc4w.ilocker.ui.a.m:
    java.util.List apps -> a
    android.view.LayoutInflater inflater -> b
    com.qc4w.ilocker.util.PackageImageLoader loader -> c
    com.qc4w.ilocker.db.NotificationAppDAO dao -> d
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    com.qc4w.ilocker.db.NotificationAppDAO access$0(com.qc4w.ilocker.ui.adapter.NotificationAppAdapter) -> a
com.qc4w.ilocker.ui.adapter.NotificationAppAdapter$1 -> com.qc4w.ilocker.ui.a.n:
    com.qc4w.ilocker.ui.adapter.NotificationAppAdapter this$0 -> a
    com.qc4w.ilocker.domain.NotificationApp val$app -> b
    void onClick(android.view.View) -> onClick
com.qc4w.ilocker.ui.adapter.NotificationAppAdapter$ViewHolder -> com.qc4w.ilocker.ui.a.o:
    android.widget.ImageView iv_app_icon -> a
    android.widget.TextView tv_app_name -> b
    com.kyleduo.switchbutton.SwitchButton sb_notification_enable -> c
    com.qc4w.ilocker.ui.adapter.NotificationAppAdapter this$0 -> d
com.qc4w.ilocker.ui.adapter.WallpaperAdapter -> com.qc4w.ilocker.ui.a.p:
    android.content.Context context -> a
    java.util.List wallpapers -> b
    android.view.LayoutInflater mInflater -> c
    com.qc4w.ilocker.db.WallpaperDAO mDao -> d
    com.qc4w.ilocker.ui.adapter.WallpaperAdapter$OnWallpaperListener listener -> e
    void setData(java.util.List) -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    com.qc4w.ilocker.db.WallpaperDAO access$0(com.qc4w.ilocker.ui.adapter.WallpaperAdapter) -> a
    com.qc4w.ilocker.ui.adapter.WallpaperAdapter$OnWallpaperListener access$1(com.qc4w.ilocker.ui.adapter.WallpaperAdapter) -> b
    android.content.Context access$2(com.qc4w.ilocker.ui.adapter.WallpaperAdapter) -> c
com.qc4w.ilocker.ui.adapter.WallpaperAdapter$1 -> com.qc4w.ilocker.ui.a.q:
    com.qc4w.ilocker.ui.adapter.WallpaperAdapter this$0 -> a
    com.qc4w.ilocker.domain.Wallpaper val$wallpaper -> b
    android.widget.ImageView val$flag -> c
    void onClick(android.view.View) -> onClick
com.qc4w.ilocker.ui.adapter.WallpaperAdapter$2 -> com.qc4w.ilocker.ui.a.r:
    com.qc4w.ilocker.ui.adapter.WallpaperAdapter this$0 -> a
    com.qc4w.ilocker.domain.Wallpaper val$wallpaper -> b
    void onClick(android.view.View) -> onClick
    com.qc4w.ilocker.ui.adapter.WallpaperAdapter access$0(com.qc4w.ilocker.ui.adapter.WallpaperAdapter$2) -> a
com.qc4w.ilocker.ui.adapter.WallpaperAdapter$2$1 -> com.qc4w.ilocker.ui.a.s:
    com.qc4w.ilocker.ui.adapter.WallpaperAdapter$2 this$1 -> a
    com.qc4w.ilocker.domain.Wallpaper val$wallpaper -> b
    void onClick(cn.pedant.SweetAlert.SweetAlertDialog) -> a
com.qc4w.ilocker.ui.adapter.WallpaperAdapter$OnWallpaperListener -> com.qc4w.ilocker.ui.a.t:
    void onWallpaperDelete() -> a
    void onWallpaperChanged() -> b
com.qc4w.ilocker.ui.anim.FlowerHolder -> com.qc4w.ilocker.ui.b.a:
    float x -> a
    float y -> b
    android.graphics.drawable.ShapeDrawable shape -> c
    float alpha -> d
    android.graphics.Paint paint -> e
    void setPaint(android.graphics.Paint) -> a
    void setX(float) -> a
    float getX() -> a
    void setY(float) -> b
    float getY() -> b
    android.graphics.drawable.ShapeDrawable getShape() -> c
com.qc4w.ilocker.ui.fragment.AboutFragment -> com.qc4w.ilocker.ui.c.a:
    java.lang.String TAG -> a
    android.view.View mRootLayout -> b
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onClick(android.view.View) -> onClick
com.qc4w.ilocker.ui.fragment.CPatternConfirmPasswordFragment -> com.qc4w.ilocker.ui.c.b:
    android.view.View mRootLayout -> a
    com.qc4w.ilocker.config.ConfigManager mConfig -> b
    com.qc4w.ilocker.db.WallpaperDAO mDao -> c
    com.qc4w.ilocker.ui.view.LockCPicturePatternView mPasswordView -> d
    android.widget.TextView mTVDrawPattern -> e
    java.lang.Runnable mClearPatternRunnable -> f
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onPatternStart() -> onPatternStart
    void onPatternCleared() -> onPatternCleared
    void onPatternCellAdded(java.util.List) -> onPatternCellAdded
    void onPatternDetected(java.util.List) -> onPatternDetected
    com.qc4w.ilocker.ui.view.LockCPicturePatternView access$0(com.qc4w.ilocker.ui.fragment.CPatternConfirmPasswordFragment) -> a
    android.widget.TextView access$1(com.qc4w.ilocker.ui.fragment.CPatternConfirmPasswordFragment) -> b
com.qc4w.ilocker.ui.fragment.CPatternConfirmPasswordFragment$1 -> com.qc4w.ilocker.ui.c.c:
    com.qc4w.ilocker.ui.fragment.CPatternConfirmPasswordFragment this$0 -> a
    void run() -> run
com.qc4w.ilocker.ui.fragment.CPatternCreatePasswordFragment -> com.qc4w.ilocker.ui.c.d:
    android.view.View mRootLayout -> a
    com.qc4w.ilocker.config.ConfigManager mConfig -> b
    com.qc4w.ilocker.db.WallpaperDAO mDao -> c
    com.qc4w.ilocker.ui.view.LockCPicturePatternView mPasswordView -> d
    java.lang.String password -> e
    android.widget.TextView mTVDrawPattern -> f
    android.widget.TextView mBtnCancel -> g
    android.widget.TextView mBtnDone -> h
    java.lang.Runnable mClearPatternRunnable -> i
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onClick(android.view.View) -> onClick
    void onPatternStart() -> onPatternStart
    void onPatternCleared() -> onPatternCleared
    void onPatternCellAdded(java.util.List) -> onPatternCellAdded
    void onPatternDetected(java.util.List) -> onPatternDetected
    com.qc4w.ilocker.ui.view.LockCPicturePatternView access$0(com.qc4w.ilocker.ui.fragment.CPatternCreatePasswordFragment) -> a
com.qc4w.ilocker.ui.fragment.CPatternCreatePasswordFragment$1 -> com.qc4w.ilocker.ui.c.e:
    com.qc4w.ilocker.ui.fragment.CPatternCreatePasswordFragment this$0 -> a
    void run() -> run
com.qc4w.ilocker.ui.fragment.CPatternLockerModeSettingsFragment -> com.qc4w.ilocker.ui.c.f:
    java.lang.String TAG -> a
    android.view.View mRootLayout -> b
    com.qc4w.ilocker.config.ConfigManager mConfig -> c
    android.widget.ImageView mIVNormal -> d
    android.widget.ImageView mIVTouched -> e
    com.fourmob.colorpicker.PickerDialog mPickerDialog -> f
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onClick(android.view.View) -> onClick
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    com.qc4w.ilocker.config.ConfigManager access$0(com.qc4w.ilocker.ui.fragment.CPatternLockerModeSettingsFragment) -> a
    android.widget.ImageView access$1(com.qc4w.ilocker.ui.fragment.CPatternLockerModeSettingsFragment) -> b
    android.widget.ImageView access$2(com.qc4w.ilocker.ui.fragment.CPatternLockerModeSettingsFragment) -> c
com.qc4w.ilocker.ui.fragment.CPatternLockerModeSettingsFragment$1 -> com.qc4w.ilocker.ui.c.g:
    com.qc4w.ilocker.ui.fragment.CPatternLockerModeSettingsFragment this$0 -> a
    void onContourSelected(int) -> b
com.qc4w.ilocker.ui.fragment.CPatternLockerModeSettingsFragment$2 -> com.qc4w.ilocker.ui.c.h:
    com.qc4w.ilocker.ui.fragment.CPatternLockerModeSettingsFragment this$0 -> a
    void onContourSelected(int) -> b
com.qc4w.ilocker.ui.fragment.DPictureConfirmPasswordFragment -> com.qc4w.ilocker.ui.c.i:
    android.view.View mRootLayout -> a
    com.qc4w.ilocker.config.ConfigManager mConfig -> b
    com.qc4w.ilocker.db.WallpaperDAO mDao -> c
    com.qc4w.ilocker.ui.view.DPicturePasswordView mPasswordView -> d
    com.qc4w.ilocker.ui.view.EnterDigitalIndicator indicator -> e
    java.lang.String password -> f
    java.lang.Runnable r -> g
    android.os.Handler mHandler -> h
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onClick(android.view.View) -> onClick
    java.lang.String access$0(com.qc4w.ilocker.ui.fragment.DPictureConfirmPasswordFragment) -> a
    void access$1(com.qc4w.ilocker.ui.fragment.DPictureConfirmPasswordFragment,java.lang.String) -> a
    com.qc4w.ilocker.config.ConfigManager access$2(com.qc4w.ilocker.ui.fragment.DPictureConfirmPasswordFragment) -> b
    com.qc4w.ilocker.ui.view.EnterDigitalIndicator access$3(com.qc4w.ilocker.ui.fragment.DPictureConfirmPasswordFragment) -> c
com.qc4w.ilocker.ui.fragment.DPictureConfirmPasswordFragment$1 -> com.qc4w.ilocker.ui.c.j:
    com.qc4w.ilocker.ui.fragment.DPictureConfirmPasswordFragment this$0 -> a
    void run() -> run
com.qc4w.ilocker.ui.fragment.DPictureCreatePasswordFragment -> com.qc4w.ilocker.ui.c.k:
    android.view.View mRootLayout -> a
    com.qc4w.ilocker.config.ConfigManager mConfig -> b
    com.qc4w.ilocker.db.WallpaperDAO mDao -> c
    com.qc4w.ilocker.ui.view.DPicturePasswordView mPasswordView -> d
    com.qc4w.ilocker.ui.view.EnterDigitalIndicator indicator -> e
    java.lang.String password -> f
    java.lang.String password1 -> g
    android.widget.TextView mTVEnterDigital -> h
    android.widget.TextView mBtnCancel -> i
    android.widget.TextView mBtnDone -> j
    java.lang.Runnable r -> k
    android.os.Handler mHandler -> l
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onClick(android.view.View) -> onClick
    java.lang.String access$0(com.qc4w.ilocker.ui.fragment.DPictureCreatePasswordFragment) -> a
    void access$1(com.qc4w.ilocker.ui.fragment.DPictureCreatePasswordFragment,java.lang.String) -> a
    java.lang.String access$2(com.qc4w.ilocker.ui.fragment.DPictureCreatePasswordFragment) -> b
    void access$3(com.qc4w.ilocker.ui.fragment.DPictureCreatePasswordFragment,java.lang.String) -> b
    com.qc4w.ilocker.ui.view.EnterDigitalIndicator access$4(com.qc4w.ilocker.ui.fragment.DPictureCreatePasswordFragment) -> c
    android.widget.TextView access$5(com.qc4w.ilocker.ui.fragment.DPictureCreatePasswordFragment) -> d
    android.widget.TextView access$6(com.qc4w.ilocker.ui.fragment.DPictureCreatePasswordFragment) -> e
com.qc4w.ilocker.ui.fragment.DPictureCreatePasswordFragment$1 -> com.qc4w.ilocker.ui.c.l:
    com.qc4w.ilocker.ui.fragment.DPictureCreatePasswordFragment this$0 -> a
    void run() -> run
com.qc4w.ilocker.ui.fragment.DPictureLockerModeSettingsFragment -> com.qc4w.ilocker.ui.c.m:
    java.lang.String TAG -> a
    android.view.View mRootLayout -> b
    com.qc4w.ilocker.config.ConfigManager mConfig -> c
    com.qc4w.ilocker.db.WallpaperDAO mDao -> d
    com.fourmob.colorpicker.PickerDialog mContourDialog -> e
    com.fourmob.colorpicker.PickerDialog mColorDialog -> f
    com.qc4w.ilocker.ui.view.DPicturePasswordView mPasswordView -> g
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onClick(android.view.View) -> onClick
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onContourSelected(int) -> b
    void onColorSelected(int) -> a
com.qc4w.ilocker.ui.fragment.DigitalConfirmPasswordFragment -> com.qc4w.ilocker.ui.c.n:
    android.view.View mRootLayout -> a
    com.qc4w.ilocker.config.ConfigManager mConfig -> b
    com.qc4w.ilocker.db.WallpaperDAO mDao -> c
    com.qc4w.ilocker.ui.view.DigitalPasswordView mPasswordView -> d
    com.qc4w.ilocker.ui.view.EnterDigitalIndicator indicator -> e
    java.lang.String password -> f
    java.lang.Runnable r -> g
    android.os.Handler mHandler -> h
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onClick(android.view.View) -> onClick
    java.lang.String access$0(com.qc4w.ilocker.ui.fragment.DigitalConfirmPasswordFragment) -> a
    void access$1(com.qc4w.ilocker.ui.fragment.DigitalConfirmPasswordFragment,java.lang.String) -> a
    com.qc4w.ilocker.config.ConfigManager access$2(com.qc4w.ilocker.ui.fragment.DigitalConfirmPasswordFragment) -> b
    com.qc4w.ilocker.ui.view.EnterDigitalIndicator access$3(com.qc4w.ilocker.ui.fragment.DigitalConfirmPasswordFragment) -> c
com.qc4w.ilocker.ui.fragment.DigitalConfirmPasswordFragment$1 -> com.qc4w.ilocker.ui.c.o:
    com.qc4w.ilocker.ui.fragment.DigitalConfirmPasswordFragment this$0 -> a
    void run() -> run
com.qc4w.ilocker.ui.fragment.DigitalCreatePasswordFragment -> com.qc4w.ilocker.ui.c.p:
    android.view.View mRootLayout -> a
    com.qc4w.ilocker.config.ConfigManager mConfig -> b
    com.qc4w.ilocker.db.WallpaperDAO mDao -> c
    com.qc4w.ilocker.ui.view.DigitalPasswordView mPasswordView -> d
    com.qc4w.ilocker.ui.view.EnterDigitalIndicator indicator -> e
    java.lang.String password -> f
    java.lang.String password1 -> g
    android.widget.TextView mTVEnterDigital -> h
    android.widget.TextView mBtnCancel -> i
    android.widget.TextView mBtnDone -> j
    java.lang.Runnable r -> k
    android.os.Handler mHandler -> l
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onClick(android.view.View) -> onClick
    java.lang.String access$0(com.qc4w.ilocker.ui.fragment.DigitalCreatePasswordFragment) -> a
    void access$1(com.qc4w.ilocker.ui.fragment.DigitalCreatePasswordFragment,java.lang.String) -> a
    java.lang.String access$2(com.qc4w.ilocker.ui.fragment.DigitalCreatePasswordFragment) -> b
    void access$3(com.qc4w.ilocker.ui.fragment.DigitalCreatePasswordFragment,java.lang.String) -> b
    com.qc4w.ilocker.ui.view.EnterDigitalIndicator access$4(com.qc4w.ilocker.ui.fragment.DigitalCreatePasswordFragment) -> c
    android.widget.TextView access$5(com.qc4w.ilocker.ui.fragment.DigitalCreatePasswordFragment) -> d
    android.widget.TextView access$6(com.qc4w.ilocker.ui.fragment.DigitalCreatePasswordFragment) -> e
com.qc4w.ilocker.ui.fragment.DigitalCreatePasswordFragment$1 -> com.qc4w.ilocker.ui.c.q:
    com.qc4w.ilocker.ui.fragment.DigitalCreatePasswordFragment this$0 -> a
    void run() -> run
com.qc4w.ilocker.ui.fragment.DigitalLockerModeSettingsFragment -> com.qc4w.ilocker.ui.c.r:
    java.lang.String TAG -> a
    android.view.View mRootLayout -> b
    com.qc4w.ilocker.config.ConfigManager mConfig -> c
    com.qc4w.ilocker.db.WallpaperDAO mDao -> d
    com.fourmob.colorpicker.PickerDialog mContourDialog -> e
    com.fourmob.colorpicker.PickerDialog mColorDialog -> f
    com.qc4w.ilocker.ui.view.DigitalPasswordView mPasswordView -> g
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onClick(android.view.View) -> onClick
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onContourSelected(int) -> b
    void onColorSelected(int) -> a
com.qc4w.ilocker.ui.fragment.FragmentBase -> com.qc4w.ilocker.ui.c.s:
    java.lang.String getTAG() -> c
com.qc4w.ilocker.ui.fragment.HeartLockerModeSettingsFragment -> com.qc4w.ilocker.ui.c.t:
    java.lang.String TAG -> a
    android.view.View mRootLayout -> b
    com.qc4w.ilocker.config.ConfigManager mConfig -> c
    com.qc4w.ilocker.db.WallpaperDAO mDao -> d
    com.fourmob.colorpicker.PickerDialog mContourDialog -> e
    com.fourmob.colorpicker.PickerDialog mColorDialog -> f
    com.qc4w.ilocker.ui.view.HeartPasswordView mPasswordView -> g
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onContourSelected(int) -> b
    void onColorSelected(int) -> a
    void onClick(android.view.View) -> onClick
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
com.qc4w.ilocker.ui.fragment.LPictureConfirmPasswordFragment -> com.qc4w.ilocker.ui.c.u:
    android.view.View mRootLayout -> a
    com.qc4w.ilocker.config.ConfigManager mConfig -> b
    com.qc4w.ilocker.db.WallpaperDAO mDao -> c
    com.qc4w.ilocker.ui.view.HeartPasswordView mPasswordView -> d
    com.qc4w.ilocker.ui.view.EnterDigitalIndicator indicator -> e
    java.lang.String password -> f
    java.lang.Runnable r -> g
    android.os.Handler mHandler -> h
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onClick(android.view.View) -> onClick
    java.lang.String access$0(com.qc4w.ilocker.ui.fragment.LPictureConfirmPasswordFragment) -> a
    void access$1(com.qc4w.ilocker.ui.fragment.LPictureConfirmPasswordFragment,java.lang.String) -> a
    com.qc4w.ilocker.config.ConfigManager access$2(com.qc4w.ilocker.ui.fragment.LPictureConfirmPasswordFragment) -> b
    com.qc4w.ilocker.ui.view.EnterDigitalIndicator access$3(com.qc4w.ilocker.ui.fragment.LPictureConfirmPasswordFragment) -> c
com.qc4w.ilocker.ui.fragment.LPictureConfirmPasswordFragment$1 -> com.qc4w.ilocker.ui.c.v:
    com.qc4w.ilocker.ui.fragment.LPictureConfirmPasswordFragment this$0 -> a
    void run() -> run
com.qc4w.ilocker.ui.fragment.LPictureCreatePasswordFragment -> com.qc4w.ilocker.ui.c.w:
    android.view.View mRootLayout -> a
    com.qc4w.ilocker.config.ConfigManager mConfig -> b
    com.qc4w.ilocker.db.WallpaperDAO mDao -> c
    com.qc4w.ilocker.ui.view.HeartPasswordView mPasswordView -> d
    com.qc4w.ilocker.ui.view.EnterDigitalIndicator indicator -> e
    java.lang.String password -> f
    java.lang.String password1 -> g
    android.widget.TextView mTVEnterDigital -> h
    android.widget.TextView mBtnCancel -> i
    android.widget.TextView mBtnDone -> j
    java.lang.Runnable r -> k
    android.os.Handler mHandler -> l
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onClick(android.view.View) -> onClick
    java.lang.String access$0(com.qc4w.ilocker.ui.fragment.LPictureCreatePasswordFragment) -> a
    void access$1(com.qc4w.ilocker.ui.fragment.LPictureCreatePasswordFragment,java.lang.String) -> a
    java.lang.String access$2(com.qc4w.ilocker.ui.fragment.LPictureCreatePasswordFragment) -> b
    void access$3(com.qc4w.ilocker.ui.fragment.LPictureCreatePasswordFragment,java.lang.String) -> b
    com.qc4w.ilocker.ui.view.EnterDigitalIndicator access$4(com.qc4w.ilocker.ui.fragment.LPictureCreatePasswordFragment) -> c
    android.widget.TextView access$5(com.qc4w.ilocker.ui.fragment.LPictureCreatePasswordFragment) -> d
    android.widget.TextView access$6(com.qc4w.ilocker.ui.fragment.LPictureCreatePasswordFragment) -> e
com.qc4w.ilocker.ui.fragment.LPictureCreatePasswordFragment$1 -> com.qc4w.ilocker.ui.c.x:
    com.qc4w.ilocker.ui.fragment.LPictureCreatePasswordFragment this$0 -> a
    void run() -> run
com.qc4w.ilocker.ui.fragment.LockerModeFragment -> com.qc4w.ilocker.ui.c.y:
    android.view.View mRootLayout -> a
    com.qc4w.ilocker.ui.adapter.LockerModeAdapter mAdapter -> b
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onResume() -> onResume
com.qc4w.ilocker.ui.fragment.LockerScreenFragment -> com.qc4w.ilocker.ui.c.z:
    android.view.View mRootLayout -> a
    com.qc4w.ilocker.ui.adapter.LockerScreenAdapter mAdapter -> b
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onResume() -> onResume
com.qc4w.ilocker.ui.fragment.LoversLockerScreenSettingsFragment -> com.qc4w.ilocker.ui.c.aa:
    android.view.View mRootLayout -> a
    com.qc4w.ilocker.config.ConfigManager mConfig -> b
    com.qc4w.ilocker.db.WallpaperDAO mDao -> c
    android.widget.TextView mETText -> d
    android.widget.TextView mEtImagesText -> e
    android.widget.ImageView mIVMale -> f
    android.widget.ImageView mIVFemale -> g
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onClick(android.view.View) -> onClick
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
com.qc4w.ilocker.ui.fragment.MainScreenFragment -> com.qc4w.ilocker.ui.c.ab:
    java.lang.String TAG -> a
    android.view.View mRootLayout -> b
    com.qc4w.ilocker.config.ConfigManager config -> c
    android.widget.ImageView ivTimeFlag -> d
    android.widget.ImageView ivSentenceFlag -> e
    android.widget.ImageView ivTimingFlag -> f
    android.widget.ImageView ivCountdownFlag -> g
    android.widget.ImageView ivNotificationFlag -> h
    android.widget.ImageView ivCameraFlag -> i
    android.widget.TextView tvSentenceContent -> j
    android.widget.TextView tvCountdownContent -> k
    android.widget.TextView tvTimingContent -> l
    com.qc4w.ilocker.ui.view.CountdownTextView tvCountdown -> m
    com.qc4w.ilocker.ui.view.TimingTextView tvTiming -> n
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onResume() -> onResume
    void onClick(android.view.View) -> onClick
com.qc4w.ilocker.ui.fragment.MainStageFragment -> com.qc4w.ilocker.ui.c.ac:
    java.lang.String TAG -> a
    android.view.View mRootLayout -> b
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
com.qc4w.ilocker.ui.fragment.MainStageFragment$LockerPagerAdapter -> com.qc4w.ilocker.ui.c.ad:
    java.lang.Class[] clazzes -> b
    java.lang.String[] titles -> c
    com.qc4w.ilocker.ui.fragment.MainStageFragment this$0 -> a
    java.lang.CharSequence getPageTitle(int) -> getPageTitle
    android.support.v4.app.Fragment getItem(int) -> getItem
    int getCount() -> getCount
com.qc4w.ilocker.ui.fragment.MoodLockerScreenSettingsFragment -> com.qc4w.ilocker.ui.c.ae:
    java.lang.String TAG -> a
    android.view.View mRootLayout -> b
    com.qc4w.ilocker.config.ConfigManager mConfig -> c
    com.qc4w.ilocker.db.WallpaperDAO mDao -> d
    com.fourmob.colorpicker.PickerDialog mContourDialog -> e
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onContourSelected(int) -> b
    void onClick(android.view.View) -> onClick
com.qc4w.ilocker.ui.fragment.NameLockerScreenSettingsFragment -> com.qc4w.ilocker.ui.c.af:
    java.lang.String TAG -> a
    android.view.View mRootLayout -> b
    com.qc4w.ilocker.config.ConfigManager mConfig -> c
    com.qc4w.ilocker.db.WallpaperDAO mDao -> d
    android.widget.TextView mETText -> e
    android.widget.TextView mETNameImageText -> f
    com.fourmob.colorpicker.PickerDialog mContourDialog -> g
    com.qc4w.ilocker.ui.view.NameImageView mNameImageView -> h
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onClick(android.view.View) -> onClick
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onContourSelected(int) -> b
com.qc4w.ilocker.ui.fragment.PPictureConfirmPasswordFragment -> com.qc4w.ilocker.ui.c.ag:
    android.view.View mRootLayout -> a
    com.qc4w.ilocker.config.ConfigManager mConfig -> b
    com.qc4w.ilocker.db.WallpaperDAO mDao -> c
    com.qc4w.ilocker.ui.view.LockPicturePatternView mPasswordView -> d
    android.widget.TextView mTVDrawPattern -> e
    java.lang.Runnable mClearPatternRunnable -> f
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onPatternStart() -> onPatternStart
    void onPatternCleared() -> onPatternCleared
    void onPatternCellAdded(java.util.List) -> onPatternCellAdded
    void onPatternDetected(java.util.List) -> onPatternDetected
    com.qc4w.ilocker.ui.view.LockPicturePatternView access$0(com.qc4w.ilocker.ui.fragment.PPictureConfirmPasswordFragment) -> a
    android.widget.TextView access$1(com.qc4w.ilocker.ui.fragment.PPictureConfirmPasswordFragment) -> b
com.qc4w.ilocker.ui.fragment.PPictureConfirmPasswordFragment$1 -> com.qc4w.ilocker.ui.c.ah:
    com.qc4w.ilocker.ui.fragment.PPictureConfirmPasswordFragment this$0 -> a
    void run() -> run
com.qc4w.ilocker.ui.fragment.PPictureCreatePasswordFragment -> com.qc4w.ilocker.ui.c.ai:
    android.view.View mRootLayout -> a
    com.qc4w.ilocker.config.ConfigManager mConfig -> b
    com.qc4w.ilocker.db.WallpaperDAO mDao -> c
    com.qc4w.ilocker.ui.view.LockPicturePatternView mPasswordView -> d
    java.lang.String password -> e
    android.widget.TextView mTVDrawPattern -> f
    android.widget.TextView mBtnCancel -> g
    android.widget.TextView mBtnDone -> h
    java.lang.Runnable mClearPatternRunnable -> i
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onClick(android.view.View) -> onClick
    void onPatternStart() -> onPatternStart
    void onPatternCleared() -> onPatternCleared
    void onPatternCellAdded(java.util.List) -> onPatternCellAdded
    void onPatternDetected(java.util.List) -> onPatternDetected
    com.qc4w.ilocker.ui.view.LockPicturePatternView access$0(com.qc4w.ilocker.ui.fragment.PPictureCreatePasswordFragment) -> a
com.qc4w.ilocker.ui.fragment.PPictureCreatePasswordFragment$1 -> com.qc4w.ilocker.ui.c.aj:
    com.qc4w.ilocker.ui.fragment.PPictureCreatePasswordFragment this$0 -> a
    void run() -> run
com.qc4w.ilocker.ui.fragment.PPictureLockerModeSettingsFragment -> com.qc4w.ilocker.ui.c.ak:
    java.lang.String TAG -> a
    android.view.View mRootLayout -> b
    com.qc4w.ilocker.config.ConfigManager mConfig -> c
    com.qc4w.ilocker.db.WallpaperDAO mDao -> d
    com.fourmob.colorpicker.PickerDialog mContourDialog -> e
    com.fourmob.colorpicker.PickerDialog mColorDialog -> f
    com.qc4w.ilocker.ui.view.PPicturePasswordView mPasswordView -> g
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onClick(android.view.View) -> onClick
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onContourSelected(int) -> b
    void onColorSelected(int) -> a
com.qc4w.ilocker.ui.fragment.PatternConfirmPasswordFragment -> com.qc4w.ilocker.ui.c.al:
    android.view.View mRootLayout -> a
    com.qc4w.ilocker.config.ConfigManager mConfig -> b
    com.qc4w.ilocker.db.WallpaperDAO mDao -> c
    com.qc4w.ilocker.ui.view.LockPatternView mPasswordView -> d
    android.widget.TextView mTVDrawPattern -> e
    java.lang.Runnable mClearPatternRunnable -> f
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onPatternStart() -> onPatternStart
    void onPatternCleared() -> onPatternCleared
    void onPatternCellAdded(java.util.List) -> onPatternCellAdded
    void onPatternDetected(java.util.List) -> onPatternDetected
    com.qc4w.ilocker.ui.view.LockPatternView access$0(com.qc4w.ilocker.ui.fragment.PatternConfirmPasswordFragment) -> a
    android.widget.TextView access$1(com.qc4w.ilocker.ui.fragment.PatternConfirmPasswordFragment) -> b
com.qc4w.ilocker.ui.fragment.PatternConfirmPasswordFragment$1 -> com.qc4w.ilocker.ui.c.am:
    com.qc4w.ilocker.ui.fragment.PatternConfirmPasswordFragment this$0 -> a
    void run() -> run
com.qc4w.ilocker.ui.fragment.PatternCreatePasswordFragment -> com.qc4w.ilocker.ui.c.an:
    android.view.View mRootLayout -> a
    com.qc4w.ilocker.config.ConfigManager mConfig -> b
    com.qc4w.ilocker.db.WallpaperDAO mDao -> c
    com.qc4w.ilocker.ui.view.LockPatternView mPasswordView -> d
    java.lang.String password -> e
    android.widget.TextView mTVDrawPattern -> f
    android.widget.TextView mBtnCancel -> g
    android.widget.TextView mBtnDone -> h
    java.lang.Runnable mClearPatternRunnable -> i
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onClick(android.view.View) -> onClick
    void onPatternStart() -> onPatternStart
    void onPatternCleared() -> onPatternCleared
    void onPatternCellAdded(java.util.List) -> onPatternCellAdded
    void onPatternDetected(java.util.List) -> onPatternDetected
    com.qc4w.ilocker.ui.view.LockPatternView access$0(com.qc4w.ilocker.ui.fragment.PatternCreatePasswordFragment) -> a
com.qc4w.ilocker.ui.fragment.PatternCreatePasswordFragment$1 -> com.qc4w.ilocker.ui.c.ao:
    com.qc4w.ilocker.ui.fragment.PatternCreatePasswordFragment this$0 -> a
    void run() -> run
com.qc4w.ilocker.ui.fragment.PatternLockerModeSettingsFragment -> com.qc4w.ilocker.ui.c.ap:
    java.lang.String TAG -> a
    android.view.View mRootLayout -> b
    com.qc4w.ilocker.config.ConfigManager mConfig -> c
    com.qc4w.ilocker.db.WallpaperDAO mDao -> d
    com.fourmob.colorpicker.PickerDialog mColorDialog -> e
    com.qc4w.ilocker.ui.view.LockPatternView mPatternView -> f
    java.lang.Runnable mClearPatternRunnable -> g
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onColorSelected(int) -> a
    void onClick(android.view.View) -> onClick
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onPatternStart() -> onPatternStart
    void onPatternCleared() -> onPatternCleared
    void onPatternCellAdded(java.util.List) -> onPatternCellAdded
    void onPatternDetected(java.util.List) -> onPatternDetected
    com.qc4w.ilocker.ui.view.LockPatternView access$0(com.qc4w.ilocker.ui.fragment.PatternLockerModeSettingsFragment) -> a
com.qc4w.ilocker.ui.fragment.PatternLockerModeSettingsFragment$1 -> com.qc4w.ilocker.ui.c.aq:
    com.qc4w.ilocker.ui.fragment.PatternLockerModeSettingsFragment this$0 -> a
    void run() -> run
com.qc4w.ilocker.ui.fragment.RingConfirmPasswordFragment -> com.qc4w.ilocker.ui.c.ar:
    android.view.View mRootLayout -> a
    com.qc4w.ilocker.config.ConfigManager mConfig -> b
    com.qc4w.ilocker.db.WallpaperDAO mDao -> c
    com.qc4w.ilocker.ui.view.RingPasswordView mPasswordView -> d
    com.qc4w.ilocker.ui.view.EnterDigitalIndicator indicator -> e
    java.lang.String password -> f
    java.lang.Runnable r -> g
    android.os.Handler mHandler -> h
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onClick(android.view.View) -> onClick
    java.lang.String access$0(com.qc4w.ilocker.ui.fragment.RingConfirmPasswordFragment) -> a
    void access$1(com.qc4w.ilocker.ui.fragment.RingConfirmPasswordFragment,java.lang.String) -> a
    com.qc4w.ilocker.config.ConfigManager access$2(com.qc4w.ilocker.ui.fragment.RingConfirmPasswordFragment) -> b
    com.qc4w.ilocker.ui.view.EnterDigitalIndicator access$3(com.qc4w.ilocker.ui.fragment.RingConfirmPasswordFragment) -> c
com.qc4w.ilocker.ui.fragment.RingConfirmPasswordFragment$1 -> com.qc4w.ilocker.ui.c.as:
    com.qc4w.ilocker.ui.fragment.RingConfirmPasswordFragment this$0 -> a
    void run() -> run
com.qc4w.ilocker.ui.fragment.RingCreatePasswordFragement -> com.qc4w.ilocker.ui.c.at:
    android.view.View mRootLayout -> a
    com.qc4w.ilocker.config.ConfigManager mConfig -> b
    com.qc4w.ilocker.db.WallpaperDAO mDao -> c
    com.qc4w.ilocker.ui.view.RingPasswordView mPasswordView -> d
    com.qc4w.ilocker.ui.view.EnterDigitalIndicator indicator -> e
    java.lang.String password -> f
    java.lang.String password1 -> g
    android.widget.TextView mTVEnterDigital -> h
    android.widget.TextView mBtnCancel -> i
    android.widget.TextView mBtnDone -> j
    java.lang.Runnable r -> k
    android.os.Handler mHandler -> l
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onClick(android.view.View) -> onClick
    java.lang.String access$0(com.qc4w.ilocker.ui.fragment.RingCreatePasswordFragement) -> a
    void access$1(com.qc4w.ilocker.ui.fragment.RingCreatePasswordFragement,java.lang.String) -> a
    java.lang.String access$2(com.qc4w.ilocker.ui.fragment.RingCreatePasswordFragement) -> b
    void access$3(com.qc4w.ilocker.ui.fragment.RingCreatePasswordFragement,java.lang.String) -> b
    com.qc4w.ilocker.ui.view.EnterDigitalIndicator access$4(com.qc4w.ilocker.ui.fragment.RingCreatePasswordFragement) -> c
    android.widget.TextView access$5(com.qc4w.ilocker.ui.fragment.RingCreatePasswordFragement) -> d
    android.widget.TextView access$6(com.qc4w.ilocker.ui.fragment.RingCreatePasswordFragement) -> e
com.qc4w.ilocker.ui.fragment.RingCreatePasswordFragement$1 -> com.qc4w.ilocker.ui.c.au:
    com.qc4w.ilocker.ui.fragment.RingCreatePasswordFragement this$0 -> a
    void run() -> run
com.qc4w.ilocker.ui.fragment.RingLockerModeSettingsFragment -> com.qc4w.ilocker.ui.c.av:
    java.lang.String TAG -> a
    android.view.View mRootLayout -> b
    com.qc4w.ilocker.config.ConfigManager mConfig -> c
    com.qc4w.ilocker.db.WallpaperDAO mDao -> d
    com.fourmob.colorpicker.PickerDialog mContourDialog -> e
    com.fourmob.colorpicker.PickerDialog mColorDialog -> f
    com.qc4w.ilocker.ui.view.RingPasswordView mPasswordView -> g
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onContourSelected(int) -> b
    void onColorSelected(int) -> a
    void onClick(android.view.View) -> onClick
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
com.qc4w.ilocker.ui.fragment.SettingsFragment -> com.qc4w.ilocker.ui.c.aw:
    java.lang.String TAG -> a
    android.view.View mRootLayout -> b
    com.qc4w.ilocker.config.ConfigManager mConfig -> c
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onClick(android.view.View) -> onClick
    com.qc4w.ilocker.config.ConfigManager access$0(com.qc4w.ilocker.ui.fragment.SettingsFragment) -> a
com.qc4w.ilocker.ui.fragment.SettingsFragment$1 -> com.qc4w.ilocker.ui.c.ax:
    com.qc4w.ilocker.ui.fragment.SettingsFragment this$0 -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.qc4w.ilocker.ui.fragment.SimpleLockerScreenSettingsFragment -> com.qc4w.ilocker.ui.c.ay:
    java.lang.String TAG -> a
    android.view.View mRootLayout -> b
    com.qc4w.ilocker.config.ConfigManager mConfig -> c
    android.widget.TextView mETText -> d
    com.qc4w.ilocker.db.WallpaperDAO mDao -> e
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onClick(android.view.View) -> onClick
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
com.qc4w.ilocker.ui.fragment.WallpaperFragment -> com.qc4w.ilocker.ui.c.az:
    java.lang.String TAG -> a
    com.qc4w.ilocker.db.WallpaperDAO mDao -> b
    java.util.List wallpapers -> c
    com.qc4w.ilocker.ui.adapter.WallpaperAdapter mAdapter -> d
    com.qc4w.ilocker.config.ConfigManager config -> e
    java.lang.String path -> f
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onCreate(android.os.Bundle) -> onCreate
    void onWallpaperDelete() -> a
    void onWallpaperChanged() -> b
    void onClick(android.view.View) -> onClick
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
com.qc4w.ilocker.ui.fragment.WidgetCameraSettingsFragment -> com.qc4w.ilocker.ui.c.ba:
    java.lang.String TAG -> a
    android.view.View mRootLayout -> b
    com.qc4w.ilocker.config.ConfigManager config -> c
    com.qc4w.ilocker.db.WallpaperDAO mDao -> d
    android.widget.ImageView ivCamera -> e
    com.fourmob.colorpicker.PickerDialog mColorDialog -> f
    android.graphics.Bitmap contour -> g
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroy() -> onDestroy
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onColorSelected(int) -> a
    void onClick(android.view.View) -> onClick
com.qc4w.ilocker.ui.fragment.WidgetCountdownSettingsFragment -> com.qc4w.ilocker.ui.c.bb:
    java.lang.String TAG -> a
    android.view.View mRootLayout -> b
    com.qc4w.ilocker.config.ConfigManager config -> c
    com.qc4w.ilocker.db.WallpaperDAO mDao -> d
    android.widget.TextView tvCountdownContent -> e
    com.qc4w.ilocker.ui.view.CountdownTextView tvCountdown -> f
    com.fourmob.datetimepicker.date.DatePickerDialog dpd -> g
    com.sleepbot.datetimepicker.time.TimePickerDialog tpd -> h
    java.util.Calendar calendar -> i
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onClick(android.view.View) -> onClick
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onTimeSet$75c6f288(int,int) -> a
    void onDateSet$4bb52701(int,int,int) -> a
com.qc4w.ilocker.ui.fragment.WidgetNotificationSettingsFragment -> com.qc4w.ilocker.ui.c.bc:
    android.view.View mRootLayout -> a
    android.view.View mLoadingLayout -> b
    android.widget.ListView mLVNotificationApps -> c
    com.qc4w.ilocker.ui.adapter.NotificationAppAdapter adapter -> d
    android.os.Handler mHandler -> e
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onClick(android.view.View) -> onClick
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onLoadCompleted(java.util.List) -> a
    void access$0(com.qc4w.ilocker.ui.fragment.WidgetNotificationSettingsFragment,com.qc4w.ilocker.ui.adapter.NotificationAppAdapter) -> a
    android.widget.ListView access$1(com.qc4w.ilocker.ui.fragment.WidgetNotificationSettingsFragment) -> a
    com.qc4w.ilocker.ui.adapter.NotificationAppAdapter access$2(com.qc4w.ilocker.ui.fragment.WidgetNotificationSettingsFragment) -> b
    android.view.View access$3(com.qc4w.ilocker.ui.fragment.WidgetNotificationSettingsFragment) -> c
com.qc4w.ilocker.ui.fragment.WidgetNotificationSettingsFragment$1 -> com.qc4w.ilocker.ui.c.bd:
    com.qc4w.ilocker.ui.fragment.WidgetNotificationSettingsFragment this$0 -> a
    boolean handleMessage(android.os.Message) -> handleMessage
com.qc4w.ilocker.ui.fragment.WidgetNotificationSettingsFragment$2 -> com.qc4w.ilocker.ui.c.be:
    com.qc4w.ilocker.ui.fragment.WidgetNotificationSettingsFragment this$0 -> a
    void onClick(cn.pedant.SweetAlert.SweetAlertDialog) -> a
com.qc4w.ilocker.ui.fragment.WidgetNotificationSettingsFragment$3 -> com.qc4w.ilocker.ui.c.bf:
    com.qc4w.ilocker.ui.fragment.WidgetNotificationSettingsFragment this$0 -> a
    void onClick(cn.pedant.SweetAlert.SweetAlertDialog) -> a
com.qc4w.ilocker.ui.fragment.WidgetSentenceSettingsFragment -> com.qc4w.ilocker.ui.c.bg:
    android.view.View mRootLayout -> a
    com.qc4w.ilocker.config.ConfigManager config -> b
    com.qc4w.ilocker.db.WallpaperDAO mDao -> c
    android.widget.TextView tvSentence -> d
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onClick(android.view.View) -> onClick
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
com.qc4w.ilocker.ui.fragment.WidgetTimeSettingsFragment -> com.qc4w.ilocker.ui.c.bh:
    java.lang.String TAG -> a
    android.view.View mRootLayout -> b
    com.qc4w.ilocker.config.ConfigManager config -> c
    com.qc4w.ilocker.db.WallpaperDAO mDao -> d
    android.widget.TextView tvDate -> e
    android.widget.TextView tvWeek -> f
    android.widget.TextView tvClock -> g
    com.fourmob.colorpicker.PickerDialog mColorDialog -> h
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onColorSelected(int) -> a
    void onClick(android.view.View) -> onClick
com.qc4w.ilocker.ui.fragment.WidgetTimingSettingsFragment -> com.qc4w.ilocker.ui.c.bi:
    java.lang.String TAG -> a
    android.view.View mRootLayout -> b
    com.qc4w.ilocker.config.ConfigManager config -> c
    com.qc4w.ilocker.db.WallpaperDAO mDao -> d
    android.widget.TextView tvTimingContent -> e
    com.qc4w.ilocker.ui.view.TimingTextView tvTiming -> f
    com.fourmob.datetimepicker.date.DatePickerDialog dpd -> g
    com.sleepbot.datetimepicker.time.TimePickerDialog tpd -> h
    java.util.Calendar calendar -> i
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onTimeSet$75c6f288(int,int) -> a
    void onDateSet$4bb52701(int,int,int) -> a
    void onClick(android.view.View) -> onClick
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
com.qc4w.ilocker.ui.lock.AbsLockerMode -> com.qc4w.ilocker.ui.d.a:
    android.view.LayoutInflater mInflater -> a
    android.content.Context mContext -> b
    android.view.LayoutInflater getInflater() -> a
    android.content.Context getContext() -> b
    void launchCamera() -> c
    void reset() -> d
    void initViews() -> e
    android.view.View getView() -> f
    void clearPassword() -> g
    void launchNotification(android.app.Notification) -> a
com.qc4w.ilocker.ui.lock.AbsLockerScreen -> com.qc4w.ilocker.ui.d.b:
    android.view.LayoutInflater mInflater -> a
    android.content.Context mContext -> b
    com.qc4w.ilocker.ui.lock.LockerView lockerView -> c
    android.view.LayoutInflater getInflater() -> a
    android.content.Context getContext() -> b
    com.qc4w.ilocker.ui.lock.LockerView getLockerView() -> c
    void initViews() -> d
    android.view.View getView() -> e
    com.qc4w.ilocker.ui.adapter.NotificationAdapter getNotificationAdapter() -> f
    void onNotificationAdd$75ff552b() -> g
    void onNotificationRemove$75ff552b() -> h
com.qc4w.ilocker.ui.lock.LockerManager -> com.qc4w.ilocker.ui.d.c:
    int WINDOW_FLAG -> a
    com.qc4w.ilocker.ui.lock.LockerManager instance -> b
    android.view.WindowManager$LayoutParams mParams -> c
    android.content.Context mContext -> d
    android.view.WindowManager mWM -> e
    boolean mIsAdded -> f
    android.view.View mLockerView -> g
    com.qc4w.ilocker.ui.lock.LockerView lockerView -> h
    com.qc4w.ilocker.ui.lock.LockerManager getInstance(android.content.Context) -> a
    void lock() -> a
    void onUnlock() -> b
    void unlock() -> c
    void onConfigChanged() -> d
com.qc4w.ilocker.ui.lock.LockerModeCPattern -> com.qc4w.ilocker.ui.d.d:
    android.view.View mRootView -> a
    com.qc4w.ilocker.config.ConfigManager config -> b
    com.qc4w.ilocker.ui.view.LockCPicturePatternView mPatternView -> c
    android.widget.TextView mTVDrawPattern -> d
    boolean isLaunchCamera -> e
    android.app.Notification notification -> f
    java.lang.Runnable mClearPatternRunnable -> g
    void initViews() -> e
    android.view.View getView() -> f
    void clearPassword() -> g
    void launchNotification(android.app.Notification) -> a
    void onPatternStart() -> onPatternStart
    void onPatternCleared() -> onPatternCleared
    void onPatternDetected(java.util.List) -> onPatternDetected
    void onPatternCellAdded(java.util.List) -> onPatternCellAdded
    void launchCamera() -> c
    void reset() -> d
    com.qc4w.ilocker.ui.view.LockCPicturePatternView access$0(com.qc4w.ilocker.ui.lock.LockerModeCPattern) -> a
    android.widget.TextView access$1(com.qc4w.ilocker.ui.lock.LockerModeCPattern) -> b
com.qc4w.ilocker.ui.lock.LockerModeCPattern$1 -> com.qc4w.ilocker.ui.d.e:
    com.qc4w.ilocker.ui.lock.LockerModeCPattern this$0 -> a
    void run() -> run
com.qc4w.ilocker.ui.lock.LockerModeDPicture -> com.qc4w.ilocker.ui.d.f:
    android.view.View mRootView -> a
    java.lang.String password -> b
    com.qc4w.ilocker.ui.view.EnterDigitalIndicator indicator -> c
    com.qc4w.ilocker.config.ConfigManager config -> d
    boolean isLaunchCamera -> e
    android.app.Notification notification -> f
    java.lang.Runnable r -> g
    android.os.Handler mHandler -> h
    void initViews() -> e
    android.view.View getView() -> f
    void onClick(android.view.View) -> onClick
    void clearPassword() -> g
    void launchNotification(android.app.Notification) -> a
    void launchCamera() -> c
    void reset() -> d
    java.lang.String access$0(com.qc4w.ilocker.ui.lock.LockerModeDPicture) -> a
    void access$1(com.qc4w.ilocker.ui.lock.LockerModeDPicture,java.lang.String) -> a
    com.qc4w.ilocker.config.ConfigManager access$2(com.qc4w.ilocker.ui.lock.LockerModeDPicture) -> b
    boolean access$3(com.qc4w.ilocker.ui.lock.LockerModeDPicture) -> c
    android.app.Notification access$4(com.qc4w.ilocker.ui.lock.LockerModeDPicture) -> d
    com.qc4w.ilocker.ui.view.EnterDigitalIndicator access$5(com.qc4w.ilocker.ui.lock.LockerModeDPicture) -> e
com.qc4w.ilocker.ui.lock.LockerModeDPicture$1 -> com.qc4w.ilocker.ui.d.g:
    com.qc4w.ilocker.ui.lock.LockerModeDPicture this$0 -> a
    void run() -> run
com.qc4w.ilocker.ui.lock.LockerModeDigital -> com.qc4w.ilocker.ui.d.h:
    android.view.View mRootView -> a
    java.lang.String password -> b
    com.qc4w.ilocker.ui.view.EnterDigitalIndicator indicator -> c
    com.qc4w.ilocker.config.ConfigManager config -> d
    boolean isLaunchCamera -> e
    android.app.Notification notification -> f
    java.lang.Runnable r -> g
    android.os.Handler mHandler -> h
    void initViews() -> e
    android.view.View getView() -> f
    void onClick(android.view.View) -> onClick
    void clearPassword() -> g
    void launchNotification(android.app.Notification) -> a
    void launchCamera() -> c
    void reset() -> d
    java.lang.String access$0(com.qc4w.ilocker.ui.lock.LockerModeDigital) -> a
    void access$1(com.qc4w.ilocker.ui.lock.LockerModeDigital,java.lang.String) -> a
    com.qc4w.ilocker.config.ConfigManager access$2(com.qc4w.ilocker.ui.lock.LockerModeDigital) -> b
    boolean access$3(com.qc4w.ilocker.ui.lock.LockerModeDigital) -> c
    android.app.Notification access$4(com.qc4w.ilocker.ui.lock.LockerModeDigital) -> d
    com.qc4w.ilocker.ui.view.EnterDigitalIndicator access$5(com.qc4w.ilocker.ui.lock.LockerModeDigital) -> e
com.qc4w.ilocker.ui.lock.LockerModeDigital$1 -> com.qc4w.ilocker.ui.d.i:
    com.qc4w.ilocker.ui.lock.LockerModeDigital this$0 -> a
    void run() -> run
com.qc4w.ilocker.ui.lock.LockerModeLPicture -> com.qc4w.ilocker.ui.d.j:
    android.view.View mRootView -> a
    java.lang.String password -> b
    com.qc4w.ilocker.ui.view.EnterDigitalIndicator indicator -> c
    com.qc4w.ilocker.config.ConfigManager config -> d
    boolean isLaunchCamera -> e
    android.app.Notification notification -> f
    java.lang.Runnable r -> g
    android.os.Handler mHandler -> h
    void initViews() -> e
    android.view.View getView() -> f
    void onClick(android.view.View) -> onClick
    void clearPassword() -> g
    void launchNotification(android.app.Notification) -> a
    void launchCamera() -> c
    void reset() -> d
    java.lang.String access$0(com.qc4w.ilocker.ui.lock.LockerModeLPicture) -> a
    void access$1(com.qc4w.ilocker.ui.lock.LockerModeLPicture,java.lang.String) -> a
    com.qc4w.ilocker.config.ConfigManager access$2(com.qc4w.ilocker.ui.lock.LockerModeLPicture) -> b
    boolean access$3(com.qc4w.ilocker.ui.lock.LockerModeLPicture) -> c
    android.app.Notification access$4(com.qc4w.ilocker.ui.lock.LockerModeLPicture) -> d
    com.qc4w.ilocker.ui.view.EnterDigitalIndicator access$5(com.qc4w.ilocker.ui.lock.LockerModeLPicture) -> e
com.qc4w.ilocker.ui.lock.LockerModeLPicture$1 -> com.qc4w.ilocker.ui.d.k:
    com.qc4w.ilocker.ui.lock.LockerModeLPicture this$0 -> a
    void run() -> run
com.qc4w.ilocker.ui.lock.LockerModeNone -> com.qc4w.ilocker.ui.d.l:
    android.view.View mRootView -> a
    void initViews() -> e
    android.view.View getView() -> f
    void clearPassword() -> g
    void launchCamera() -> c
    void reset() -> d
    void launchNotification(android.app.Notification) -> a
com.qc4w.ilocker.ui.lock.LockerModePPattern -> com.qc4w.ilocker.ui.d.m:
    android.view.View mRootView -> a
    com.qc4w.ilocker.config.ConfigManager config -> b
    com.qc4w.ilocker.ui.view.LockPicturePatternView mPatternView -> c
    android.widget.TextView mTVDrawPattern -> d
    boolean isLaunchCamera -> e
    android.app.Notification notification -> f
    java.lang.Runnable mClearPatternRunnable -> g
    void initViews() -> e
    android.view.View getView() -> f
    void clearPassword() -> g
    void onPatternStart() -> onPatternStart
    void onPatternCleared() -> onPatternCleared
    void onPatternDetected(java.util.List) -> onPatternDetected
    void onPatternCellAdded(java.util.List) -> onPatternCellAdded
    void launchNotification(android.app.Notification) -> a
    void launchCamera() -> c
    void reset() -> d
    com.qc4w.ilocker.ui.view.LockPicturePatternView access$0(com.qc4w.ilocker.ui.lock.LockerModePPattern) -> a
    android.widget.TextView access$1(com.qc4w.ilocker.ui.lock.LockerModePPattern) -> b
com.qc4w.ilocker.ui.lock.LockerModePPattern$1 -> com.qc4w.ilocker.ui.d.n:
    com.qc4w.ilocker.ui.lock.LockerModePPattern this$0 -> a
    void run() -> run
com.qc4w.ilocker.ui.lock.LockerModePattern -> com.qc4w.ilocker.ui.d.o:
    android.view.View mRootView -> a
    com.qc4w.ilocker.config.ConfigManager config -> b
    com.qc4w.ilocker.ui.view.LockPatternView mPatternView -> c
    android.widget.TextView mTVDrawPattern -> d
    boolean isLaunchCamera -> e
    android.app.Notification notification -> f
    java.lang.Runnable mClearPatternRunnable -> g
    void initViews() -> e
    android.view.View getView() -> f
    void clearPassword() -> g
    void onPatternStart() -> onPatternStart
    void onPatternCleared() -> onPatternCleared
    void onPatternDetected(java.util.List) -> onPatternDetected
    void onPatternCellAdded(java.util.List) -> onPatternCellAdded
    void launchNotification(android.app.Notification) -> a
    void launchCamera() -> c
    void reset() -> d
    com.qc4w.ilocker.ui.view.LockPatternView access$0(com.qc4w.ilocker.ui.lock.LockerModePattern) -> a
    android.widget.TextView access$1(com.qc4w.ilocker.ui.lock.LockerModePattern) -> b
com.qc4w.ilocker.ui.lock.LockerModePattern$1 -> com.qc4w.ilocker.ui.d.p:
    com.qc4w.ilocker.ui.lock.LockerModePattern this$0 -> a
    void run() -> run
com.qc4w.ilocker.ui.lock.LockerModeRing -> com.qc4w.ilocker.ui.d.q:
    android.view.View mRootView -> a
    java.lang.String password -> b
    com.qc4w.ilocker.ui.view.EnterDigitalIndicator indicator -> c
    com.qc4w.ilocker.config.ConfigManager config -> d
    boolean isLaunchCamera -> e
    com.qc4w.ilocker.ui.view.RingPasswordView rpv -> f
    android.app.Notification notification -> g
    java.lang.Runnable r -> h
    android.os.Handler mHandler -> i
    void initViews() -> e
    android.view.View getView() -> f
    void onClick(android.view.View) -> onClick
    void clearPassword() -> g
    void launchNotification(android.app.Notification) -> a
    void launchCamera() -> c
    void reset() -> d
    java.lang.String access$0(com.qc4w.ilocker.ui.lock.LockerModeRing) -> a
    void access$1(com.qc4w.ilocker.ui.lock.LockerModeRing,java.lang.String) -> a
    com.qc4w.ilocker.config.ConfigManager access$2(com.qc4w.ilocker.ui.lock.LockerModeRing) -> b
    boolean access$3(com.qc4w.ilocker.ui.lock.LockerModeRing) -> c
    android.app.Notification access$4(com.qc4w.ilocker.ui.lock.LockerModeRing) -> d
    com.qc4w.ilocker.ui.view.EnterDigitalIndicator access$5(com.qc4w.ilocker.ui.lock.LockerModeRing) -> e
com.qc4w.ilocker.ui.lock.LockerModeRing$1 -> com.qc4w.ilocker.ui.d.r:
    com.qc4w.ilocker.ui.lock.LockerModeRing this$0 -> a
    void run() -> run
com.qc4w.ilocker.ui.lock.LockerScreenLovers -> com.qc4w.ilocker.ui.d.s:
    android.view.ViewGroup mRootView -> a
    com.qc4w.ilocker.ui.adapter.NotificationAdapter adapter -> b
    android.widget.ListView mLVNotifications -> c
    void initViews() -> d
    android.view.View getView() -> e
    com.qc4w.ilocker.ui.adapter.NotificationAdapter getNotificationAdapter() -> f
com.qc4w.ilocker.ui.lock.LockerScreenLovers$1 -> com.qc4w.ilocker.ui.d.t:
    com.qc4w.ilocker.ui.lock.LockerScreenLovers this$0 -> a
    boolean canDismiss(int) -> canDismiss
    void onDismissRight(android.widget.ListView,int[]) -> onDismissRight
    void onDismissLeft(android.widget.ListView,int[]) -> onDismissLeft
com.qc4w.ilocker.ui.lock.LockerScreenName -> com.qc4w.ilocker.ui.d.u:
    android.view.ViewGroup mRootView -> a
    android.widget.ListView mLVNotifications -> b
    com.qc4w.ilocker.ui.adapter.NotificationAdapter adapter -> c
    void initViews() -> d
    android.view.View getView() -> e
    com.qc4w.ilocker.ui.adapter.NotificationAdapter getNotificationAdapter() -> f
com.qc4w.ilocker.ui.lock.LockerScreenName$1 -> com.qc4w.ilocker.ui.d.v:
    com.qc4w.ilocker.ui.lock.LockerScreenName this$0 -> a
    boolean canDismiss(int) -> canDismiss
    void onDismissRight(android.widget.ListView,int[]) -> onDismissRight
    void onDismissLeft(android.widget.ListView,int[]) -> onDismissLeft
com.qc4w.ilocker.ui.lock.LockerScreenSimple -> com.qc4w.ilocker.ui.d.w:
    android.view.View mRootView -> a
    android.widget.ListView mLVNotifications -> b
    com.qc4w.ilocker.ui.adapter.NotificationAdapter adapter -> c
    void initViews() -> d
    android.view.View getView() -> e
    com.qc4w.ilocker.ui.adapter.NotificationAdapter getNotificationAdapter() -> f
com.qc4w.ilocker.ui.lock.LockerScreenSimple$1 -> com.qc4w.ilocker.ui.d.x:
    com.qc4w.ilocker.ui.lock.LockerScreenSimple this$0 -> a
    boolean canDismiss(int) -> canDismiss
    void onDismissRight(android.widget.ListView,int[]) -> onDismissRight
    void onDismissLeft(android.widget.ListView,int[]) -> onDismissLeft
com.qc4w.ilocker.ui.lock.LockerView -> com.qc4w.ilocker.ui.d.y:
    com.qc4w.ilocker.ui.lock.LockerView$OnLockerListener mListener -> a
    android.content.Context mContext -> b
    android.view.View mRootView -> c
    com.qc4w.ilocker.config.ConfigManager mConfig -> d
    com.qc4w.ilocker.db.WallpaperDAO mDao -> e
    android.view.LayoutInflater mInflater -> f
    android.widget.ImageView bgImage -> g
    com.qc4w.ilocker.ui.view.ScrollerViewPager viewPager -> h
    com.qc4w.ilocker.ui.lock.LockerView$LockerViewAdapter lockerViewAdapter -> i
    com.qc4w.ilocker.ui.lock.AbsLockerMode lockerMode -> j
    com.qc4w.ilocker.ui.lock.AbsLockerScreen lockerScreen -> k
    void initViews() -> a
    void setListener(com.qc4w.ilocker.ui.lock.LockerView$OnLockerListener) -> a
    void onLock() -> b
    void lock() -> c
    android.view.View getLockerView() -> d
    void onClick(android.view.View) -> onClick
    void launchNotification(android.app.Notification) -> a
    com.qc4w.ilocker.ui.lock.AbsLockerMode access$0(com.qc4w.ilocker.ui.lock.LockerView) -> a
    com.qc4w.ilocker.ui.lock.AbsLockerScreen access$1(com.qc4w.ilocker.ui.lock.LockerView) -> b
    com.qc4w.ilocker.config.ConfigManager access$2(com.qc4w.ilocker.ui.lock.LockerView) -> c
com.qc4w.ilocker.ui.lock.LockerView$1 -> com.qc4w.ilocker.ui.d.z:
    com.qc4w.ilocker.ui.lock.LockerView this$0 -> a
    void onPageSelected(int) -> onPageSelected
com.qc4w.ilocker.ui.lock.LockerView$LockerViewAdapter -> com.qc4w.ilocker.ui.d.aa:
    com.qc4w.ilocker.ui.lock.LockerView this$0 -> a
    int getCount() -> getCount
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
com.qc4w.ilocker.ui.lock.LockerView$OnLockerListener -> com.qc4w.ilocker.ui.d.ab:
    void onUnlock() -> b
com.qc4w.ilocker.ui.view.Cell -> com.qc4w.ilocker.ui.view.Cell:
    int row -> row
    int column -> column
    com.qc4w.ilocker.ui.view.Cell[][] sCells -> sCells
    int getRow() -> getRow
    int getColumn() -> getColumn
    com.qc4w.ilocker.ui.view.Cell of(int,int) -> of
    void checkRange(int,int) -> checkRange
    int getNum() -> getNum
    java.lang.String toString() -> toString
com.qc4w.ilocker.ui.view.CircleColorView -> com.qc4w.ilocker.ui.view.CircleColorView:
    int color -> color
    android.graphics.Paint paint -> paint
    int width -> width
    void onMeasure(int,int) -> onMeasure
    void setColor(int) -> setColor
    void onDraw(android.graphics.Canvas) -> onDraw
com.qc4w.ilocker.ui.view.CircularProgress -> com.qc4w.ilocker.ui.view.CircularProgress:
    android.view.animation.Interpolator ANGLE_INTERPOLATOR -> ANGLE_INTERPOLATOR
    android.view.animation.Interpolator SWEEP_INTERPOLATOR -> SWEEP_INTERPOLATOR
    int ANGLE_ANIMATOR_DURATION -> ANGLE_ANIMATOR_DURATION
    int SWEEP_ANIMATOR_DURATION -> SWEEP_ANIMATOR_DURATION
    int MIN_SWEEP_ANGLE -> MIN_SWEEP_ANGLE
    int DEFAULT_BORDER_WIDTH -> DEFAULT_BORDER_WIDTH
    android.graphics.RectF fBounds -> fBounds
    com.nineoldandroids.animation.ObjectAnimator mObjectAnimatorSweep -> mObjectAnimatorSweep
    com.nineoldandroids.animation.ObjectAnimator mObjectAnimatorAngle -> mObjectAnimatorAngle
    boolean mModeAppearing -> mModeAppearing
    android.graphics.Paint mPaint -> mPaint
    float mCurrentGlobalAngleOffset -> mCurrentGlobalAngleOffset
    float mCurrentGlobalAngle -> mCurrentGlobalAngle
    float mCurrentSweepAngle -> mCurrentSweepAngle
    float mBorderWidth -> mBorderWidth
    boolean mRunning -> mRunning
    int[] mColors -> mColors
    int mCurrentColorIndex -> mCurrentColorIndex
    int mNextColorIndex -> mNextColorIndex
    com.nineoldandroids.util.Property mAngleProperty -> mAngleProperty
    com.nineoldandroids.util.Property mSweepProperty -> mSweepProperty
    void setBorderWidth(float) -> setBorderWidth
    void start() -> start
    void stop() -> stop
    boolean isRunning() -> isRunning
    void onVisibilityChanged(android.view.View,int) -> onVisibilityChanged
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void draw(android.graphics.Canvas) -> draw
    int gradient(int,int,float) -> gradient
    void toggleAppearingMode() -> toggleAppearingMode
    void setupAnimations() -> setupAnimations
    void setCurrentGlobalAngle(float) -> setCurrentGlobalAngle
    float getCurrentGlobalAngle() -> getCurrentGlobalAngle
    void setCurrentSweepAngle(float) -> setCurrentSweepAngle
    float getCurrentSweepAngle() -> getCurrentSweepAngle
    void access$0(com.qc4w.ilocker.ui.view.CircularProgress) -> access$0
com.qc4w.ilocker.ui.view.CircularProgress$1 -> com.qc4w.ilocker.ui.view.CircularProgress$1:
    com.qc4w.ilocker.ui.view.CircularProgress this$0 -> this$0
    java.lang.Float get(com.qc4w.ilocker.ui.view.CircularProgress) -> get
    void set(com.qc4w.ilocker.ui.view.CircularProgress,java.lang.Float) -> set
    java.lang.Object get(java.lang.Object) -> get
    void set(java.lang.Object,java.lang.Object) -> set
com.qc4w.ilocker.ui.view.CircularProgress$2 -> com.qc4w.ilocker.ui.view.CircularProgress$2:
    com.qc4w.ilocker.ui.view.CircularProgress this$0 -> this$0
    java.lang.Float get(com.qc4w.ilocker.ui.view.CircularProgress) -> get
    void set(com.qc4w.ilocker.ui.view.CircularProgress,java.lang.Float) -> set
    java.lang.Object get(java.lang.Object) -> get
    void set(java.lang.Object,java.lang.Object) -> set
com.qc4w.ilocker.ui.view.CircularProgress$3 -> com.qc4w.ilocker.ui.view.CircularProgress$3:
    com.qc4w.ilocker.ui.view.CircularProgress this$0 -> this$0
    void onAnimationStart(com.nineoldandroids.animation.Animator) -> onAnimationStart
    void onAnimationEnd(com.nineoldandroids.animation.Animator) -> onAnimationEnd
    void onAnimationCancel(com.nineoldandroids.animation.Animator) -> onAnimationCancel
    void onAnimationRepeat(com.nineoldandroids.animation.Animator) -> onAnimationRepeat
com.qc4w.ilocker.ui.view.CircularProgressDrawable -> com.qc4w.ilocker.ui.view.CircularProgressDrawable:
    android.view.animation.Interpolator ANGLE_INTERPOLATOR -> ANGLE_INTERPOLATOR
    android.view.animation.Interpolator SWEEP_INTERPOLATOR -> SWEEP_INTERPOLATOR
    int ANGLE_ANIMATOR_DURATION -> ANGLE_ANIMATOR_DURATION
    int SWEEP_ANIMATOR_DURATION -> SWEEP_ANIMATOR_DURATION
    int MIN_SWEEP_ANGLE -> MIN_SWEEP_ANGLE
    android.graphics.RectF fBounds -> fBounds
    com.nineoldandroids.animation.ObjectAnimator mObjectAnimatorSweep -> mObjectAnimatorSweep
    com.nineoldandroids.animation.ObjectAnimator mObjectAnimatorAngle -> mObjectAnimatorAngle
    boolean mModeAppearing -> mModeAppearing
    android.graphics.Paint mPaint -> mPaint
    float mCurrentGlobalAngleOffset -> mCurrentGlobalAngleOffset
    float mCurrentGlobalAngle -> mCurrentGlobalAngle
    float mCurrentSweepAngle -> mCurrentSweepAngle
    float mBorderWidth -> mBorderWidth
    boolean mRunning -> mRunning
    com.nineoldandroids.util.Property mAngleProperty -> mAngleProperty
    com.nineoldandroids.util.Property mSweepProperty -> mSweepProperty
    void draw(android.graphics.Canvas) -> draw
    void setAlpha(int) -> setAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    int getOpacity() -> getOpacity
    void toggleAppearingMode() -> toggleAppearingMode
    void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    void setupAnimations() -> setupAnimations
    void start() -> start
    void stop() -> stop
    boolean isRunning() -> isRunning
    void setCurrentGlobalAngle(float) -> setCurrentGlobalAngle
    float getCurrentGlobalAngle() -> getCurrentGlobalAngle
    void setCurrentSweepAngle(float) -> setCurrentSweepAngle
    float getCurrentSweepAngle() -> getCurrentSweepAngle
    void access$0(com.qc4w.ilocker.ui.view.CircularProgressDrawable) -> access$0
com.qc4w.ilocker.ui.view.CircularProgressDrawable$1 -> com.qc4w.ilocker.ui.view.CircularProgressDrawable$1:
    com.qc4w.ilocker.ui.view.CircularProgressDrawable this$0 -> this$0
    java.lang.Float get(com.qc4w.ilocker.ui.view.CircularProgressDrawable) -> get
    void set(com.qc4w.ilocker.ui.view.CircularProgressDrawable,java.lang.Float) -> set
    java.lang.Object get(java.lang.Object) -> get
    void set(java.lang.Object,java.lang.Object) -> set
com.qc4w.ilocker.ui.view.CircularProgressDrawable$2 -> com.qc4w.ilocker.ui.view.CircularProgressDrawable$2:
    com.qc4w.ilocker.ui.view.CircularProgressDrawable this$0 -> this$0
    java.lang.Float get(com.qc4w.ilocker.ui.view.CircularProgressDrawable) -> get
    void set(com.qc4w.ilocker.ui.view.CircularProgressDrawable,java.lang.Float) -> set
    java.lang.Object get(java.lang.Object) -> get
    void set(java.lang.Object,java.lang.Object) -> set
com.qc4w.ilocker.ui.view.CircularProgressDrawable$3 -> com.qc4w.ilocker.ui.view.CircularProgressDrawable$3:
    com.qc4w.ilocker.ui.view.CircularProgressDrawable this$0 -> this$0
    void onAnimationStart(com.nineoldandroids.animation.Animator) -> onAnimationStart
    void onAnimationEnd(com.nineoldandroids.animation.Animator) -> onAnimationEnd
    void onAnimationCancel(com.nineoldandroids.animation.Animator) -> onAnimationCancel
    void onAnimationRepeat(com.nineoldandroids.animation.Animator) -> onAnimationRepeat
com.qc4w.ilocker.ui.view.ClipRevealFrame -> com.qc4w.ilocker.ui.view.ClipRevealFrame:
    android.graphics.Path mRevealPath -> mRevealPath
    boolean mClipOutlines -> mClipOutlines
    float mCenterX -> mCenterX
    float mCenterY -> mCenterY
    float mRadius -> mRadius
    void init() -> init
    void setClipOutLines(boolean) -> setClipOutLines
    void setClipCenter(int,int) -> setClipCenter
    void setClipRadius(float) -> setClipRadius
    void draw(android.graphics.Canvas) -> draw
com.qc4w.ilocker.ui.view.ColorPickerView -> com.qc4w.ilocker.ui.view.ColorPickerView:
    com.qc4w.ilocker.ui.adapter.ColorPickerAdapter adapter -> adapter
    int[] colors -> colors
    com.qc4w.ilocker.ui.adapter.ColorPickerAdapter$OnColorSelectedListener listener -> listener
    void onColorSelected(int) -> onColorSelected
com.qc4w.ilocker.ui.view.CountdownTextView -> com.qc4w.ilocker.ui.view.CountdownTextView:
    boolean mTickerStopped -> mTickerStopped
    java.lang.Runnable mTicker -> mTicker
    android.os.Handler mHandler -> mHandler
    long mTimestamp -> mTimestamp
    void setTime(long,boolean) -> setTime
    void setTime(long) -> setTime
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    boolean access$0(com.qc4w.ilocker.ui.view.CountdownTextView) -> access$0
    long access$1(com.qc4w.ilocker.ui.view.CountdownTextView) -> access$1
    android.os.Handler access$2(com.qc4w.ilocker.ui.view.CountdownTextView) -> access$2
    java.lang.Runnable access$3(com.qc4w.ilocker.ui.view.CountdownTextView) -> access$3
com.qc4w.ilocker.ui.view.CountdownTextView$1 -> com.qc4w.ilocker.ui.view.CountdownTextView$1:
    com.qc4w.ilocker.ui.view.CountdownTextView this$0 -> this$0
    void run() -> run
com.qc4w.ilocker.ui.view.DPicturePasswordView -> com.qc4w.ilocker.ui.view.DPicturePasswordView:
    android.graphics.Bitmap bitmapBoder -> bitmapBoder
    android.graphics.Bitmap bitmapButton -> bitmapButton
    com.qc4w.ilocker.ui.view.FadeImageButtonView[] fibvs -> fibvs
    com.qc4w.ilocker.config.ConfigManager config -> config
    android.widget.ImageView fibvDel -> fibvDel
    void setOnClickListener(android.view.View$OnClickListener) -> setOnClickListener
    void init() -> init
    void loadBitmap() -> loadBitmap
    void onContourChanged() -> onContourChanged
    void loadBitmap(int) -> loadBitmap
com.qc4w.ilocker.ui.view.DigitalPasswordView -> com.qc4w.ilocker.ui.view.DigitalPasswordView:
    android.graphics.Bitmap bitmapBoder -> bitmapBoder
    android.graphics.Bitmap bitmapButton -> bitmapButton
    com.qc4w.ilocker.ui.view.FadeButtonView[] fbvs -> fbvs
    com.qc4w.ilocker.config.ConfigManager config -> config
    android.widget.ImageView fbvDel -> fbvDel
    void setOnClickListener(android.view.View$OnClickListener) -> setOnClickListener
    void init() -> init
    void loadBitmap() -> loadBitmap
    void onContourChanged() -> onContourChanged
com.qc4w.ilocker.ui.view.DragCameraView -> com.qc4w.ilocker.ui.view.DragCameraView:
    android.content.Context mContext -> mContext
    android.widget.Scroller mScroller -> mScroller
    int mScreenHeight -> mScreenHeight
    int mLastDownY -> mLastDownY
    int mCurryY -> mCurryY
    int mDelY -> mDelY
    boolean mCloseFlag -> mCloseFlag
    com.qc4w.ilocker.ui.view.DragCameraView$OnDragCompleteListener listener -> listener
    void setupView() -> setupView
    void setListener(com.qc4w.ilocker.ui.view.DragCameraView$OnDragCompleteListener) -> setListener
    void startBounceAnim(int,int,int) -> startBounceAnim
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void computeScroll() -> computeScroll
com.qc4w.ilocker.ui.view.DragCameraView$OnDragCompleteListener -> com.qc4w.ilocker.ui.view.DragCameraView$OnDragCompleteListener:
    void onDragComplete() -> onDragComplete
com.qc4w.ilocker.ui.view.EnterDigitalIndicator -> com.qc4w.ilocker.ui.view.EnterDigitalIndicator:
    com.qc4w.ilocker.ui.view.EnterDigitalIndicatorItemView[] ediis -> ediis
    void passwordChanged(java.lang.String) -> passwordChanged
    void passwordWrong() -> passwordWrong
com.qc4w.ilocker.ui.view.EnterDigitalIndicatorItemView -> com.qc4w.ilocker.ui.view.EnterDigitalIndicatorItemView:
    int radius -> radius
    android.graphics.Paint paint -> paint
    void init() -> init
    void onMeasure(int,int) -> onMeasure
    void onDraw(android.graphics.Canvas) -> onDraw
com.qc4w.ilocker.ui.view.FadeButton -> com.qc4w.ilocker.ui.view.FadeButton:
    android.graphics.Paint paint -> paint
    int color -> color
    int radius -> radius
    float paintAlpha -> paintAlpha
    float alpha -> alpha
    android.graphics.Bitmap mBitmap -> mBitmap
    android.graphics.Matrix matrix -> matrix
    float getPaintAlpha() -> getPaintAlpha
    void setPaintAlpha(float) -> setPaintAlpha
    void onMeasure(int,int) -> onMeasure
    void init() -> init
    void draw(android.graphics.Canvas) -> draw
    void startAnim() -> startAnim
    void onContourChanged(android.graphics.Bitmap) -> onContourChanged
com.qc4w.ilocker.ui.view.FadeButtonBoder -> com.qc4w.ilocker.ui.view.FadeButtonBoder:
    int color -> color
    float alpha -> alpha
    int radius -> radius
    android.graphics.Paint paint -> paint
    android.graphics.Bitmap mBitmap -> mBitmap
    android.graphics.Matrix matrix -> matrix
    void init() -> init
    void onMeasure(int,int) -> onMeasure
    void onDraw(android.graphics.Canvas) -> onDraw
    void onContourChanged(android.graphics.Bitmap) -> onContourChanged
com.qc4w.ilocker.ui.view.FadeButtonView -> com.qc4w.ilocker.ui.view.FadeButtonView:
    com.qc4w.ilocker.ui.view.FadeButton mButton -> mButton
    android.view.View$OnClickListener listener -> listener
    int radius -> radius
    int color -> color
    float alpha -> alpha
    com.qc4w.ilocker.config.ConfigManager config -> config
    com.qc4w.ilocker.ui.view.FadeButtonBoder fbb -> fbb
    void setOnClickListener(android.view.View$OnClickListener) -> setOnClickListener
    void onMeasure(int,int) -> onMeasure
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onConfigChanged(android.graphics.Bitmap,android.graphics.Bitmap) -> onConfigChanged
com.qc4w.ilocker.ui.view.FadeImageButton -> com.qc4w.ilocker.ui.view.FadeImageButton:
    android.graphics.Paint paint -> paint
    int color -> color
    int radius -> radius
    float paintAlpha -> paintAlpha
    float alpha -> alpha
    android.graphics.Bitmap mBitmap -> mBitmap
    android.graphics.Matrix matrix -> matrix
    float getPaintAlpha() -> getPaintAlpha
    void setPaintAlpha(float) -> setPaintAlpha
    void onMeasure(int,int) -> onMeasure
    void init() -> init
    void draw(android.graphics.Canvas) -> draw
    void startAnim() -> startAnim
    void onContourChanged(android.graphics.Bitmap) -> onContourChanged
com.qc4w.ilocker.ui.view.FadeImageButtonBoder -> com.qc4w.ilocker.ui.view.FadeImageButtonBoder:
    int color -> color
    float alpha -> alpha
    int radius -> radius
    android.graphics.Paint paint -> paint
    android.graphics.Bitmap mBitmap -> mBitmap
    android.graphics.Matrix matrix -> matrix
    void init() -> init
    void onMeasure(int,int) -> onMeasure
    void onDraw(android.graphics.Canvas) -> onDraw
    void onContourChanged(android.graphics.Bitmap) -> onContourChanged
com.qc4w.ilocker.ui.view.FadeImageButtonView -> com.qc4w.ilocker.ui.view.FadeImageButtonView:
    int TYPE_DPICTURE -> TYPE_DPICTURE
    int TYPE_PPICTURE -> TYPE_PPICTURE
    int TYPE_LPICTURE -> TYPE_LPICTURE
    int TYPE_RING -> TYPE_RING
    com.qc4w.ilocker.ui.view.FadeImageButton mButton -> mButton
    android.view.View$OnClickListener listener -> listener
    int radius -> radius
    int color -> color
    float alpha -> alpha
    int num -> num
    com.qc4w.ilocker.config.ConfigManager config -> config
    com.qc4w.ilocker.ui.view.FadeImageButtonBoder fbb -> fbb
    void setOnClickListener(android.view.View$OnClickListener) -> setOnClickListener
    void onMeasure(int,int) -> onMeasure
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onConfigChanged(int,android.graphics.Bitmap,android.graphics.Bitmap) -> onConfigChanged
com.qc4w.ilocker.ui.view.FixedSpeedScroller -> com.qc4w.ilocker.ui.view.FixedSpeedScroller:
    int mDuration -> mDuration
    boolean useFixedSpeed -> useFixedSpeed
    void setScrollAtFixedSpeed(int) -> setScrollAtFixedSpeed
    void startScroll(int,int,int,int,int) -> startScroll
    void startScroll(int,int,int,int) -> startScroll
    void setDuration(int) -> setDuration
com.qc4w.ilocker.ui.view.GradientView -> com.qc4w.ilocker.ui.view.GradientView:
    float mIndex -> mIndex
    android.graphics.Shader mShader -> mShader
    int mTextSize -> mTextSize
    int mMaxWidth -> mMaxWidth
    int mMinWidth -> mMinWidth
    int mDefaultColor -> mDefaultColor
    int mSlideColor -> mSlideColor
    android.animation.ValueAnimator animator -> animator
    int mWidth -> mWidth
    int mHeight -> mHeight
    java.lang.String mStringToShow -> mStringToShow
    android.graphics.Paint mTextPaint -> mTextPaint
    float mTextHeight -> mTextHeight
    android.animation.ValueAnimator$AnimatorUpdateListener mAnimatorUpdateListener -> mAnimatorUpdateListener
    void onDraw(android.graphics.Canvas) -> onDraw
    void stopAnimatorAndChangeColor() -> stopAnimatorAndChangeColor
    void startAnimator() -> startAnimator
    void onMeasure(int,int) -> onMeasure
    void resetControl() -> resetControl
    void access$0(com.qc4w.ilocker.ui.view.GradientView,float) -> access$0
    int access$1(com.qc4w.ilocker.ui.view.GradientView) -> access$1
    float access$2(com.qc4w.ilocker.ui.view.GradientView) -> access$2
    int access$3(com.qc4w.ilocker.ui.view.GradientView) -> access$3
    int access$4(com.qc4w.ilocker.ui.view.GradientView) -> access$4
    void access$5(com.qc4w.ilocker.ui.view.GradientView,android.graphics.Shader) -> access$5
com.qc4w.ilocker.ui.view.GradientView$1 -> com.qc4w.ilocker.ui.view.GradientView$1:
    com.qc4w.ilocker.ui.view.GradientView this$0 -> this$0
    void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.qc4w.ilocker.ui.view.HeartFadeImageButtonView -> com.qc4w.ilocker.ui.view.HeartFadeImageButtonView:
    int TYPE_DPICTURE -> TYPE_DPICTURE
    int TYPE_PPICTURE -> TYPE_PPICTURE
    int TYPE_LPICTURE -> TYPE_LPICTURE
    com.qc4w.ilocker.ui.view.FadeImageButton mButton -> mButton
    android.view.View$OnClickListener listener -> listener
    int radius -> radius
    int color -> color
    float alpha -> alpha
    int num -> num
    com.qc4w.ilocker.config.ConfigManager config -> config
    com.qc4w.ilocker.ui.view.FadeImageButtonBoder fbb -> fbb
    void setOnClickListener(android.view.View$OnClickListener) -> setOnClickListener
    void onMeasure(int,int) -> onMeasure
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onConfigChanged(int,android.graphics.Bitmap,android.graphics.Bitmap) -> onConfigChanged
com.qc4w.ilocker.ui.view.HeartPasswordView -> com.qc4w.ilocker.ui.view.HeartPasswordView:
    int width -> width
    android.graphics.Bitmap bitmapBoder -> bitmapBoder
    android.graphics.Bitmap bitmapButton -> bitmapButton
    com.qc4w.ilocker.config.ConfigManager config -> config
    com.qc4w.ilocker.ui.view.HeartFadeImageButtonView[] btns -> btns
    android.widget.ImageView btnDel -> btnDel
    void setOnClickListener(android.view.View$OnClickListener) -> setOnClickListener
    void loadBitmap() -> loadBitmap
    void onContourChanged() -> onContourChanged
    void loadBitmap(int) -> loadBitmap
    void init(android.content.Context) -> init
com.qc4w.ilocker.ui.view.KeyPressListenableFrameLayout -> com.qc4w.ilocker.ui.view.KeyPressListenableFrameLayout:
    com.qc4w.ilocker.ui.view.KeyPressListenableFrameLayout$KeyClickListener keyListener -> keyListener
    void setKeyPressListener(com.qc4w.ilocker.ui.view.KeyPressListenableFrameLayout$KeyClickListener) -> setKeyPressListener
    boolean dispatchKeyEventPreIme(android.view.KeyEvent) -> dispatchKeyEventPreIme
com.qc4w.ilocker.ui.view.KeyPressListenableFrameLayout$KeyClickListener -> com.qc4w.ilocker.ui.view.KeyPressListenableFrameLayout$KeyClickListener:
    boolean onKeyPreIme(android.view.KeyEvent) -> onKeyPreIme
com.qc4w.ilocker.ui.view.LockCPicturePatternView -> com.qc4w.ilocker.ui.view.LockCPicturePatternView:
    java.lang.String TAG -> TAG
    int ASPECT_SQUARE -> ASPECT_SQUARE
    int ASPECT_LOCK_WIDTH -> ASPECT_LOCK_WIDTH
    int ASPECT_LOCK_HEIGHT -> ASPECT_LOCK_HEIGHT
    boolean PROFILE_DRAWING -> PROFILE_DRAWING
    boolean mDrawingProfilingStarted -> mDrawingProfilingStarted
    android.graphics.Paint mPaint -> mPaint
    android.graphics.Paint mPathPaint -> mPathPaint
    int STATUS_BAR_HEIGHT -> STATUS_BAR_HEIGHT
    int MILLIS_PER_CIRCLE_ANIMATING -> MILLIS_PER_CIRCLE_ANIMATING
    com.qc4w.ilocker.ui.view.LockCPicturePatternView$OnPatternListener mOnPatternListener -> mOnPatternListener
    java.util.ArrayList mPattern -> mPattern
    boolean[][] mPatternDrawLookup -> mPatternDrawLookup
    float mInProgressX -> mInProgressX
    float mInProgressY -> mInProgressY
    long mAnimatingPeriodStart -> mAnimatingPeriodStart
    com.qc4w.ilocker.ui.view.LockCPicturePatternView$DisplayMode mPatternDisplayMode -> mPatternDisplayMode
    boolean mInputEnabled -> mInputEnabled
    boolean mInStealthMode -> mInStealthMode
    boolean mEnableHapticFeedback -> mEnableHapticFeedback
    boolean mPatternInProgress -> mPatternInProgress
    float mDiameterFactor -> mDiameterFactor
    int mStrokeAlpha -> mStrokeAlpha
    float mHitFactor -> mHitFactor
    float mSquareWidth -> mSquareWidth
    float mSquareHeight -> mSquareHeight
    android.graphics.Bitmap mBitmapCircleDefault -> mBitmapCircleDefault
    android.graphics.Bitmap mBitmapCircleGreen -> mBitmapCircleGreen
    android.graphics.Bitmap mBitmapBoderDefault -> mBitmapBoderDefault
    android.graphics.Bitmap mBitmapBoderRed -> mBitmapBoderRed
    android.graphics.Bitmap mBitmapNormalDefault -> mBitmapNormalDefault
    android.graphics.Path mCurrentPath -> mCurrentPath
    android.graphics.Rect mInvalidate -> mInvalidate
    int mBitmapWidth -> mBitmapWidth
    int mBitmapHeight -> mBitmapHeight
    int mAspect -> mAspect
    android.graphics.Matrix mCircleMatrix -> mCircleMatrix
    com.qc4w.ilocker.config.ConfigManager mConfig -> mConfig
    void onConfigChanged() -> onConfigChanged
    boolean isInStealthMode() -> isInStealthMode
    boolean isTactileFeedbackEnabled() -> isTactileFeedbackEnabled
    void setInStealthMode(boolean) -> setInStealthMode
    void setTactileFeedbackEnabled(boolean) -> setTactileFeedbackEnabled
    void setOnPatternListener(com.qc4w.ilocker.ui.view.LockCPicturePatternView$OnPatternListener) -> setOnPatternListener
    void setPattern(com.qc4w.ilocker.ui.view.LockCPicturePatternView$DisplayMode,java.util.List) -> setPattern
    void setDisplayMode(com.qc4w.ilocker.ui.view.LockCPicturePatternView$DisplayMode) -> setDisplayMode
    void notifyCellAdded() -> notifyCellAdded
    void notifyPatternStarted() -> notifyPatternStarted
    void notifyPatternDetected() -> notifyPatternDetected
    void notifyPatternCleared() -> notifyPatternCleared
    void clearPattern() -> clearPattern
    void resetPattern() -> resetPattern
    void clearPatternDrawLookup() -> clearPatternDrawLookup
    void disableInput() -> disableInput
    void enableInput() -> enableInput
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    int resolveMeasured(int,int) -> resolveMeasured
    int getSuggestedMinimumWidth() -> getSuggestedMinimumWidth
    int getSuggestedMinimumHeight() -> getSuggestedMinimumHeight
    void onMeasure(int,int) -> onMeasure
    com.qc4w.ilocker.ui.view.Cell detectAndAddHit(float,float) -> detectAndAddHit
    void addCellToPattern(com.qc4w.ilocker.ui.view.Cell) -> addCellToPattern
    com.qc4w.ilocker.ui.view.Cell checkForNewHit(float,float) -> checkForNewHit
    int getRowHit(float) -> getRowHit
    int getColumnHit(float) -> getColumnHit
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void handleActionMove(android.view.MotionEvent) -> handleActionMove
    void sendAccessEvent(int) -> sendAccessEvent
    void handleActionUp(android.view.MotionEvent) -> handleActionUp
    void handleActionDown(android.view.MotionEvent) -> handleActionDown
    float getCenterXForColumn(int) -> getCenterXForColumn
    float getCenterYForRow(int) -> getCenterYForRow
    void onDraw(android.graphics.Canvas) -> onDraw
    void drawCircle(int,android.graphics.Canvas,int,int,boolean) -> drawCircle
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
com.qc4w.ilocker.ui.view.LockCPicturePatternView$DisplayMode -> com.qc4w.ilocker.ui.view.LockCPicturePatternView$DisplayMode:
    com.qc4w.ilocker.ui.view.LockCPicturePatternView$DisplayMode Right -> Right
    com.qc4w.ilocker.ui.view.LockCPicturePatternView$DisplayMode Animate -> Animate
    com.qc4w.ilocker.ui.view.LockCPicturePatternView$DisplayMode Wrong -> Wrong
    com.qc4w.ilocker.ui.view.LockCPicturePatternView$DisplayMode[] ENUM$VALUES -> ENUM$VALUES
    com.qc4w.ilocker.ui.view.LockCPicturePatternView$DisplayMode[] values() -> values
    com.qc4w.ilocker.ui.view.LockCPicturePatternView$DisplayMode valueOf(java.lang.String) -> valueOf
com.qc4w.ilocker.ui.view.LockCPicturePatternView$OnPatternListener -> com.qc4w.ilocker.ui.view.LockCPicturePatternView$OnPatternListener:
    void onPatternStart() -> onPatternStart
    void onPatternCleared() -> onPatternCleared
    void onPatternCellAdded(java.util.List) -> onPatternCellAdded
    void onPatternDetected(java.util.List) -> onPatternDetected
com.qc4w.ilocker.ui.view.LockCPicturePatternView$SavedState -> com.qc4w.ilocker.ui.view.LockCPicturePatternView$SavedState:
    java.lang.String mSerializedPattern -> mSerializedPattern
    int mDisplayMode -> mDisplayMode
    boolean mInputEnabled -> mInputEnabled
    boolean mInStealthMode -> mInStealthMode
    boolean mTactileFeedbackEnabled -> mTactileFeedbackEnabled
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getSerializedPattern() -> getSerializedPattern
    int getDisplayMode() -> getDisplayMode
    boolean isInputEnabled() -> isInputEnabled
    boolean isInStealthMode() -> isInStealthMode
    boolean isTactileFeedbackEnabled() -> isTactileFeedbackEnabled
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.qc4w.ilocker.ui.view.LockCPicturePatternView$SavedState$1 -> com.qc4w.ilocker.ui.view.LockCPicturePatternView$SavedState$1:
    com.qc4w.ilocker.ui.view.LockCPicturePatternView$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    com.qc4w.ilocker.ui.view.LockCPicturePatternView$SavedState[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.qc4w.ilocker.ui.view.LockPatternView -> com.qc4w.ilocker.ui.view.LockPatternView:
    java.lang.String TAG -> TAG
    int ASPECT_SQUARE -> ASPECT_SQUARE
    int ASPECT_LOCK_WIDTH -> ASPECT_LOCK_WIDTH
    int ASPECT_LOCK_HEIGHT -> ASPECT_LOCK_HEIGHT
    boolean PROFILE_DRAWING -> PROFILE_DRAWING
    boolean mDrawingProfilingStarted -> mDrawingProfilingStarted
    android.graphics.Paint mPaint -> mPaint
    android.graphics.Paint mPathPaint -> mPathPaint
    int STATUS_BAR_HEIGHT -> STATUS_BAR_HEIGHT
    int MILLIS_PER_CIRCLE_ANIMATING -> MILLIS_PER_CIRCLE_ANIMATING
    com.qc4w.ilocker.ui.view.LockPatternView$OnPatternListener mOnPatternListener -> mOnPatternListener
    java.util.ArrayList mPattern -> mPattern
    boolean[][] mPatternDrawLookup -> mPatternDrawLookup
    float mInProgressX -> mInProgressX
    float mInProgressY -> mInProgressY
    long mAnimatingPeriodStart -> mAnimatingPeriodStart
    com.qc4w.ilocker.ui.view.LockPatternView$DisplayMode mPatternDisplayMode -> mPatternDisplayMode
    boolean mInputEnabled -> mInputEnabled
    boolean mInStealthMode -> mInStealthMode
    boolean mEnableHapticFeedback -> mEnableHapticFeedback
    boolean mPatternInProgress -> mPatternInProgress
    float mDiameterFactor -> mDiameterFactor
    int mStrokeAlpha -> mStrokeAlpha
    float mHitFactor -> mHitFactor
    float mSquareWidth -> mSquareWidth
    float mSquareHeight -> mSquareHeight
    android.graphics.Bitmap mBitmapCircleDefault -> mBitmapCircleDefault
    android.graphics.Bitmap mBitmapCircleGreen -> mBitmapCircleGreen
    android.graphics.Bitmap mBitmapCircleRed -> mBitmapCircleRed
    android.graphics.Path mCurrentPath -> mCurrentPath
    android.graphics.Rect mInvalidate -> mInvalidate
    int mBitmapWidth -> mBitmapWidth
    int mBitmapHeight -> mBitmapHeight
    int mAspect -> mAspect
    android.graphics.Matrix mCircleMatrix -> mCircleMatrix
    com.qc4w.ilocker.config.ConfigManager mConfig -> mConfig
    void onConfigChanged() -> onConfigChanged
    android.graphics.Bitmap getBitmapFor(int) -> getBitmapFor
    boolean isInStealthMode() -> isInStealthMode
    boolean isTactileFeedbackEnabled() -> isTactileFeedbackEnabled
    void setInStealthMode(boolean) -> setInStealthMode
    void setTactileFeedbackEnabled(boolean) -> setTactileFeedbackEnabled
    void setOnPatternListener(com.qc4w.ilocker.ui.view.LockPatternView$OnPatternListener) -> setOnPatternListener
    void setPattern(com.qc4w.ilocker.ui.view.LockPatternView$DisplayMode,java.util.List) -> setPattern
    void setDisplayMode(com.qc4w.ilocker.ui.view.LockPatternView$DisplayMode) -> setDisplayMode
    void notifyCellAdded() -> notifyCellAdded
    void notifyPatternStarted() -> notifyPatternStarted
    void notifyPatternDetected() -> notifyPatternDetected
    void notifyPatternCleared() -> notifyPatternCleared
    void clearPattern() -> clearPattern
    void resetPattern() -> resetPattern
    void clearPatternDrawLookup() -> clearPatternDrawLookup
    void disableInput() -> disableInput
    void enableInput() -> enableInput
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    int resolveMeasured(int,int) -> resolveMeasured
    int getSuggestedMinimumWidth() -> getSuggestedMinimumWidth
    int getSuggestedMinimumHeight() -> getSuggestedMinimumHeight
    void onMeasure(int,int) -> onMeasure
    com.qc4w.ilocker.ui.view.Cell detectAndAddHit(float,float) -> detectAndAddHit
    void addCellToPattern(com.qc4w.ilocker.ui.view.Cell) -> addCellToPattern
    com.qc4w.ilocker.ui.view.Cell checkForNewHit(float,float) -> checkForNewHit
    int getRowHit(float) -> getRowHit
    int getColumnHit(float) -> getColumnHit
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void handleActionMove(android.view.MotionEvent) -> handleActionMove
    void sendAccessEvent(int) -> sendAccessEvent
    void handleActionUp(android.view.MotionEvent) -> handleActionUp
    void handleActionDown(android.view.MotionEvent) -> handleActionDown
    float getCenterXForColumn(int) -> getCenterXForColumn
    float getCenterYForRow(int) -> getCenterYForRow
    void onDraw(android.graphics.Canvas) -> onDraw
    void drawCircle(android.graphics.Canvas,int,int,boolean) -> drawCircle
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
com.qc4w.ilocker.ui.view.LockPatternView$DisplayMode -> com.qc4w.ilocker.ui.view.LockPatternView$DisplayMode:
    com.qc4w.ilocker.ui.view.LockPatternView$DisplayMode Right -> Right
    com.qc4w.ilocker.ui.view.LockPatternView$DisplayMode Animate -> Animate
    com.qc4w.ilocker.ui.view.LockPatternView$DisplayMode Wrong -> Wrong
    com.qc4w.ilocker.ui.view.LockPatternView$DisplayMode[] ENUM$VALUES -> ENUM$VALUES
    com.qc4w.ilocker.ui.view.LockPatternView$DisplayMode[] values() -> values
    com.qc4w.ilocker.ui.view.LockPatternView$DisplayMode valueOf(java.lang.String) -> valueOf
com.qc4w.ilocker.ui.view.LockPatternView$OnPatternListener -> com.qc4w.ilocker.ui.view.LockPatternView$OnPatternListener:
    void onPatternStart() -> onPatternStart
    void onPatternCleared() -> onPatternCleared
    void onPatternCellAdded(java.util.List) -> onPatternCellAdded
    void onPatternDetected(java.util.List) -> onPatternDetected
com.qc4w.ilocker.ui.view.LockPatternView$SavedState -> com.qc4w.ilocker.ui.view.LockPatternView$SavedState:
    java.lang.String mSerializedPattern -> mSerializedPattern
    int mDisplayMode -> mDisplayMode
    boolean mInputEnabled -> mInputEnabled
    boolean mInStealthMode -> mInStealthMode
    boolean mTactileFeedbackEnabled -> mTactileFeedbackEnabled
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getSerializedPattern() -> getSerializedPattern
    int getDisplayMode() -> getDisplayMode
    boolean isInputEnabled() -> isInputEnabled
    boolean isInStealthMode() -> isInStealthMode
    boolean isTactileFeedbackEnabled() -> isTactileFeedbackEnabled
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.qc4w.ilocker.ui.view.LockPatternView$SavedState$1 -> com.qc4w.ilocker.ui.view.LockPatternView$SavedState$1:
    com.qc4w.ilocker.ui.view.LockPatternView$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    com.qc4w.ilocker.ui.view.LockPatternView$SavedState[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.qc4w.ilocker.ui.view.LockPicturePatternView -> com.qc4w.ilocker.ui.view.LockPicturePatternView:
    java.lang.String TAG -> TAG
    int ASPECT_SQUARE -> ASPECT_SQUARE
    int ASPECT_LOCK_WIDTH -> ASPECT_LOCK_WIDTH
    int ASPECT_LOCK_HEIGHT -> ASPECT_LOCK_HEIGHT
    boolean PROFILE_DRAWING -> PROFILE_DRAWING
    boolean mDrawingProfilingStarted -> mDrawingProfilingStarted
    android.graphics.Paint mPaint -> mPaint
    android.graphics.Paint mPathPaint -> mPathPaint
    int STATUS_BAR_HEIGHT -> STATUS_BAR_HEIGHT
    int MILLIS_PER_CIRCLE_ANIMATING -> MILLIS_PER_CIRCLE_ANIMATING
    com.qc4w.ilocker.ui.view.LockPicturePatternView$OnPatternListener mOnPatternListener -> mOnPatternListener
    java.util.ArrayList mPattern -> mPattern
    boolean[][] mPatternDrawLookup -> mPatternDrawLookup
    float mInProgressX -> mInProgressX
    float mInProgressY -> mInProgressY
    long mAnimatingPeriodStart -> mAnimatingPeriodStart
    com.qc4w.ilocker.ui.view.LockPicturePatternView$DisplayMode mPatternDisplayMode -> mPatternDisplayMode
    boolean mInputEnabled -> mInputEnabled
    boolean mInStealthMode -> mInStealthMode
    boolean mEnableHapticFeedback -> mEnableHapticFeedback
    boolean mPatternInProgress -> mPatternInProgress
    float mDiameterFactor -> mDiameterFactor
    int mStrokeAlpha -> mStrokeAlpha
    float mHitFactor -> mHitFactor
    float mSquareWidth -> mSquareWidth
    float mSquareHeight -> mSquareHeight
    android.graphics.Bitmap mBitmapCircleDefault -> mBitmapCircleDefault
    android.graphics.Bitmap[] mBitmapCircleGreens -> mBitmapCircleGreens
    android.graphics.Path mCurrentPath -> mCurrentPath
    android.graphics.Rect mInvalidate -> mInvalidate
    int mBitmapWidth -> mBitmapWidth
    int mBitmapHeight -> mBitmapHeight
    int mAspect -> mAspect
    android.graphics.Matrix mCircleMatrix -> mCircleMatrix
    com.qc4w.ilocker.config.ConfigManager mConfig -> mConfig
    void onConfigChanged() -> onConfigChanged
    boolean isInStealthMode() -> isInStealthMode
    boolean isTactileFeedbackEnabled() -> isTactileFeedbackEnabled
    void setInStealthMode(boolean) -> setInStealthMode
    void setTactileFeedbackEnabled(boolean) -> setTactileFeedbackEnabled
    void setOnPatternListener(com.qc4w.ilocker.ui.view.LockPicturePatternView$OnPatternListener) -> setOnPatternListener
    void setPattern(com.qc4w.ilocker.ui.view.LockPicturePatternView$DisplayMode,java.util.List) -> setPattern
    void setDisplayMode(com.qc4w.ilocker.ui.view.LockPicturePatternView$DisplayMode) -> setDisplayMode
    void notifyCellAdded() -> notifyCellAdded
    void notifyPatternStarted() -> notifyPatternStarted
    void notifyPatternDetected() -> notifyPatternDetected
    void notifyPatternCleared() -> notifyPatternCleared
    void clearPattern() -> clearPattern
    void resetPattern() -> resetPattern
    void clearPatternDrawLookup() -> clearPatternDrawLookup
    void disableInput() -> disableInput
    void enableInput() -> enableInput
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    int resolveMeasured(int,int) -> resolveMeasured
    int getSuggestedMinimumWidth() -> getSuggestedMinimumWidth
    int getSuggestedMinimumHeight() -> getSuggestedMinimumHeight
    void onMeasure(int,int) -> onMeasure
    com.qc4w.ilocker.ui.view.Cell detectAndAddHit(float,float) -> detectAndAddHit
    void addCellToPattern(com.qc4w.ilocker.ui.view.Cell) -> addCellToPattern
    com.qc4w.ilocker.ui.view.Cell checkForNewHit(float,float) -> checkForNewHit
    int getRowHit(float) -> getRowHit
    int getColumnHit(float) -> getColumnHit
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void handleActionMove(android.view.MotionEvent) -> handleActionMove
    void sendAccessEvent(int) -> sendAccessEvent
    void handleActionUp(android.view.MotionEvent) -> handleActionUp
    void handleActionDown(android.view.MotionEvent) -> handleActionDown
    float getCenterXForColumn(int) -> getCenterXForColumn
    float getCenterYForRow(int) -> getCenterYForRow
    void onDraw(android.graphics.Canvas) -> onDraw
    void drawCircle(int,android.graphics.Canvas,int,int,boolean) -> drawCircle
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
com.qc4w.ilocker.ui.view.LockPicturePatternView$DisplayMode -> com.qc4w.ilocker.ui.view.LockPicturePatternView$DisplayMode:
    com.qc4w.ilocker.ui.view.LockPicturePatternView$DisplayMode Right -> Right
    com.qc4w.ilocker.ui.view.LockPicturePatternView$DisplayMode Animate -> Animate
    com.qc4w.ilocker.ui.view.LockPicturePatternView$DisplayMode Wrong -> Wrong
    com.qc4w.ilocker.ui.view.LockPicturePatternView$DisplayMode[] ENUM$VALUES -> ENUM$VALUES
    com.qc4w.ilocker.ui.view.LockPicturePatternView$DisplayMode[] values() -> values
    com.qc4w.ilocker.ui.view.LockPicturePatternView$DisplayMode valueOf(java.lang.String) -> valueOf
com.qc4w.ilocker.ui.view.LockPicturePatternView$OnPatternListener -> com.qc4w.ilocker.ui.view.LockPicturePatternView$OnPatternListener:
    void onPatternStart() -> onPatternStart
    void onPatternCleared() -> onPatternCleared
    void onPatternCellAdded(java.util.List) -> onPatternCellAdded
    void onPatternDetected(java.util.List) -> onPatternDetected
com.qc4w.ilocker.ui.view.LockPicturePatternView$SavedState -> com.qc4w.ilocker.ui.view.LockPicturePatternView$SavedState:
    java.lang.String mSerializedPattern -> mSerializedPattern
    int mDisplayMode -> mDisplayMode
    boolean mInputEnabled -> mInputEnabled
    boolean mInStealthMode -> mInStealthMode
    boolean mTactileFeedbackEnabled -> mTactileFeedbackEnabled
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getSerializedPattern() -> getSerializedPattern
    int getDisplayMode() -> getDisplayMode
    boolean isInputEnabled() -> isInputEnabled
    boolean isInStealthMode() -> isInStealthMode
    boolean isTactileFeedbackEnabled() -> isTactileFeedbackEnabled
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.qc4w.ilocker.ui.view.LockPicturePatternView$SavedState$1 -> com.qc4w.ilocker.ui.view.LockPicturePatternView$SavedState$1:
    com.qc4w.ilocker.ui.view.LockPicturePatternView$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    com.qc4w.ilocker.ui.view.LockPicturePatternView$SavedState[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.qc4w.ilocker.ui.view.LockerViewCountdownView -> com.qc4w.ilocker.ui.view.LockerViewCountdownView:
com.qc4w.ilocker.ui.view.LockerViewSentenceView -> com.qc4w.ilocker.ui.view.LockerViewSentenceView:
com.qc4w.ilocker.ui.view.LockerViewTimeView -> com.qc4w.ilocker.ui.view.LockerViewTimeView:
com.qc4w.ilocker.ui.view.LockerViewTimingView -> com.qc4w.ilocker.ui.view.LockerViewTimingView:
com.qc4w.ilocker.ui.view.LoversITView -> com.qc4w.ilocker.ui.view.LoversITView:
com.qc4w.ilocker.ui.view.NameITView -> com.qc4w.ilocker.ui.view.NameITView:
com.qc4w.ilocker.ui.view.NameImageView -> com.qc4w.ilocker.ui.view.NameImageView:
    android.widget.ImageView ivBoder -> ivBoder
    android.widget.ImageView ivImage -> ivImage
    void loadImage() -> loadImage
com.qc4w.ilocker.ui.view.NoScrollGridView -> com.qc4w.ilocker.ui.view.NoScrollGridView:
    void onMeasure(int,int) -> onMeasure
com.qc4w.ilocker.ui.view.NoSizeCircleColorView -> com.qc4w.ilocker.ui.view.NoSizeCircleColorView:
    int color -> color
    android.graphics.Paint paint -> paint
    void setColor(int) -> setColor
    void onDraw(android.graphics.Canvas) -> onDraw
com.qc4w.ilocker.ui.view.PPicturePasswordView -> com.qc4w.ilocker.ui.view.PPicturePasswordView:
    android.graphics.Bitmap bitmapBoder -> bitmapBoder
    android.graphics.Bitmap bitmapButton -> bitmapButton
    com.qc4w.ilocker.ui.view.FadeImageButtonView[] fibvs -> fibvs
    com.qc4w.ilocker.config.ConfigManager config -> config
    void setOnClickListener(android.view.View$OnClickListener) -> setOnClickListener
    void init() -> init
    void loadBitmap() -> loadBitmap
    void onContourChanged() -> onContourChanged
    void loadBitmap(int) -> loadBitmap
com.qc4w.ilocker.ui.view.ParallaxPagerTransformer -> com.qc4w.ilocker.ui.view.ParallaxPagerTransformer:
    float MIN_SCALE -> MIN_SCALE
    float MIN_ALPHA -> MIN_ALPHA
    void transformPage(android.view.View,float) -> transformPage
com.qc4w.ilocker.ui.view.PinnedHeaderExpandableListView -> com.qc4w.ilocker.ui.view.PinnedHeaderExpandableListView:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.view.View mHeaderView -> mHeaderView
    int mHeaderWidth -> mHeaderWidth
    int mHeaderHeight -> mHeaderHeight
    android.view.View mTouchTarget -> mTouchTarget
    android.widget.AbsListView$OnScrollListener mScrollListener -> mScrollListener
    com.qc4w.ilocker.ui.view.PinnedHeaderExpandableListView$OnHeaderUpdateListener mHeaderUpdateListener -> mHeaderUpdateListener
    boolean mActionDownHappened -> mActionDownHappened
    boolean mIsHeaderGroupClickable -> mIsHeaderGroupClickable
    void initView() -> initView
    void setOnScrollListener(android.widget.AbsListView$OnScrollListener) -> setOnScrollListener
    void setOnGroupClickListener(android.widget.ExpandableListView$OnGroupClickListener,boolean) -> setOnGroupClickListener
    void setOnHeaderUpdateListener(com.qc4w.ilocker.ui.view.PinnedHeaderExpandableListView$OnHeaderUpdateListener) -> setOnHeaderUpdateListener
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    android.view.View getTouchTarget(android.view.View,int,int) -> getTouchTarget
    boolean isTouchPointInView(android.view.View,int,int) -> isTouchPointInView
    void requestRefreshHeader() -> requestRefreshHeader
    void refreshHeader() -> refreshHeader
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
com.qc4w.ilocker.ui.view.PinnedHeaderExpandableListView$OnHeaderUpdateListener -> com.qc4w.ilocker.ui.view.PinnedHeaderExpandableListView$OnHeaderUpdateListener:
    android.view.View getPinnedHeader() -> getPinnedHeader
    void updatePinnedHeader(android.view.View,int) -> updatePinnedHeader
com.qc4w.ilocker.ui.view.Point -> com.qc4w.ilocker.ui.view.Point:
    float x -> x
    float y -> y
    float radius -> radius
    int color -> color
    float getX() -> getX
    void setX(float) -> setX
    float getY() -> getY
    void setY(float) -> setY
    float getRadius() -> getRadius
    void setRadius(float) -> setRadius
    int getColor() -> getColor
    void setColor(int) -> setColor
com.qc4w.ilocker.ui.view.RingPasswordView -> com.qc4w.ilocker.ui.view.RingPasswordView:
    android.graphics.Bitmap bitmapBoder -> bitmapBoder
    android.graphics.Bitmap bitmapButton -> bitmapButton
    com.qc4w.ilocker.ui.view.FadeImageButtonView[] fibvs -> fibvs
    com.qc4w.ilocker.config.ConfigManager config -> config
    android.widget.ImageView btnDel -> btnDel
    void setOnClickListener(android.view.View$OnClickListener) -> setOnClickListener
    void init() -> init
    void loadBitmap() -> loadBitmap
    void onContourChanged() -> onContourChanged
    void loadBitmap(int) -> loadBitmap
com.qc4w.ilocker.ui.view.ScrollerViewPager -> com.qc4w.ilocker.ui.view.ScrollerViewPager:
    java.lang.String TAG -> TAG
    int duration -> duration
    boolean intercept -> intercept
    void fixScrollSpeed() -> fixScrollSpeed
    void fixScrollSpeed(int) -> fixScrollSpeed
    void setScrollSpeedUsingRefection(int) -> setScrollSpeedUsingRefection
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    void setTouchIntercept(boolean) -> setTouchIntercept
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
com.qc4w.ilocker.ui.view.SlideUnlockItemView -> com.qc4w.ilocker.ui.view.SlideUnlockItemView:
    void init() -> init
com.qc4w.ilocker.ui.view.SpanDigitalClock -> com.qc4w.ilocker.ui.view.SpanDigitalClock:
    java.util.Calendar mCalendar -> mCalendar
    java.lang.String m12 -> m12
    java.lang.String m24 -> m24
    com.qc4w.ilocker.ui.view.SpanDigitalClock$FormatChangeObserver mFormatChangeObserver -> mFormatChangeObserver
    java.lang.Runnable mTicker -> mTicker
    android.os.Handler mHandler -> mHandler
    boolean mTickerStopped -> mTickerStopped
    java.lang.String mFormat -> mFormat
    void initClock(android.content.Context) -> initClock
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    boolean get24HourMode() -> get24HourMode
    void setFormat() -> setFormat
    void access$0(com.qc4w.ilocker.ui.view.SpanDigitalClock) -> access$0
    boolean access$1(com.qc4w.ilocker.ui.view.SpanDigitalClock) -> access$1
    android.os.Handler access$2(com.qc4w.ilocker.ui.view.SpanDigitalClock) -> access$2
    java.lang.Runnable access$3(com.qc4w.ilocker.ui.view.SpanDigitalClock) -> access$3
com.qc4w.ilocker.ui.view.SpanDigitalClock$1 -> com.qc4w.ilocker.ui.view.SpanDigitalClock$1:
    com.qc4w.ilocker.ui.view.SpanDigitalClock this$0 -> this$0
    void run() -> run
com.qc4w.ilocker.ui.view.SpanDigitalClock$FormatChangeObserver -> com.qc4w.ilocker.ui.view.SpanDigitalClock$FormatChangeObserver:
    com.qc4w.ilocker.ui.view.SpanDigitalClock this$0 -> this$0
    void onChange(boolean) -> onChange
com.qc4w.ilocker.ui.view.SpringIndicator -> com.qc4w.ilocker.ui.view.SpringIndicator:
    int INDICATOR_ANIM_DURATION -> INDICATOR_ANIM_DURATION
    float acceleration -> acceleration
    float headMoveOffset -> headMoveOffset
    float footMoveOffset -> footMoveOffset
    float radiusMax -> radiusMax
    float radiusMin -> radiusMin
    float radiusOffset -> radiusOffset
    float textSize -> textSize
    int textColorId -> textColorId
    int textBgResId -> textBgResId
    int selectedTextColorId -> selectedTextColorId
    int indicatorColorId -> indicatorColorId
    int indicatorColorsId -> indicatorColorsId
    int[] indicatorColorArray -> indicatorColorArray
    android.widget.LinearLayout tabContainer -> tabContainer
    com.qc4w.ilocker.ui.view.SpringView springView -> springView
    android.support.v4.view.ViewPager viewPager -> viewPager
    java.util.List tabs -> tabs
    android.support.v4.view.ViewPager$OnPageChangeListener delegateListener -> delegateListener
    com.qc4w.ilocker.ui.view.TabClickListener tabClickListener -> tabClickListener
    android.animation.ObjectAnimator indicatorColorAnim -> indicatorColorAnim
    void initAttrs(android.util.AttributeSet) -> initAttrs
    void setViewPager(android.support.v4.view.ViewPager) -> setViewPager
    void initSpringView() -> initSpringView
    void addPointView() -> addPointView
    void addTabContainerView() -> addTabContainerView
    void addTabItems() -> addTabItems
    void createPoints() -> createPoints
    void onLayout(boolean,int,int,int,int) -> onLayout
    void setUpListener() -> setUpListener
    float getPositionDistance(int) -> getPositionDistance
    float getTabX(int) -> getTabX
    void setSelectedTextColor(int) -> setSelectedTextColor
    void createIndicatorColorAnim() -> createIndicatorColorAnim
    void seek(long) -> seek
    java.util.List getTabs() -> getTabs
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    void setOnTabClickListener(com.qc4w.ilocker.ui.view.TabClickListener) -> setOnTabClickListener
    com.qc4w.ilocker.ui.view.TabClickListener access$0(com.qc4w.ilocker.ui.view.SpringIndicator) -> access$0
    android.support.v4.view.ViewPager access$1(com.qc4w.ilocker.ui.view.SpringIndicator) -> access$1
    void access$2(com.qc4w.ilocker.ui.view.SpringIndicator,int) -> access$2
    android.support.v4.view.ViewPager$OnPageChangeListener access$3(com.qc4w.ilocker.ui.view.SpringIndicator) -> access$3
    java.util.List access$4(com.qc4w.ilocker.ui.view.SpringIndicator) -> access$4
    com.qc4w.ilocker.ui.view.SpringView access$5(com.qc4w.ilocker.ui.view.SpringIndicator) -> access$5
    float access$6(com.qc4w.ilocker.ui.view.SpringIndicator) -> access$6
    float access$7(com.qc4w.ilocker.ui.view.SpringIndicator) -> access$7
    float access$8(com.qc4w.ilocker.ui.view.SpringIndicator) -> access$8
    float access$9(com.qc4w.ilocker.ui.view.SpringIndicator) -> access$9
    float access$10(com.qc4w.ilocker.ui.view.SpringIndicator,int) -> access$10
    float access$11(com.qc4w.ilocker.ui.view.SpringIndicator,int) -> access$11
    float access$12(com.qc4w.ilocker.ui.view.SpringIndicator) -> access$12
    float access$13(com.qc4w.ilocker.ui.view.SpringIndicator) -> access$13
    int access$14(com.qc4w.ilocker.ui.view.SpringIndicator) -> access$14
    void access$15(com.qc4w.ilocker.ui.view.SpringIndicator,long) -> access$15
com.qc4w.ilocker.ui.view.SpringIndicator$1 -> com.qc4w.ilocker.ui.view.SpringIndicator$1:
    com.qc4w.ilocker.ui.view.SpringIndicator this$0 -> this$0
    int val$position -> val$position
    void onClick(android.view.View) -> onClick
com.qc4w.ilocker.ui.view.SpringIndicator$2 -> com.qc4w.ilocker.ui.view.SpringIndicator$2:
    com.qc4w.ilocker.ui.view.SpringIndicator this$0 -> this$0
    void onPageSelected(int) -> onPageSelected
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
com.qc4w.ilocker.ui.view.SpringView -> com.qc4w.ilocker.ui.view.SpringView:
    android.graphics.Paint paint -> paint
    android.graphics.Path path -> path
    com.qc4w.ilocker.ui.view.Point headPoint -> headPoint
    com.qc4w.ilocker.ui.view.Point footPoint -> footPoint
    void init() -> init
    void makePath() -> makePath
    void onDraw(android.graphics.Canvas) -> onDraw
    void animCreate() -> animCreate
    com.qc4w.ilocker.ui.view.Point getHeadPoint() -> getHeadPoint
    com.qc4w.ilocker.ui.view.Point getFootPoint() -> getFootPoint
    void setIndicatorColor(int) -> setIndicatorColor
    int getIndicatorColor() -> getIndicatorColor
com.qc4w.ilocker.ui.view.StickyLayout -> com.qc4w.ilocker.ui.view.StickyLayout:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.view.View mHeader -> mHeader
    android.view.View mContent -> mContent
    com.qc4w.ilocker.ui.view.StickyLayout$OnGiveUpTouchEventListener mGiveUpTouchEventListener -> mGiveUpTouchEventListener
    int mOriginalHeaderHeight -> mOriginalHeaderHeight
    int mHeaderHeight -> mHeaderHeight
    int mStatus -> mStatus
    int STATUS_EXPANDED -> STATUS_EXPANDED
    int STATUS_COLLAPSED -> STATUS_COLLAPSED
    int mTouchSlop -> mTouchSlop
    int mLastX -> mLastX
    int mLastY -> mLastY
    int mLastXIntercept -> mLastXIntercept
    int mLastYIntercept -> mLastYIntercept
    int TAN -> TAN
    boolean mIsSticky -> mIsSticky
    boolean mInitDataSucceed -> mInitDataSucceed
    boolean mDisallowInterceptTouchEventOnHeader -> mDisallowInterceptTouchEventOnHeader
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    void initData() -> initData
    void setOnGiveUpTouchEventListener(com.qc4w.ilocker.ui.view.StickyLayout$OnGiveUpTouchEventListener) -> setOnGiveUpTouchEventListener
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void smoothSetHeaderHeight(int,int,long) -> smoothSetHeaderHeight
    void smoothSetHeaderHeight(int,int,long,boolean) -> smoothSetHeaderHeight
    void setOriginalHeaderHeight(int) -> setOriginalHeaderHeight
    void setHeaderHeight(int,boolean) -> setHeaderHeight
    void setHeaderHeight(int) -> setHeaderHeight
    int getHeaderHeight() -> getHeaderHeight
    void setSticky(boolean) -> setSticky
    void requestDisallowInterceptTouchEventOnHeader(boolean) -> requestDisallowInterceptTouchEventOnHeader
com.qc4w.ilocker.ui.view.StickyLayout$1 -> com.qc4w.ilocker.ui.view.StickyLayout$1:
    com.qc4w.ilocker.ui.view.StickyLayout this$0 -> this$0
    int val$frameCount -> val$frameCount
    int val$to -> val$to
    int val$from -> val$from
    float val$partation -> val$partation
    boolean val$modifyOriginalHeaderHeight -> val$modifyOriginalHeaderHeight
    void run() -> run
    com.qc4w.ilocker.ui.view.StickyLayout access$0(com.qc4w.ilocker.ui.view.StickyLayout$1) -> access$0
com.qc4w.ilocker.ui.view.StickyLayout$1$1 -> com.qc4w.ilocker.ui.view.StickyLayout$1$1:
    com.qc4w.ilocker.ui.view.StickyLayout$1 this$1 -> this$1
    int val$height -> val$height
    void run() -> run
com.qc4w.ilocker.ui.view.StickyLayout$OnGiveUpTouchEventListener -> com.qc4w.ilocker.ui.view.StickyLayout$OnGiveUpTouchEventListener:
    boolean giveUpTouchEvent(android.view.MotionEvent) -> giveUpTouchEvent
com.qc4w.ilocker.ui.view.SwipeDismissListViewTouchListener -> com.qc4w.ilocker.ui.view.SwipeDismissListViewTouchListener:
    int mSlop -> mSlop
    int mMinFlingVelocity -> mMinFlingVelocity
    int mMaxFlingVelocity -> mMaxFlingVelocity
    long mAnimationTime -> mAnimationTime
    android.widget.ListView mListView -> mListView
    com.qc4w.ilocker.ui.view.SwipeDismissListViewTouchListener$DismissCallbacks mCallbacks -> mCallbacks
    int mViewWidth -> mViewWidth
    java.util.List mPendingDismisses -> mPendingDismisses
    int mDismissAnimationRefCount -> mDismissAnimationRefCount
    float mDownX -> mDownX
    float mDownY -> mDownY
    boolean mSwiping -> mSwiping
    int mSwipingSlop -> mSwipingSlop
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    int mDownPosition -> mDownPosition
    android.view.View mDownView -> mDownView
    boolean mPaused -> mPaused
    void setEnabled(boolean) -> setEnabled
    android.widget.AbsListView$OnScrollListener makeScrollListener() -> makeScrollListener
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    void performDismiss(android.view.View,int,boolean) -> performDismiss
    void access$0(com.qc4w.ilocker.ui.view.SwipeDismissListViewTouchListener,android.view.View,int,boolean) -> access$0
    int access$1(com.qc4w.ilocker.ui.view.SwipeDismissListViewTouchListener) -> access$1
    void access$2(com.qc4w.ilocker.ui.view.SwipeDismissListViewTouchListener,int) -> access$2
    java.util.List access$3(com.qc4w.ilocker.ui.view.SwipeDismissListViewTouchListener) -> access$3
    com.qc4w.ilocker.ui.view.SwipeDismissListViewTouchListener$DismissCallbacks access$4(com.qc4w.ilocker.ui.view.SwipeDismissListViewTouchListener) -> access$4
    android.widget.ListView access$5(com.qc4w.ilocker.ui.view.SwipeDismissListViewTouchListener) -> access$5
    void access$6(com.qc4w.ilocker.ui.view.SwipeDismissListViewTouchListener,int) -> access$6
com.qc4w.ilocker.ui.view.SwipeDismissListViewTouchListener$1 -> com.qc4w.ilocker.ui.view.SwipeDismissListViewTouchListener$1:
    com.qc4w.ilocker.ui.view.SwipeDismissListViewTouchListener this$0 -> this$0
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
com.qc4w.ilocker.ui.view.SwipeDismissListViewTouchListener$2 -> com.qc4w.ilocker.ui.view.SwipeDismissListViewTouchListener$2:
    com.qc4w.ilocker.ui.view.SwipeDismissListViewTouchListener this$0 -> this$0
    android.view.View val$downView -> val$downView
    int val$downPosition -> val$downPosition
    boolean val$right -> val$right
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.qc4w.ilocker.ui.view.SwipeDismissListViewTouchListener$3 -> com.qc4w.ilocker.ui.view.SwipeDismissListViewTouchListener$3:
    com.qc4w.ilocker.ui.view.SwipeDismissListViewTouchListener this$0 -> this$0
    boolean val$right -> val$right
    int val$originalHeight -> val$originalHeight
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.qc4w.ilocker.ui.view.SwipeDismissListViewTouchListener$4 -> com.qc4w.ilocker.ui.view.SwipeDismissListViewTouchListener$4:
    com.qc4w.ilocker.ui.view.SwipeDismissListViewTouchListener this$0 -> this$0
    android.view.ViewGroup$LayoutParams val$lp -> val$lp
    android.view.View val$dismissView -> val$dismissView
    void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.qc4w.ilocker.ui.view.SwipeDismissListViewTouchListener$DismissCallbacks -> com.qc4w.ilocker.ui.view.SwipeDismissListViewTouchListener$DismissCallbacks:
    boolean canDismiss(int) -> canDismiss
    void onDismissRight(android.widget.ListView,int[]) -> onDismissRight
    void onDismissLeft(android.widget.ListView,int[]) -> onDismissLeft
com.qc4w.ilocker.ui.view.SwipeDismissListViewTouchListener$PendingDismissData -> com.qc4w.ilocker.ui.view.SwipeDismissListViewTouchListener$PendingDismissData:
    int position -> position
    android.view.View view -> view
    com.qc4w.ilocker.ui.view.SwipeDismissListViewTouchListener this$0 -> this$0
    int compareTo(com.qc4w.ilocker.ui.view.SwipeDismissListViewTouchListener$PendingDismissData) -> compareTo
    int compareTo(java.lang.Object) -> compareTo
com.qc4w.ilocker.ui.view.TabClickListener -> com.qc4w.ilocker.ui.view.TabClickListener:
    boolean onTabClick(int) -> onTabClick
com.qc4w.ilocker.ui.view.TimingTextView -> com.qc4w.ilocker.ui.view.TimingTextView:
    boolean mTickerStopped -> mTickerStopped
    java.lang.Runnable mTicker -> mTicker
    android.os.Handler mHandler -> mHandler
    long mTimestamp -> mTimestamp
    void setTime(long,boolean) -> setTime
    void setTime(long) -> setTime
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    boolean access$0(com.qc4w.ilocker.ui.view.TimingTextView) -> access$0
    long access$1(com.qc4w.ilocker.ui.view.TimingTextView) -> access$1
    android.os.Handler access$2(com.qc4w.ilocker.ui.view.TimingTextView) -> access$2
    java.lang.Runnable access$3(com.qc4w.ilocker.ui.view.TimingTextView) -> access$3
com.qc4w.ilocker.ui.view.TimingTextView$1 -> com.qc4w.ilocker.ui.view.TimingTextView$1:
    com.qc4w.ilocker.ui.view.TimingTextView this$0 -> this$0
    void run() -> run
com.qc4w.ilocker.ui.view.TouchArtistView -> com.qc4w.ilocker.ui.view.TouchArtistView:
    int RED -> RED
    int BLUE -> BLUE
    float oldX -> oldX
    float oldY -> oldY
    float startX -> startX
    float startY -> startY
    com.qc4w.ilocker.ui.view.TouchArtistView$OnTouchEndListener mListener -> mListener
    java.util.ArrayList balls -> balls
    android.animation.AnimatorSet animation -> animation
    void setListener(com.qc4w.ilocker.ui.view.TouchArtistView$OnTouchEndListener) -> setListener
    int distance(float,float,float,float) -> distance
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    com.qc4w.ilocker.ui.anim.FlowerHolder addBall(float,float) -> addBall
    void onDraw(android.graphics.Canvas) -> onDraw
com.qc4w.ilocker.ui.view.TouchArtistView$1 -> com.qc4w.ilocker.ui.view.TouchArtistView$1:
    com.qc4w.ilocker.ui.view.TouchArtistView this$0 -> this$0
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.qc4w.ilocker.ui.view.TouchArtistView$OnTouchEndListener -> com.qc4w.ilocker.ui.view.TouchArtistView$OnTouchEndListener:
    void onTouchEnd(int) -> onTouchEnd
com.qc4w.ilocker.ui.view.ViewMsgTitleIndict -> com.qc4w.ilocker.ui.view.ViewMsgTitleIndict:
    android.content.Context mContext -> mContext
    android.widget.LinearLayout mLinearText -> mLinearText
    android.widget.LinearLayout mLineIndicator -> mLineIndicator
    android.widget.RelativeLayout[] mLinClick -> mLinClick
    android.widget.TextView[] mText -> mText
    com.qc4w.ilocker.ui.view.ViewPagerTab mTab -> mTab
    java.lang.String[] mTitles -> mTitles
    int mTabCount -> mTabCount
    int mUnselectColor -> mUnselectColor
    int mSeletedColor -> mSeletedColor
    int mNumColor -> mNumColor
    float mIndicatorHeight -> mIndicatorHeight
    float mTextSize -> mTextSize
    float mNumSize -> mNumSize
    android.support.v4.view.ViewPager mViewPager -> mViewPager
    void initTitle() -> initTitle
    void setViewPager(android.support.v4.view.ViewPager) -> setViewPager
    void onClick(android.view.View) -> onClick
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
com.qc4w.ilocker.ui.view.ViewPagerTab -> com.qc4w.ilocker.ui.view.ViewPagerTab:
    android.support.v4.view.ViewPager mViewPager -> mViewPager
    com.qc4w.ilocker.ui.view.ViewPagerTab$PageListener mPageListener -> mPageListener
    android.content.Context mContext -> mContext
    int mWidth -> mWidth
    int mHeight -> mHeight
    android.widget.Scroller mScroller -> mScroller
    int mCount -> mCount
    com.qc4w.ilocker.ui.view.ViewPagerTab$OnPageListener mOnPageListener -> mOnPageListener
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onMeasure(int,int) -> onMeasure
    void setViewPager(android.support.v4.view.ViewPager) -> setViewPager
    void computeScroll() -> computeScroll
    void setOnPageListener(com.qc4w.ilocker.ui.view.ViewPagerTab$OnPageListener) -> setOnPageListener
    int access$0(com.qc4w.ilocker.ui.view.ViewPagerTab) -> access$0
    int access$1(com.qc4w.ilocker.ui.view.ViewPagerTab) -> access$1
    com.qc4w.ilocker.ui.view.ViewPagerTab$OnPageListener access$2(com.qc4w.ilocker.ui.view.ViewPagerTab) -> access$2
com.qc4w.ilocker.ui.view.ViewPagerTab$OnPageListener -> com.qc4w.ilocker.ui.view.ViewPagerTab$OnPageListener:
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
com.qc4w.ilocker.ui.view.ViewPagerTab$PageListener -> com.qc4w.ilocker.ui.view.ViewPagerTab$PageListener:
    com.qc4w.ilocker.ui.view.ViewPagerTab this$0 -> this$0
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
com.qc4w.ilocker.util.AccessibilityUtils -> com.qc4w.ilocker.d.a:
    boolean isEnable(android.content.Context) -> a
com.qc4w.ilocker.util.AppUtils -> com.qc4w.ilocker.d.b:
    java.lang.String TAG -> a
    java.lang.Object iHardwareService -> b
    java.lang.reflect.Method setFlashEnabledMethod -> c
    void enterAccibility(com.qc4w.ilocker.ui.fragment.FragmentBase) -> a
    java.lang.String loadAppName(android.content.Context,java.lang.String) -> a
    void launchCamera(android.content.Context) -> a
    void feedback(android.content.Context) -> b
    void openMarket(android.content.Context,java.lang.String) -> b
    java.lang.Class maybeForName(java.lang.String) -> a
    java.lang.reflect.Method maybeGetMethod(java.lang.Class,java.lang.String,java.lang.Class[]) -> a
    java.lang.Object invoke$37ab4766(java.lang.reflect.Method,java.lang.Object[]) -> a
    void createLockScreenShortCut(android.content.Context) -> c
    java.util.List getAllActivityApps(android.content.Context) -> d
com.qc4w.ilocker.util.BitmapUtils -> com.qc4w.ilocker.d.c:
    android.graphics.Bitmap getBitmap(android.graphics.Bitmap,android.graphics.Bitmap,float) -> a
    android.graphics.Bitmap getBitmap(int,android.graphics.Bitmap,float) -> a
com.qc4w.ilocker.util.ContourMapper -> com.qc4w.ilocker.d.d:
    int[] contourItems -> a
    int[] contourNormals -> b
    int[] contourPresseds -> c
com.qc4w.ilocker.util.DateFormatUtils -> com.qc4w.ilocker.d.e:
    java.text.SimpleDateFormat formatter -> a
    java.lang.String getTimeString(android.content.Context,long) -> a
    long getNextDay() -> a
    long getToday() -> b
com.qc4w.ilocker.util.DrawableCache -> com.qc4w.ilocker.d.f:
    java.lang.String TAG -> a
    android.support.v4.util.LruCache mCache -> b
    com.qc4w.ilocker.util.DrawableCache instance -> c
    com.qc4w.ilocker.util.DrawableCache getInstance(android.content.Context) -> a
    void addBitmapToMemoryCache(java.lang.String,android.graphics.drawable.Drawable) -> a
    android.graphics.drawable.Drawable getBitmapFromMemCache(java.lang.String) -> a
com.qc4w.ilocker.util.DrawableCache$1 -> com.qc4w.ilocker.d.g:
    com.qc4w.ilocker.util.DrawableCache this$0 -> a
    int sizeOf(java.lang.Object,java.lang.Object) -> sizeOf
com.qc4w.ilocker.util.ImageUtils -> com.qc4w.ilocker.d.h:
    java.lang.String getDPictureImagePath(android.content.Context,int) -> a
    java.lang.String getPPictureImagePath(android.content.Context,int) -> b
    java.lang.String getLPictureImagePath(android.content.Context,int) -> c
    java.lang.String getRingImagePath(android.content.Context,int) -> d
    android.graphics.Bitmap getCPatternNormalImage(android.content.Context) -> a
    android.graphics.Bitmap getCPatternTouchedImage(android.content.Context) -> b
    android.graphics.Bitmap getLPictureImage(android.content.Context,int) -> e
    android.graphics.Bitmap getPPictureImage(android.content.Context,int) -> f
    android.graphics.Bitmap getDPictureImage(android.content.Context,int) -> g
    android.graphics.Bitmap getMaleImage(android.content.Context) -> c
    android.graphics.Bitmap getFemaleImage(android.content.Context) -> d
    android.graphics.drawable.StateListDrawable getDigitalBackspace(android.content.Context) -> e
    android.graphics.drawable.StateListDrawable getDPictureBackspace(android.content.Context) -> f
    android.graphics.drawable.StateListDrawable getHeartBackspace(android.content.Context) -> g
    android.graphics.drawable.StateListDrawable getRingBackspace(android.content.Context) -> h
    android.graphics.drawable.StateListDrawable getBackspace(android.content.Context,int) -> h
com.qc4w.ilocker.util.LockPatternUtils -> com.qc4w.ilocker.d.i:
    java.util.concurrent.atomic.AtomicBoolean sHaveNonZeroPatternFile -> a
    java.util.List stringToPattern(java.lang.String) -> a
    java.lang.String patternToString(java.util.List) -> a
com.qc4w.ilocker.util.LogUtils -> com.qc4w.ilocker.d.j:
    void e(java.lang.String,java.lang.Throwable) -> a
com.qc4w.ilocker.util.MD5Utils -> com.qc4w.ilocker.d.k:
    java.lang.String MD5(java.lang.String) -> a
com.qc4w.ilocker.util.MIUIHelper -> com.qc4w.ilocker.d.l:
    java.lang.String TAG -> a
    boolean disableWindowAlter(android.content.Context) -> a
    boolean isMiuiV5() -> a
    boolean hasAddWindowManager() -> b
    void openMiuiPermissionActivity(android.content.Context) -> b
    void openMiuiAutostartActivity(android.content.Context) -> c
    boolean isIntentAvailable(android.content.Context,android.content.Intent) -> a
com.qc4w.ilocker.util.NotificationAppLoadTask -> com.qc4w.ilocker.d.m:
    android.content.Context context -> a
    com.qc4w.ilocker.db.NotificationAppDAO dao -> b
    com.qc4w.ilocker.util.NotificationAppLoadTask$OnLoadListener listener -> c
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.qc4w.ilocker.util.NotificationAppLoadTask$OnLoadListener -> com.qc4w.ilocker.d.n:
    void onLoadCompleted(java.util.List) -> a
com.qc4w.ilocker.util.NotificationContainerUtils -> com.qc4w.ilocker.d.o:
    com.qc4w.ilocker.util.NotificationContainerUtils instance -> a
    java.util.List notifications -> b
    com.qc4w.ilocker.util.NotificationContainerUtils$OnNotificationListener listener -> c
    com.qc4w.ilocker.db.NotificationAppDAO mDAO -> d
    com.qc4w.ilocker.util.NotificationContainerUtils getInstance(android.content.Context) -> a
    java.util.List getAllNotifications() -> a
    void setListener(com.qc4w.ilocker.util.NotificationContainerUtils$OnNotificationListener) -> a
    void onNotificationReceived(com.qc4w.ilocker.domain.NotificationWrapper) -> a
    void onNotificationHandleed(com.qc4w.ilocker.domain.NotificationWrapper) -> b
    void onNotificationHandleed() -> b
com.qc4w.ilocker.util.NotificationContainerUtils$OnNotificationListener -> com.qc4w.ilocker.d.p:
    void onNotificationAdd$75ff552b() -> g
    void onNotificationRemove$75ff552b() -> h
com.qc4w.ilocker.util.NotificationUtils -> com.qc4w.ilocker.d.q:
    com.qc4w.ilocker.util.NotificationUtils instance -> a
    android.app.NotificationManager manager -> b
    android.content.Context context -> c
    com.qc4w.ilocker.config.ConfigManager config -> d
    com.qc4w.ilocker.util.NotificationUtils getInstance(android.content.Context) -> a
    void sendMainNotification() -> a
com.qc4w.ilocker.util.PackageImageLoader -> com.qc4w.ilocker.d.r:
    java.lang.String TAG -> a
    com.qc4w.ilocker.util.DrawableCache mCache -> b
    android.content.Context mContext -> c
    com.qc4w.ilocker.util.PackageImageLoader instance -> d
    android.content.pm.PackageManager mPM -> e
    android.graphics.drawable.BitmapDrawable mDefault -> f
    com.qc4w.ilocker.util.PackageImageLoader getInstance$762c4446(android.content.Context) -> a
    void display(android.widget.ImageView,java.lang.String) -> a
    android.graphics.drawable.BitmapDrawable access$0(com.qc4w.ilocker.util.PackageImageLoader) -> a
    android.content.pm.PackageManager access$1(com.qc4w.ilocker.util.PackageImageLoader) -> b
    com.qc4w.ilocker.util.DrawableCache access$2() -> a
com.qc4w.ilocker.util.PackageImageLoader$LoadIconTask -> com.qc4w.ilocker.d.s:
    android.widget.ImageView imageView -> b
    java.lang.String packageName -> c
    com.qc4w.ilocker.util.PackageImageLoader this$0 -> a
    void onPreExecute() -> onPreExecute
    android.graphics.drawable.Drawable doInBackground$3775178d() -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.qc4w.ilocker.util.UIUtils -> com.qc4w.ilocker.d.t:
    java.util.Comparator NOTIFICATION_APP_COMPARATOR -> a
    boolean hasNavBar(android.content.res.Resources) -> a
    int px2sp(android.content.Context,float) -> a
    void changeActionBarHomeUpDrawable(android.app.Activity) -> a
com.qc4w.ilocker.util.UIUtils$1 -> com.qc4w.ilocker.d.u:
    java.text.Collator sCollator -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
com.qc4w.ilocker.util.UIUtils$2 -> com.qc4w.ilocker.d.v:
com.qc4w.ilocker.util.ViewHolder -> com.qc4w.ilocker.d.w:
    android.view.View get(android.view.View,int) -> a
com.qc4w.ilocker.util.WallpaperUtils -> com.qc4w.ilocker.d.x:
    void showWallpaper(android.content.Context,android.widget.ImageView,com.qc4w.ilocker.domain.Wallpaper) -> a
com.romainpiel.shimmer.Shimmer -> com.romainpiel.shimmer.Shimmer:
    int ANIMATION_DIRECTION_LTR -> ANIMATION_DIRECTION_LTR
    int ANIMATION_DIRECTION_RTL -> ANIMATION_DIRECTION_RTL
    int DEFAULT_REPEAT_COUNT -> DEFAULT_REPEAT_COUNT
    long DEFAULT_DURATION -> DEFAULT_DURATION
    long DEFAULT_START_DELAY -> DEFAULT_START_DELAY
    int DEFAULT_DIRECTION -> DEFAULT_DIRECTION
    int repeatCount -> repeatCount
    long duration -> duration
    long startDelay -> startDelay
    int direction -> direction
    android.animation.Animator$AnimatorListener animatorListener -> animatorListener
    android.animation.ObjectAnimator animator -> animator
    int getRepeatCount() -> getRepeatCount
    com.romainpiel.shimmer.Shimmer setRepeatCount(int) -> setRepeatCount
    long getDuration() -> getDuration
    com.romainpiel.shimmer.Shimmer setDuration(long) -> setDuration
    long getStartDelay() -> getStartDelay
    com.romainpiel.shimmer.Shimmer setStartDelay(long) -> setStartDelay
    int getDirection() -> getDirection
    com.romainpiel.shimmer.Shimmer setDirection(int) -> setDirection
    android.animation.Animator$AnimatorListener getAnimatorListener() -> getAnimatorListener
    com.romainpiel.shimmer.Shimmer setAnimatorListener(android.animation.Animator$AnimatorListener) -> setAnimatorListener
    void start(android.view.View) -> start
    void cancel() -> cancel
    boolean isAnimating() -> isAnimating
    int access$0(com.romainpiel.shimmer.Shimmer) -> access$0
    void access$1(com.romainpiel.shimmer.Shimmer,android.animation.ObjectAnimator) -> access$1
    android.animation.ObjectAnimator access$2(com.romainpiel.shimmer.Shimmer) -> access$2
    int access$3(com.romainpiel.shimmer.Shimmer) -> access$3
    long access$4(com.romainpiel.shimmer.Shimmer) -> access$4
    long access$5(com.romainpiel.shimmer.Shimmer) -> access$5
    android.animation.Animator$AnimatorListener access$6(com.romainpiel.shimmer.Shimmer) -> access$6
com.romainpiel.shimmer.Shimmer$1 -> com.romainpiel.shimmer.Shimmer$1:
    com.romainpiel.shimmer.Shimmer this$0 -> this$0
    android.view.View val$shimmerView -> val$shimmerView
    void run() -> run
    com.romainpiel.shimmer.Shimmer access$0(com.romainpiel.shimmer.Shimmer$1) -> access$0
com.romainpiel.shimmer.Shimmer$1$1 -> com.romainpiel.shimmer.Shimmer$1$1:
    com.romainpiel.shimmer.Shimmer$1 this$1 -> this$1
    android.view.View val$shimmerView -> val$shimmerView
    void onAnimationStart(android.animation.Animator) -> onAnimationStart
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    void onAnimationRepeat(android.animation.Animator) -> onAnimationRepeat
com.romainpiel.shimmer.Shimmer$2 -> com.romainpiel.shimmer.Shimmer$2:
    com.romainpiel.shimmer.Shimmer this$0 -> this$0
    java.lang.Runnable val$animate -> val$animate
    void onSetupAnimation(android.view.View) -> onSetupAnimation
com.romainpiel.shimmer.ShimmerButton -> com.romainpiel.shimmer.ShimmerButton:
    com.romainpiel.shimmer.ShimmerViewHelper shimmerViewHelper -> shimmerViewHelper
    float getGradientX() -> getGradientX
    void setGradientX(float) -> setGradientX
    boolean isShimmering() -> isShimmering
    void setShimmering(boolean) -> setShimmering
    boolean isSetUp() -> isSetUp
    void setAnimationSetupCallback(com.romainpiel.shimmer.ShimmerViewHelper$AnimationSetupCallback) -> setAnimationSetupCallback
    int getPrimaryColor() -> getPrimaryColor
    void setPrimaryColor(int) -> setPrimaryColor
    int getReflectionColor() -> getReflectionColor
    void setReflectionColor(int) -> setReflectionColor
    void setTextColor(int) -> setTextColor
    void setTextColor(android.content.res.ColorStateList) -> setTextColor
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void onDraw(android.graphics.Canvas) -> onDraw
com.romainpiel.shimmer.ShimmerTextView -> com.romainpiel.shimmer.ShimmerTextView:
    com.romainpiel.shimmer.ShimmerViewHelper shimmerViewHelper -> shimmerViewHelper
    float getGradientX() -> getGradientX
    void setGradientX(float) -> setGradientX
    boolean isShimmering() -> isShimmering
    void setShimmering(boolean) -> setShimmering
    boolean isSetUp() -> isSetUp
    void setAnimationSetupCallback(com.romainpiel.shimmer.ShimmerViewHelper$AnimationSetupCallback) -> setAnimationSetupCallback
    int getPrimaryColor() -> getPrimaryColor
    void setPrimaryColor(int) -> setPrimaryColor
    int getReflectionColor() -> getReflectionColor
    void setReflectionColor(int) -> setReflectionColor
    void setTextColor(int) -> setTextColor
    void setTextColor(android.content.res.ColorStateList) -> setTextColor
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void onDraw(android.graphics.Canvas) -> onDraw
com.romainpiel.shimmer.ShimmerViewBase -> com.romainpiel.shimmer.ShimmerViewBase:
    float getGradientX() -> getGradientX
    void setGradientX(float) -> setGradientX
    boolean isShimmering() -> isShimmering
    void setShimmering(boolean) -> setShimmering
    boolean isSetUp() -> isSetUp
    void setAnimationSetupCallback(com.romainpiel.shimmer.ShimmerViewHelper$AnimationSetupCallback) -> setAnimationSetupCallback
    int getPrimaryColor() -> getPrimaryColor
    void setPrimaryColor(int) -> setPrimaryColor
    int getReflectionColor() -> getReflectionColor
    void setReflectionColor(int) -> setReflectionColor
com.romainpiel.shimmer.ShimmerViewHelper -> com.romainpiel.shimmer.ShimmerViewHelper:
    int DEFAULT_REFLECTION_COLOR -> DEFAULT_REFLECTION_COLOR
    android.view.View view -> view
    android.graphics.Paint paint -> paint
    float gradientX -> gradientX
    android.graphics.LinearGradient linearGradient -> linearGradient
    android.graphics.Matrix linearGradientMatrix -> linearGradientMatrix
    int primaryColor -> primaryColor
    int reflectionColor -> reflectionColor
    boolean isShimmering -> isShimmering
    boolean isSetUp -> isSetUp
    com.romainpiel.shimmer.ShimmerViewHelper$AnimationSetupCallback callback -> callback
    float getGradientX() -> getGradientX
    void setGradientX(float) -> setGradientX
    boolean isShimmering() -> isShimmering
    void setShimmering(boolean) -> setShimmering
    boolean isSetUp() -> isSetUp
    void setAnimationSetupCallback(com.romainpiel.shimmer.ShimmerViewHelper$AnimationSetupCallback) -> setAnimationSetupCallback
    int getPrimaryColor() -> getPrimaryColor
    void setPrimaryColor(int) -> setPrimaryColor
    int getReflectionColor() -> getReflectionColor
    void setReflectionColor(int) -> setReflectionColor
    void init(android.util.AttributeSet) -> init
    void resetLinearGradient() -> resetLinearGradient
    void onSizeChanged() -> onSizeChanged
    void onDraw() -> onDraw
com.romainpiel.shimmer.ShimmerViewHelper$AnimationSetupCallback -> com.romainpiel.shimmer.ShimmerViewHelper$AnimationSetupCallback:
    void onSetupAnimation(android.view.View) -> onSetupAnimation
com.sleepbot.datetimepicker.AccessibleTextView -> com.sleepbot.datetimepicker.AccessibleTextView:
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
com.sleepbot.datetimepicker.time.AmPmCirclesView -> com.sleepbot.datetimepicker.time.a:
    android.graphics.Paint mPaint -> a
    int mWhite -> b
    int mAmPmTextColor -> c
    int mBlue -> d
    float mCircleRadiusMultiplier -> e
    float mAmPmCircleRadiusMultiplier -> f
    java.lang.String mAmText -> g
    java.lang.String mPmText -> h
    boolean mIsInitialized -> i
    boolean mDrawValuesReady -> j
    int mAmPmCircleRadius -> k
    int mAmXCenter -> l
    int mPmXCenter -> m
    int mAmPmYCenter -> n
    int mAmOrPm -> o
    int mAmOrPmPressed -> p
    void initialize(android.content.Context,int) -> a
    void setAmOrPm(int) -> a
    void setAmOrPmPressed(int) -> b
    int getIsTouchingAmOrPm(float,float) -> a
    void onDraw(android.graphics.Canvas) -> onDraw
com.sleepbot.datetimepicker.time.CircleView -> com.sleepbot.datetimepicker.time.b:
    android.graphics.Paint mPaint -> a
    boolean mIs24HourMode -> b
    int mWhite -> c
    int mBlack -> d
    float mCircleRadiusMultiplier -> e
    float mAmPmCircleRadiusMultiplier -> f
    boolean mIsInitialized -> g
    boolean mDrawValuesReady -> h
    int mXCenter -> i
    int mYCenter -> j
    int mCircleRadius -> k
    void initialize(android.content.Context,boolean) -> a
    void onDraw(android.graphics.Canvas) -> onDraw
com.sleepbot.datetimepicker.time.RadialPickerLayout -> com.sleepbot.datetimepicker.time.RadialPickerLayout:
    int TOUCH_SLOP -> a
    int TAP_TIMEOUT -> b
    android.os.Vibrator mVibrator -> c
    boolean mVibrate -> d
    long mLastVibrate -> e
    int mLastValueSelected -> f
    com.sleepbot.datetimepicker.time.RadialPickerLayout$OnValueSelectedListener mListener -> g
    boolean mTimeInitialized -> h
    int mCurrentHoursOfDay -> i
    int mCurrentMinutes -> j
    boolean mIs24HourMode -> k
    boolean mHideAmPm -> l
    int mCurrentItemShowing -> m
    com.sleepbot.datetimepicker.time.CircleView mCircleView -> n
    com.sleepbot.datetimepicker.time.AmPmCirclesView mAmPmCirclesView -> o
    com.sleepbot.datetimepicker.time.RadialTextsView mHourRadialTextsView -> p
    com.sleepbot.datetimepicker.time.RadialTextsView mMinuteRadialTextsView -> q
    com.sleepbot.datetimepicker.time.RadialSelectorView mHourRadialSelectorView -> r
    com.sleepbot.datetimepicker.time.RadialSelectorView mMinuteRadialSelectorView -> s
    android.view.View mGrayBox -> t
    int[] mSnapPrefer30sMap -> u
    boolean mInputEnabled -> v
    int mIsTouchingAmOrPm -> w
    boolean mDoingMove -> x
    boolean mDoingTouch -> y
    int mDownDegrees -> z
    float mDownX -> A
    float mDownY -> B
    android.view.accessibility.AccessibilityManager mAccessibilityManager -> C
    com.nineoldandroids.animation.AnimatorSet mTransition -> D
    android.os.Handler mHandler -> E
    void onMeasure(int,int) -> onMeasure
    void setOnValueSelectedListener(com.sleepbot.datetimepicker.time.RadialPickerLayout$OnValueSelectedListener) -> a
    void initialize(android.content.Context,int,int,boolean,boolean) -> a
    void setTime(int,int) -> a
    void setItem(int,int) -> b
    boolean isHourInnerCircle(int) -> b
    int getHours() -> a
    int getMinutes() -> b
    int getIsCurrentlyAmOrPm() -> c
    void setValueForItem(int,int) -> c
    void setAmOrPm(int) -> a
    void preparePrefer30sMap() -> f
    int snapOnly30s(int,int) -> d
    int reselectSelector(int,boolean,boolean,boolean) -> a
    int getDegreesFromCoords(float,float,boolean,java.lang.Boolean[]) -> a
    int getCurrentItemShowing() -> d
    void setCurrentItemShowing(int,boolean) -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    void tryVibrate() -> e
    boolean trySettingInputEnabled(boolean) -> a
    void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    boolean performAccessibilityAction(int,android.os.Bundle) -> performAccessibilityAction
    com.sleepbot.datetimepicker.time.AmPmCirclesView access$0(com.sleepbot.datetimepicker.time.RadialPickerLayout) -> a
    int access$1(com.sleepbot.datetimepicker.time.RadialPickerLayout) -> b
    void access$2$35593bac(com.sleepbot.datetimepicker.time.RadialPickerLayout) -> c
    int access$3(com.sleepbot.datetimepicker.time.RadialPickerLayout) -> d
    int access$4$20da5a8c(com.sleepbot.datetimepicker.time.RadialPickerLayout,int,boolean) -> a
    void access$5(com.sleepbot.datetimepicker.time.RadialPickerLayout,int) -> a
    com.sleepbot.datetimepicker.time.RadialPickerLayout$OnValueSelectedListener access$6(com.sleepbot.datetimepicker.time.RadialPickerLayout) -> e
com.sleepbot.datetimepicker.time.RadialPickerLayout$1 -> com.sleepbot.datetimepicker.time.c:
    com.sleepbot.datetimepicker.time.RadialPickerLayout this$0 -> a
    void run() -> run
com.sleepbot.datetimepicker.time.RadialPickerLayout$2 -> com.sleepbot.datetimepicker.time.d:
    com.sleepbot.datetimepicker.time.RadialPickerLayout this$0 -> a
    java.lang.Boolean[] val$isInnerCircle -> b
    void run() -> run
com.sleepbot.datetimepicker.time.RadialPickerLayout$OnValueSelectedListener -> com.sleepbot.datetimepicker.time.e:
    void onValueSelected(int,int,boolean) -> a
com.sleepbot.datetimepicker.time.RadialSelectorView -> com.sleepbot.datetimepicker.time.f:
    android.graphics.Paint mPaint -> a
    boolean mIsInitialized -> b
    boolean mDrawValuesReady -> c
    float mCircleRadiusMultiplier -> d
    float mAmPmCircleRadiusMultiplier -> e
    float mInnerNumbersRadiusMultiplier -> f
    float mOuterNumbersRadiusMultiplier -> g
    float mNumbersRadiusMultiplier -> h
    float mSelectionRadiusMultiplier -> i
    float mAnimationRadiusMultiplier -> j
    boolean mIs24HourMode -> k
    boolean mHasInnerCircle -> l
    int mXCenter -> m
    int mYCenter -> n
    int mCircleRadius -> o
    float mTransitionMidRadiusMultiplier -> p
    float mTransitionEndRadiusMultiplier -> q
    int mLineLength -> r
    int mSelectionRadius -> s
    com.sleepbot.datetimepicker.time.RadialSelectorView$InvalidateUpdateListener mInvalidateUpdateListener -> t
    int mSelectionDegrees -> u
    double mSelectionRadians -> v
    boolean mForceDrawDot -> w
    void initialize(android.content.Context,boolean,boolean,boolean,int,boolean) -> a
    void setSelection(int,boolean,boolean) -> a
    boolean hasOverlappingRendering() -> hasOverlappingRendering
    int getDegreesFromCoords(float,float,boolean,java.lang.Boolean[]) -> a
    void onDraw(android.graphics.Canvas) -> onDraw
    com.nineoldandroids.animation.ObjectAnimator getDisappearAnimator() -> a
    com.nineoldandroids.animation.ObjectAnimator getReappearAnimator() -> b
com.sleepbot.datetimepicker.time.RadialSelectorView$InvalidateUpdateListener -> com.sleepbot.datetimepicker.time.g:
    com.sleepbot.datetimepicker.time.RadialSelectorView this$0 -> a
    void onAnimationUpdate(com.nineoldandroids.animation.ValueAnimator) -> onAnimationUpdate
com.sleepbot.datetimepicker.time.RadialTextsView -> com.sleepbot.datetimepicker.time.h:
    android.graphics.Paint mPaint -> c
    boolean mDrawValuesReady -> d
    boolean mIsInitialized -> e
    android.graphics.Typeface mTypefaceLight -> f
    android.graphics.Typeface mTypefaceRegular -> g
    java.lang.String[] mTexts -> h
    java.lang.String[] mInnerTexts -> i
    boolean mIs24HourMode -> j
    boolean mHasInnerCircle -> k
    float mCircleRadiusMultiplier -> l
    float mAmPmCircleRadiusMultiplier -> m
    float mNumbersRadiusMultiplier -> n
    float mInnerNumbersRadiusMultiplier -> o
    float mTextSizeMultiplier -> p
    float mInnerTextSizeMultiplier -> q
    int mXCenter -> r
    int mYCenter -> s
    float mCircleRadius -> t
    boolean mTextGridValuesDirty -> u
    float mTextSize -> v
    float mInnerTextSize -> w
    float[] mTextGridHeights -> x
    float[] mTextGridWidths -> y
    float[] mInnerTextGridHeights -> z
    float[] mInnerTextGridWidths -> A
    float mAnimationRadiusMultiplier -> B
    float mTransitionMidRadiusMultiplier -> C
    float mTransitionEndRadiusMultiplier -> D
    com.nineoldandroids.animation.ObjectAnimator mDisappearAnimator -> a
    com.nineoldandroids.animation.ObjectAnimator mReappearAnimator -> b
    com.sleepbot.datetimepicker.time.RadialTextsView$InvalidateUpdateListener mInvalidateUpdateListener -> E
    void initialize(android.content.res.Resources,java.lang.String[],java.lang.String[],boolean,boolean) -> a
    boolean hasOverlappingRendering() -> hasOverlappingRendering
    void onDraw(android.graphics.Canvas) -> onDraw
    void calculateGridSizes(float,float,float,float,float[],float[]) -> a
    void drawTexts(android.graphics.Canvas,float,android.graphics.Typeface,java.lang.String[],float[],float[]) -> a
    com.nineoldandroids.animation.ObjectAnimator getDisappearAnimator() -> a
    com.nineoldandroids.animation.ObjectAnimator getReappearAnimator() -> b
com.sleepbot.datetimepicker.time.RadialTextsView$InvalidateUpdateListener -> com.sleepbot.datetimepicker.time.i:
    com.sleepbot.datetimepicker.time.RadialTextsView this$0 -> a
    void onAnimationUpdate(com.nineoldandroids.animation.ValueAnimator) -> onAnimationUpdate
com.sleepbot.datetimepicker.time.TimePickerDialog -> com.sleepbot.datetimepicker.time.j:
    com.sleepbot.datetimepicker.time.TimePickerDialog$OnTimeSetListener mCallback -> a
    android.widget.TextView mDoneButton -> b
    android.widget.TextView mHourView -> c
    android.widget.TextView mHourSpaceView -> d
    android.widget.TextView mMinuteView -> e
    android.widget.TextView mMinuteSpaceView -> f
    android.widget.TextView mAmPmTextView -> g
    android.view.View mAmPmHitspace -> h
    com.sleepbot.datetimepicker.time.RadialPickerLayout mTimePicker -> i
    int mBlue -> j
    int mBlack -> k
    java.lang.String mAmText -> l
    java.lang.String mPmText -> m
    boolean mAllowAutoAdvance -> n
    int mInitialHourOfDay -> o
    int mInitialMinute -> p
    boolean mIs24HourMode -> q
    char mPlaceholderText -> r
    java.lang.String mDoublePlaceholderText -> s
    java.lang.String mDeletedKeyFormat -> t
    boolean mInKbMode -> u
    java.util.ArrayList mTypedTimes -> v
    com.sleepbot.datetimepicker.time.TimePickerDialog$Node mLegalTimesTree -> w
    int mAmKeyCode -> x
    int mPmKeyCode -> y
    java.lang.String mHourPickerDescription -> z
    java.lang.String mSelectHours -> A
    java.lang.String mMinutePickerDescription -> B
    java.lang.String mSelectMinutes -> C
    boolean mVibrate -> D
    boolean mCloseOnSingleTapMinute -> E
    com.sleepbot.datetimepicker.time.TimePickerDialog newInstance$6e0bd8e9(com.sleepbot.datetimepicker.time.TimePickerDialog$OnTimeSetListener,int,int) -> a
    void setCloseOnSingleTapMinute$1385ff() -> a
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onDoneButtonClick() -> b
    void updateAmPmDisplay(int) -> a
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onValueSelected(int,int,boolean) -> a
    void setHour(int,boolean) -> a
    void setMinute(int) -> b
    void setCurrentItemShowing(int,boolean,boolean,boolean) -> a
    void tryStartingKbMode(int) -> c
    boolean addKeyIfLegal(int) -> d
    boolean isTypedTimeFullyLegal() -> c
    int deleteLastTypedKey() -> d
    void finishKbMode(boolean) -> a
    void updateDisplay(boolean) -> b
    int getValFromKeyCode(int) -> e
    int[] getEnteredTime(java.lang.Boolean[]) -> a
    int getAmOrPmKeyCode(int) -> f
    boolean access$0(com.sleepbot.datetimepicker.time.TimePickerDialog,int) -> a
    void access$1$1ff6d10d(com.sleepbot.datetimepicker.time.TimePickerDialog,int) -> b
    com.sleepbot.datetimepicker.time.RadialPickerLayout access$2(com.sleepbot.datetimepicker.time.TimePickerDialog) -> a
    void access$3(com.sleepbot.datetimepicker.time.TimePickerDialog) -> b
    void access$4(com.sleepbot.datetimepicker.time.TimePickerDialog,int) -> c
com.sleepbot.datetimepicker.time.TimePickerDialog$1 -> com.sleepbot.datetimepicker.time.k:
    java.util.Locale locale -> b
    com.sleepbot.datetimepicker.time.TimePickerDialog this$0 -> a
    java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View) -> getTransformation
    void onFocusChanged(android.view.View,java.lang.CharSequence,boolean,int,android.graphics.Rect) -> onFocusChanged
com.sleepbot.datetimepicker.time.TimePickerDialog$2 -> com.sleepbot.datetimepicker.time.l:
    com.sleepbot.datetimepicker.time.TimePickerDialog this$0 -> a
    void onClick(android.view.View) -> onClick
com.sleepbot.datetimepicker.time.TimePickerDialog$3 -> com.sleepbot.datetimepicker.time.m:
    com.sleepbot.datetimepicker.time.TimePickerDialog this$0 -> a
    void onClick(android.view.View) -> onClick
com.sleepbot.datetimepicker.time.TimePickerDialog$4 -> com.sleepbot.datetimepicker.time.n:
    com.sleepbot.datetimepicker.time.TimePickerDialog this$0 -> a
    void onClick(android.view.View) -> onClick
com.sleepbot.datetimepicker.time.TimePickerDialog$5 -> com.sleepbot.datetimepicker.time.o:
    com.sleepbot.datetimepicker.time.TimePickerDialog this$0 -> a
    void onClick(android.view.View) -> onClick
com.sleepbot.datetimepicker.time.TimePickerDialog$KeyboardListener -> com.sleepbot.datetimepicker.time.p:
    com.sleepbot.datetimepicker.time.TimePickerDialog this$0 -> a
    boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
com.sleepbot.datetimepicker.time.TimePickerDialog$Node -> com.sleepbot.datetimepicker.time.q:
    int[] mLegalKeys -> b
    java.util.ArrayList mChildren -> c
    com.sleepbot.datetimepicker.time.TimePickerDialog this$0 -> a
    void addChild(com.sleepbot.datetimepicker.time.TimePickerDialog$Node) -> a
    com.sleepbot.datetimepicker.time.TimePickerDialog$Node canReach(int) -> a
com.sleepbot.datetimepicker.time.TimePickerDialog$OnTimeSetListener -> com.sleepbot.datetimepicker.time.r:
    void onTimeSet$75c6f288(int,int) -> a
com.soundcloud.android.crop.Crop -> com.soundcloud.android.crop.a:
    android.content.Intent cropIntent -> a
    com.soundcloud.android.crop.Crop output(android.net.Uri) -> a
    com.soundcloud.android.crop.Crop withAspect(int,int) -> a
    android.content.Intent getIntent(android.content.Context) -> a
com.soundcloud.android.crop.CropImageActivity -> com.soundcloud.android.crop.CropImageActivity:
    boolean IN_MEMORY_CROP -> a
    android.os.Handler handler -> b
    int aspectX -> c
    int aspectY -> d
    int maxX -> e
    int maxY -> f
    int exifRotation -> g
    android.net.Uri sourceUri -> h
    android.net.Uri saveUri -> i
    boolean isSaving -> j
    int sampleSize -> k
    com.soundcloud.android.crop.RotateBitmap rotateBitmap -> l
    com.soundcloud.android.crop.CropImageView imageView -> m
    com.soundcloud.android.crop.HighlightView cropView -> n
    int rotateAngle -> o
    void onCreate(android.os.Bundle) -> onCreate
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    int calculateBitmapSampleSize(android.net.Uri) -> a
    void startCrop() -> b
    android.graphics.Bitmap rotate(android.graphics.Bitmap,int) -> a
    android.graphics.Bitmap decodeRegionCrop(android.graphics.Rect,int,int) -> a
    android.graphics.Bitmap inMemoryCrop(com.soundcloud.android.crop.RotateBitmap,android.graphics.Rect,int,int) -> a
    void clearImageView() -> c
    void onDestroy() -> onDestroy
    boolean onSearchRequested() -> onSearchRequested
    boolean isSaving() -> a
    void setResultException(java.lang.Throwable) -> a
    void onClick(android.view.View) -> onClick
    void removeLifeCycleListener(com.soundcloud.android.crop.MonitoredActivity$LifeCycleListener) -> a
    void addLifeCycleListener(com.soundcloud.android.crop.MonitoredActivity$LifeCycleListener) -> b
    com.soundcloud.android.crop.RotateBitmap access$2(com.soundcloud.android.crop.CropImageActivity) -> a
    com.soundcloud.android.crop.CropImageView access$3(com.soundcloud.android.crop.CropImageActivity) -> b
    int access$4(com.soundcloud.android.crop.CropImageActivity) -> c
    int access$5(com.soundcloud.android.crop.CropImageActivity) -> d
    android.os.Handler access$6(com.soundcloud.android.crop.CropImageActivity) -> e
    void access$7(com.soundcloud.android.crop.CropImageActivity,com.soundcloud.android.crop.HighlightView) -> a
    com.soundcloud.android.crop.HighlightView access$8(com.soundcloud.android.crop.CropImageActivity) -> f
    void access$9(com.soundcloud.android.crop.CropImageActivity) -> g
    void access$10(com.soundcloud.android.crop.CropImageActivity,android.graphics.Bitmap) -> a
com.soundcloud.android.crop.CropImageActivity$1 -> com.soundcloud.android.crop.b:
    com.soundcloud.android.crop.CropImageActivity this$0 -> a
    void recycle(android.graphics.Bitmap) -> a
com.soundcloud.android.crop.CropImageActivity$2 -> com.soundcloud.android.crop.c:
    com.soundcloud.android.crop.CropImageActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.soundcloud.android.crop.CropImageActivity$3 -> com.soundcloud.android.crop.d:
    com.soundcloud.android.crop.CropImageActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.soundcloud.android.crop.CropImageActivity$4 -> com.soundcloud.android.crop.e:
    com.soundcloud.android.crop.CropImageActivity this$0 -> a
    void run() -> run
com.soundcloud.android.crop.CropImageActivity$4$1 -> com.soundcloud.android.crop.f:
    com.soundcloud.android.crop.CropImageActivity$4 this$1 -> a
    java.util.concurrent.CountDownLatch val$latch -> b
    void run() -> run
com.soundcloud.android.crop.CropImageActivity$5 -> com.soundcloud.android.crop.g:
    com.soundcloud.android.crop.CropImageActivity this$0 -> a
    android.graphics.Bitmap val$b -> b
    void run() -> run
com.soundcloud.android.crop.CropImageActivity$6 -> com.soundcloud.android.crop.h:
    com.soundcloud.android.crop.CropImageActivity this$0 -> a
    android.graphics.Bitmap val$b -> b
    void run() -> run
com.soundcloud.android.crop.CropImageActivity$Cropper -> com.soundcloud.android.crop.i:
    com.soundcloud.android.crop.CropImageActivity this$0 -> a
com.soundcloud.android.crop.CropImageActivity$Cropper$1 -> com.soundcloud.android.crop.j:
    com.soundcloud.android.crop.CropImageActivity$Cropper this$1 -> a
    void run() -> run
com.soundcloud.android.crop.CropImageView -> com.soundcloud.android.crop.CropImageView:
    java.util.ArrayList highlightViews -> a
    com.soundcloud.android.crop.HighlightView motionHighlightView -> b
    android.content.Context context -> c
    float lastX -> k
    float lastY -> l
    int motionEdge -> m
    void onLayout(boolean,int,int,int,int) -> onLayout
    void zoomTo(float,float,float) -> a
    void postTranslate(float,float) -> a
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void ensureVisible(com.soundcloud.android.crop.HighlightView) -> b
    void centerBasedOnHighlightView(com.soundcloud.android.crop.HighlightView) -> c
    void onDraw(android.graphics.Canvas) -> onDraw
    void add(com.soundcloud.android.crop.HighlightView) -> a
    void removeAllHv() -> a
    void clear() -> b
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    android.graphics.Matrix getUnrotatedMatrix() -> c
    void setRecycler(com.soundcloud.android.crop.ImageViewTouchBase$Recycler) -> a
    void setImageBitmap(android.graphics.Bitmap) -> setImageBitmap
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void setImageBitmapResetBase(android.graphics.Bitmap,boolean) -> a
    void setImageRotateBitmapResetBase(com.soundcloud.android.crop.RotateBitmap,boolean) -> a
com.soundcloud.android.crop.CropUtil -> com.soundcloud.android.crop.k:
    void closeSilently(java.io.Closeable) -> a
    boolean copyExifRotation(java.io.File,java.io.File) -> a
    java.io.File getFromMediaUri(android.content.Context,android.content.ContentResolver,android.net.Uri) -> a
    java.io.File getFromMediaUriPfd(android.content.Context,android.content.ContentResolver,android.net.Uri) -> b
    void startBackgroundJob$44d8bbd6(com.soundcloud.android.crop.MonitoredActivity,java.lang.String,java.lang.Runnable,android.os.Handler) -> a
com.soundcloud.android.crop.CropUtil$BackgroundJob -> com.soundcloud.android.crop.l:
    com.soundcloud.android.crop.MonitoredActivity activity -> a
    android.app.ProgressDialog dialog -> b
    java.lang.Runnable job -> c
    android.os.Handler handler -> d
    java.lang.Runnable cleanupRunner -> e
    void run() -> run
    void onActivityDestroyed$18452068() -> a
    void onActivityStopped$18452068() -> b
    void onActivityStarted$18452068() -> c
    com.soundcloud.android.crop.MonitoredActivity access$0(com.soundcloud.android.crop.CropUtil$BackgroundJob) -> a
    android.app.ProgressDialog access$1(com.soundcloud.android.crop.CropUtil$BackgroundJob) -> b
com.soundcloud.android.crop.CropUtil$BackgroundJob$1 -> com.soundcloud.android.crop.m:
    com.soundcloud.android.crop.CropUtil$BackgroundJob this$1 -> a
    void run() -> run
com.soundcloud.android.crop.HighlightView -> com.soundcloud.android.crop.n:
    android.graphics.RectF cropRect -> a
    android.graphics.Rect drawRect -> b
    android.graphics.Matrix matrix -> c
    android.graphics.RectF imageRect -> d
    android.graphics.Paint outsidePaint -> e
    android.graphics.Paint outlinePaint -> f
    android.graphics.Paint handlePaint -> g
    android.view.View viewContext -> h
    boolean showThirds -> i
    int highlightColor -> j
    com.soundcloud.android.crop.HighlightView$ModifyMode modifyMode -> k
    com.soundcloud.android.crop.HighlightView$HandleMode handleMode -> l
    boolean maintainAspectRatio -> m
    float initialAspectRatio -> n
    float handleRadius -> o
    float outlineWidth -> p
    boolean isFocused -> q
    void setup(android.graphics.Matrix,android.graphics.Rect,android.graphics.RectF,boolean) -> a
    float dpToPx(float) -> a
    void draw(android.graphics.Canvas) -> a
    void setMode(com.soundcloud.android.crop.HighlightView$ModifyMode) -> a
    int getHit(float,float) -> a
    void handleMotion(int,float,float) -> a
    android.graphics.Rect computeLayout() -> d
    void invalidate() -> a
    boolean hasFocus() -> b
    void setFocus$1385ff() -> c
com.soundcloud.android.crop.HighlightView$HandleMode -> com.soundcloud.android.crop.o:
    com.soundcloud.android.crop.HighlightView$HandleMode Changing -> a
    com.soundcloud.android.crop.HighlightView$HandleMode Always -> b
    com.soundcloud.android.crop.HighlightView$HandleMode Never -> c
    com.soundcloud.android.crop.HighlightView$HandleMode[] ENUM$VALUES -> d
    com.soundcloud.android.crop.HighlightView$HandleMode[] values() -> values
    com.soundcloud.android.crop.HighlightView$HandleMode valueOf(java.lang.String) -> valueOf
com.soundcloud.android.crop.HighlightView$ModifyMode -> com.soundcloud.android.crop.p:
    com.soundcloud.android.crop.HighlightView$ModifyMode None -> a
    com.soundcloud.android.crop.HighlightView$ModifyMode Move -> b
    com.soundcloud.android.crop.HighlightView$ModifyMode Grow -> c
    com.soundcloud.android.crop.HighlightView$ModifyMode[] ENUM$VALUES -> d
    com.soundcloud.android.crop.HighlightView$ModifyMode[] values() -> values
    com.soundcloud.android.crop.HighlightView$ModifyMode valueOf(java.lang.String) -> valueOf
com.soundcloud.android.crop.ImageViewTouchBase -> com.soundcloud.android.crop.ImageViewTouchBase:
    android.graphics.Matrix baseMatrix -> d
    android.graphics.Matrix suppMatrix -> e
    android.graphics.Matrix displayMatrix -> a
    float[] matrixValues -> b
    com.soundcloud.android.crop.RotateBitmap bitmapDisplayed -> f
    int thisWidth -> g
    int thisHeight -> h
    float maxZoom -> i
    java.lang.Runnable onLayoutRunnable -> c
    android.os.Handler handler -> j
    com.soundcloud.android.crop.ImageViewTouchBase$Recycler recycler -> k
    void setRecycler(com.soundcloud.android.crop.ImageViewTouchBase$Recycler) -> a
    void onLayout(boolean,int,int,int,int) -> onLayout
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void setImageBitmap(android.graphics.Bitmap) -> setImageBitmap
    void setImageBitmap(android.graphics.Bitmap,int) -> a
    void clear() -> b
    void setImageBitmapResetBase(android.graphics.Bitmap,boolean) -> a
    void setImageRotateBitmapResetBase(com.soundcloud.android.crop.RotateBitmap,boolean) -> a
    void center$25decb5() -> d
    float getScale() -> e
    void getProperBaseMatrix(com.soundcloud.android.crop.RotateBitmap,android.graphics.Matrix,boolean) -> a
    android.graphics.Matrix getImageViewMatrix() -> a
    android.graphics.Matrix getUnrotatedMatrix() -> c
    void zoomTo(float,float,float) -> a
    void zoomTo$4098370b(float,float,float) -> b
    void postTranslate(float,float) -> a
    void panBy(float,float) -> b
com.soundcloud.android.crop.ImageViewTouchBase$1 -> com.soundcloud.android.crop.q:
    com.soundcloud.android.crop.ImageViewTouchBase this$0 -> a
    com.soundcloud.android.crop.RotateBitmap val$bitmap -> b
    boolean val$resetSupp -> c
    void run() -> run
com.soundcloud.android.crop.ImageViewTouchBase$2 -> com.soundcloud.android.crop.r:
    com.soundcloud.android.crop.ImageViewTouchBase this$0 -> a
    float val$durationMs -> b
    long val$startTime -> c
    float val$oldScale -> d
    float val$incrementPerMs -> e
    float val$centerX -> f
    float val$centerY -> g
    void run() -> run
com.soundcloud.android.crop.ImageViewTouchBase$Recycler -> com.soundcloud.android.crop.s:
    void recycle(android.graphics.Bitmap) -> a
com.soundcloud.android.crop.MonitoredActivity -> com.soundcloud.android.crop.t:
    java.util.ArrayList listeners -> a
    void addLifeCycleListener(com.soundcloud.android.crop.MonitoredActivity$LifeCycleListener) -> b
    void removeLifeCycleListener(com.soundcloud.android.crop.MonitoredActivity$LifeCycleListener) -> a
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroy() -> onDestroy
    void onStart() -> onStart
    void onStop() -> onStop
com.soundcloud.android.crop.MonitoredActivity$LifeCycleAdapter -> com.soundcloud.android.crop.u:
    void onActivityDestroyed$18452068() -> a
    void onActivityStarted$18452068() -> c
    void onActivityStopped$18452068() -> b
com.soundcloud.android.crop.MonitoredActivity$LifeCycleListener -> com.soundcloud.android.crop.v:
    void onActivityDestroyed$18452068() -> a
    void onActivityStarted$18452068() -> c
    void onActivityStopped$18452068() -> b
com.soundcloud.android.crop.RotateBitmap -> com.soundcloud.android.crop.w:
    android.graphics.Bitmap bitmap -> a
    int rotation -> b
    void setRotation(int) -> a
    int getRotation() -> a
    android.graphics.Bitmap getBitmap() -> b
    void setBitmap(android.graphics.Bitmap) -> a
    android.graphics.Matrix getRotateMatrix() -> c
    boolean isOrientationChanged() -> g
    int getHeight() -> d
    int getWidth() -> e
    void recycle() -> f
com.squareup.picasso.Action -> com.c.a.a:
    com.squareup.picasso.Picasso picasso -> a
    com.squareup.picasso.Request request -> b
    java.lang.ref.WeakReference target -> c
    boolean skipCache -> d
    boolean noFade -> e
    int errorResId -> f
    android.graphics.drawable.Drawable errorDrawable -> g
    java.lang.String key -> h
    java.lang.Object tag -> i
    boolean willReplay -> j
    boolean cancelled -> k
    void complete(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom) -> a
    void error() -> a
    void cancel() -> b
    java.lang.Object getTarget() -> c
com.squareup.picasso.Action$RequestWeakReference -> com.c.a.b:
    com.squareup.picasso.Action action -> a
com.squareup.picasso.AssetRequestHandler -> com.c.a.c:
    int ASSET_PREFIX_LENGTH -> a
    android.content.res.AssetManager assetManager -> b
    boolean canHandleRequest(com.squareup.picasso.Request) -> a
    com.squareup.picasso.RequestHandler$Result load(com.squareup.picasso.Request) -> b
    android.graphics.Bitmap decodeAsset(com.squareup.picasso.Request,java.lang.String) -> a
com.squareup.picasso.BitmapHunter -> com.c.a.d:
    java.lang.Object DECODE_LOCK -> s
    java.lang.ThreadLocal NAME_BUILDER -> t
    java.util.concurrent.atomic.AtomicInteger SEQUENCE_GENERATOR -> u
    com.squareup.picasso.RequestHandler ERRORING_HANDLER -> v
    int sequence -> a
    com.squareup.picasso.Picasso picasso -> b
    com.squareup.picasso.Dispatcher dispatcher -> c
    com.squareup.picasso.Cache cache -> d
    com.squareup.picasso.Stats stats -> e
    java.lang.String key -> f
    com.squareup.picasso.Request data -> g
    boolean skipMemoryCache -> h
    com.squareup.picasso.RequestHandler requestHandler -> i
    com.squareup.picasso.Action action -> j
    java.util.List actions -> k
    android.graphics.Bitmap result -> l
    java.util.concurrent.Future future -> m
    com.squareup.picasso.Picasso$LoadedFrom loadedFrom -> n
    java.lang.Exception exception -> o
    int exifRotation -> p
    int retryCount -> q
    com.squareup.picasso.Picasso$Priority priority -> r
    void run() -> run
    android.graphics.Bitmap hunt() -> n
    void attach(com.squareup.picasso.Action) -> a
    void detach(com.squareup.picasso.Action) -> b
    boolean cancel() -> a
    boolean isCancelled() -> b
    boolean shouldSkipMemoryCache() -> c
    boolean shouldRetry$552f0f64(android.net.NetworkInfo) -> a
    boolean supportsReplay() -> d
    android.graphics.Bitmap getResult() -> e
    java.lang.String getKey() -> f
    com.squareup.picasso.Request getData() -> g
    com.squareup.picasso.Action getAction() -> h
    com.squareup.picasso.Picasso getPicasso() -> i
    java.util.List getActions() -> j
    java.lang.Exception getException() -> k
    com.squareup.picasso.Picasso$LoadedFrom getLoadedFrom() -> l
    com.squareup.picasso.Picasso$Priority getPriority() -> m
    com.squareup.picasso.BitmapHunter forRequest(com.squareup.picasso.Picasso,com.squareup.picasso.Dispatcher,com.squareup.picasso.Cache,com.squareup.picasso.Stats,com.squareup.picasso.Action) -> a
    android.graphics.Bitmap applyCustomTransformations(java.util.List,android.graphics.Bitmap) -> a
com.squareup.picasso.BitmapHunter$1 -> com.c.a.e:
    java.lang.Object initialValue() -> initialValue
com.squareup.picasso.BitmapHunter$2 -> com.c.a.f:
    boolean canHandleRequest(com.squareup.picasso.Request) -> a
    com.squareup.picasso.RequestHandler$Result load(com.squareup.picasso.Request) -> b
com.squareup.picasso.BitmapHunter$3 -> com.c.a.g:
    com.squareup.picasso.Transformation val$transformation -> a
    java.lang.RuntimeException val$e -> b
    void run() -> run
com.squareup.picasso.BitmapHunter$4 -> com.c.a.h:
    java.lang.StringBuilder val$builder -> a
    void run() -> run
com.squareup.picasso.BitmapHunter$5 -> com.c.a.i:
    com.squareup.picasso.Transformation val$transformation -> a
    void run() -> run
com.squareup.picasso.BitmapHunter$6 -> com.c.a.j:
    com.squareup.picasso.Transformation val$transformation -> a
    void run() -> run
com.squareup.picasso.Cache -> com.c.a.k:
    com.squareup.picasso.Cache NONE -> a
    android.graphics.Bitmap get(java.lang.String) -> a
    void set(java.lang.String,android.graphics.Bitmap) -> a
    int size() -> a
    int maxSize() -> b
com.squareup.picasso.Cache$1 -> com.c.a.l:
    android.graphics.Bitmap get(java.lang.String) -> a
    void set(java.lang.String,android.graphics.Bitmap) -> a
    int size() -> a
    int maxSize() -> b
com.squareup.picasso.Callback -> com.c.a.m:
com.squareup.picasso.ContactsPhotoRequestHandler -> com.c.a.n:
    android.content.UriMatcher matcher -> b
    android.content.Context context -> a
    boolean canHandleRequest(com.squareup.picasso.Request) -> a
    com.squareup.picasso.RequestHandler$Result load(com.squareup.picasso.Request) -> b
    java.io.InputStream getInputStream(com.squareup.picasso.Request) -> c
    android.graphics.Bitmap decodeStream(java.io.InputStream,com.squareup.picasso.Request) -> a
com.squareup.picasso.ContentStreamRequestHandler -> com.c.a.o:
    android.content.Context context -> a
    boolean canHandleRequest(com.squareup.picasso.Request) -> a
    com.squareup.picasso.RequestHandler$Result load(com.squareup.picasso.Request) -> b
    android.graphics.Bitmap decodeContentStream(com.squareup.picasso.Request) -> c
com.squareup.picasso.DeferredRequestCreator -> com.c.a.p:
    com.squareup.picasso.RequestCreator creator -> a
    java.lang.ref.WeakReference target -> b
    com.squareup.picasso.Callback callback -> c
    boolean onPreDraw() -> onPreDraw
    void cancel() -> a
com.squareup.picasso.Dispatcher -> com.c.a.q:
    com.squareup.picasso.Dispatcher$DispatcherThread dispatcherThread -> a
    android.content.Context context -> b
    java.util.concurrent.ExecutorService service -> c
    com.squareup.picasso.Downloader downloader -> d
    java.util.Map hunterMap -> e
    java.util.Map failedActions -> f
    java.util.Map pausedActions -> g
    java.util.Set pausedTags -> h
    android.os.Handler handler -> i
    android.os.Handler mainThreadHandler -> j
    com.squareup.picasso.Cache cache -> k
    com.squareup.picasso.Stats stats -> l
    java.util.List batch -> m
    com.squareup.picasso.Dispatcher$NetworkBroadcastReceiver receiver -> n
    boolean scansNetworkChanges -> o
    boolean airplaneMode -> p
    void dispatchFailed(com.squareup.picasso.BitmapHunter) -> a
    void performSubmit(com.squareup.picasso.Action,boolean) -> a
    void performResumeTag(java.lang.Object) -> a
    void performRetry(com.squareup.picasso.BitmapHunter) -> b
    void performComplete(com.squareup.picasso.BitmapHunter) -> c
    void performBatchComplete() -> a
    void performError(com.squareup.picasso.BitmapHunter,boolean) -> a
    void performNetworkStateChange(android.net.NetworkInfo) -> a
    void markForReplay(com.squareup.picasso.BitmapHunter) -> d
    void markForReplay(com.squareup.picasso.Action) -> a
    void batch(com.squareup.picasso.BitmapHunter) -> e
    void logBatch(java.util.List) -> a
com.squareup.picasso.Dispatcher$DispatcherHandler -> com.c.a.r:
    com.squareup.picasso.Dispatcher dispatcher -> a
    void handleMessage(android.os.Message) -> handleMessage
com.squareup.picasso.Dispatcher$DispatcherHandler$1 -> com.c.a.s:
    android.os.Message val$msg -> a
    com.squareup.picasso.Dispatcher$DispatcherHandler this$0 -> b
    void run() -> run
com.squareup.picasso.Dispatcher$DispatcherThread -> com.c.a.t:
com.squareup.picasso.Dispatcher$NetworkBroadcastReceiver -> com.c.a.u:
    com.squareup.picasso.Dispatcher dispatcher -> a
    void register() -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.squareup.picasso.Downloader -> com.c.a.v:
    com.squareup.picasso.Downloader$Response load(android.net.Uri,boolean) -> a
com.squareup.picasso.Downloader$Response -> com.c.a.w:
    java.io.InputStream stream -> a
    android.graphics.Bitmap bitmap -> b
    boolean cached -> c
    long contentLength -> d
com.squareup.picasso.Downloader$ResponseException -> com.c.a.x:
com.squareup.picasso.FileRequestHandler -> com.c.a.y:
    boolean canHandleRequest(com.squareup.picasso.Request) -> a
    com.squareup.picasso.RequestHandler$Result load(com.squareup.picasso.Request) -> b
com.squareup.picasso.ImageViewAction -> com.c.a.z:
    com.squareup.picasso.Callback callback -> l
    void complete(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom) -> a
    void error() -> a
    void cancel() -> b
com.squareup.picasso.LruCache -> com.c.a.aa:
    java.util.LinkedHashMap map -> b
    int maxSize -> c
    int size -> d
    int putCount -> e
    int evictionCount -> f
    int hitCount -> g
    int missCount -> h
    android.graphics.Bitmap get(java.lang.String) -> a
    void set(java.lang.String,android.graphics.Bitmap) -> a
    void trimToSize(int) -> a
    int size() -> a
    int maxSize() -> b
com.squareup.picasso.MarkableInputStream -> com.c.a.ab:
    java.io.InputStream in -> a
    long offset -> b
    long reset -> c
    long limit -> d
    long defaultMark -> e
    void mark(int) -> mark
    long savePosition(int) -> a
    void reset() -> reset
    void reset(long) -> a
    void skip(long,long) -> a
    int read() -> read
    int read(byte[]) -> read
    int read(byte[],int,int) -> read
    long skip(long) -> skip
    int available() -> available
    void close() -> close
    boolean markSupported() -> markSupported
com.squareup.picasso.MediaStoreRequestHandler -> com.c.a.ac:
    java.lang.String[] CONTENT_ORIENTATION -> b
    boolean canHandleRequest(com.squareup.picasso.Request) -> a
    com.squareup.picasso.RequestHandler$Result load(com.squareup.picasso.Request) -> b
    int getExifOrientation(android.content.ContentResolver,android.net.Uri) -> a
com.squareup.picasso.MediaStoreRequestHandler$PicassoKind -> com.c.a.ad:
    com.squareup.picasso.MediaStoreRequestHandler$PicassoKind MICRO -> a
    com.squareup.picasso.MediaStoreRequestHandler$PicassoKind MINI -> b
    com.squareup.picasso.MediaStoreRequestHandler$PicassoKind FULL -> c
    int androidKind -> d
    int width -> e
    int height -> f
    com.squareup.picasso.MediaStoreRequestHandler$PicassoKind[] $VALUES -> g
    com.squareup.picasso.MediaStoreRequestHandler$PicassoKind[] values() -> values
    com.squareup.picasso.MediaStoreRequestHandler$PicassoKind valueOf(java.lang.String) -> valueOf
com.squareup.picasso.NetworkRequestHandler -> com.c.a.ae:
    com.squareup.picasso.Downloader downloader -> a
    com.squareup.picasso.Stats stats -> b
    boolean canHandleRequest(com.squareup.picasso.Request) -> a
    com.squareup.picasso.RequestHandler$Result load(com.squareup.picasso.Request) -> b
    int getRetryCount() -> a
    boolean shouldRetry$552f0f64(android.net.NetworkInfo) -> a
    boolean supportsReplay() -> b
com.squareup.picasso.OkHttpDownloader -> com.c.a.af:
    com.squareup.okhttp.OkUrlFactory urlFactory -> a
    com.squareup.picasso.Downloader$Response load(android.net.Uri,boolean) -> a
com.squareup.picasso.Picasso -> com.c.a.ag:
    android.os.Handler HANDLER -> a
    com.squareup.picasso.Picasso singleton -> b
    com.squareup.picasso.Picasso$Listener listener -> m
    com.squareup.picasso.Picasso$RequestTransformer requestTransformer -> n
    com.squareup.picasso.Picasso$CleanupThread cleanupThread -> o
    java.util.List requestHandlers -> p
    android.content.Context context -> c
    com.squareup.picasso.Dispatcher dispatcher -> d
    com.squareup.picasso.Cache cache -> e
    com.squareup.picasso.Stats stats -> f
    java.util.Map targetToAction -> g
    java.util.Map targetToDeferredRequestCreator -> h
    java.lang.ref.ReferenceQueue referenceQueue -> i
    boolean indicatorsEnabled -> j
    boolean loggingEnabled -> k
    boolean shutdown -> l
    void cancelRequest(android.widget.ImageView) -> a
    com.squareup.picasso.RequestCreator load(android.net.Uri) -> a
    java.util.List getRequestHandlers() -> a
    com.squareup.picasso.Request transformRequest(com.squareup.picasso.Request) -> a
    void defer(android.widget.ImageView,com.squareup.picasso.DeferredRequestCreator) -> a
    void enqueueAndSubmit(com.squareup.picasso.Action) -> a
    android.graphics.Bitmap quickMemoryCacheCheck(java.lang.String) -> a
    void complete(com.squareup.picasso.BitmapHunter) -> a
    void resumeAction(com.squareup.picasso.Action) -> b
    void deliverAction(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom,com.squareup.picasso.Action) -> a
    void cancelExistingRequest(java.lang.Object) -> a
    com.squareup.picasso.Picasso with(android.content.Context) -> a
    void access$000(com.squareup.picasso.Picasso,java.lang.Object) -> a
com.squareup.picasso.Picasso$1 -> com.c.a.ah:
    void handleMessage(android.os.Message) -> handleMessage
com.squareup.picasso.Picasso$Builder -> com.c.a.ai:
    android.content.Context context -> a
    com.squareup.picasso.Downloader downloader -> b
    java.util.concurrent.ExecutorService service -> c
    com.squareup.picasso.Cache cache -> d
    com.squareup.picasso.Picasso$Listener listener -> e
    com.squareup.picasso.Picasso$RequestTransformer transformer -> f
    java.util.List requestHandlers -> g
    boolean indicatorsEnabled -> h
    boolean loggingEnabled -> i
    com.squareup.picasso.Picasso build() -> a
com.squareup.picasso.Picasso$CleanupThread -> com.c.a.aj:
    java.lang.ref.ReferenceQueue referenceQueue -> a
    android.os.Handler handler -> b
    void run() -> run
com.squareup.picasso.Picasso$CleanupThread$1 -> com.c.a.ak:
    java.lang.Exception val$e -> a
    com.squareup.picasso.Picasso$CleanupThread this$0 -> b
    void run() -> run
com.squareup.picasso.Picasso$Listener -> com.c.a.al:
com.squareup.picasso.Picasso$LoadedFrom -> com.c.a.am:
    com.squareup.picasso.Picasso$LoadedFrom MEMORY -> a
    com.squareup.picasso.Picasso$LoadedFrom DISK -> b
    com.squareup.picasso.Picasso$LoadedFrom NETWORK -> c
    int debugColor -> d
    com.squareup.picasso.Picasso$LoadedFrom[] $VALUES -> e
    com.squareup.picasso.Picasso$LoadedFrom[] values() -> values
    com.squareup.picasso.Picasso$LoadedFrom valueOf(java.lang.String) -> valueOf
com.squareup.picasso.Picasso$Priority -> com.c.a.an:
    com.squareup.picasso.Picasso$Priority LOW -> a
    com.squareup.picasso.Picasso$Priority NORMAL -> b
    com.squareup.picasso.Picasso$Priority HIGH -> c
    com.squareup.picasso.Picasso$Priority[] $VALUES -> d
    com.squareup.picasso.Picasso$Priority[] values() -> values
    com.squareup.picasso.Picasso$Priority valueOf(java.lang.String) -> valueOf
com.squareup.picasso.Picasso$RequestTransformer -> com.c.a.ao:
    com.squareup.picasso.Picasso$RequestTransformer IDENTITY -> a
    com.squareup.picasso.Request transformRequest(com.squareup.picasso.Request) -> a
com.squareup.picasso.Picasso$RequestTransformer$1 -> com.c.a.ap:
    com.squareup.picasso.Request transformRequest(com.squareup.picasso.Request) -> a
com.squareup.picasso.PicassoDrawable -> com.c.a.aq:
    android.graphics.Paint DEBUG_PAINT -> e
    boolean debugging -> f
    float density -> g
    com.squareup.picasso.Picasso$LoadedFrom loadedFrom -> h
    android.graphics.drawable.Drawable placeholder -> a
    long startTimeMillis -> b
    boolean animating -> c
    int alpha -> d
    void setBitmap(android.widget.ImageView,android.content.Context,android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom,boolean,boolean) -> a
    void setPlaceholder(android.widget.ImageView,android.graphics.drawable.Drawable) -> a
    void draw(android.graphics.Canvas) -> draw
    void setAlpha(int) -> setAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    android.graphics.Path getTrianglePath(android.graphics.Point,int) -> a
com.squareup.picasso.PicassoExecutorService -> com.c.a.ar:
    void adjustThreadCount(android.net.NetworkInfo) -> a
    void setThreadCount(int) -> a
    java.util.concurrent.Future submit(java.lang.Runnable) -> submit
com.squareup.picasso.PicassoExecutorService$PicassoFutureTask -> com.c.a.as:
    com.squareup.picasso.BitmapHunter hunter -> a
    int compareTo(java.lang.Object) -> compareTo
com.squareup.picasso.Request -> com.c.a.at:
    long TOO_LONG_LOG -> r
    int id -> a
    long started -> b
    boolean loadFromLocalCacheOnly -> c
    android.net.Uri uri -> d
    int resourceId -> e
    java.lang.String stableKey -> f
    java.util.List transformations -> g
    int targetWidth -> h
    int targetHeight -> i
    boolean centerCrop -> j
    boolean centerInside -> k
    float rotationDegrees -> l
    float rotationPivotX -> m
    float rotationPivotY -> n
    boolean hasRotationPivot -> o
    android.graphics.Bitmap$Config config -> p
    com.squareup.picasso.Picasso$Priority priority -> q
    java.lang.String toString() -> toString
    java.lang.String logId() -> a
    java.lang.String plainId() -> b
    java.lang.String getName() -> c
    boolean hasSize() -> d
    boolean needsTransformation() -> e
    boolean needsMatrixTransform() -> f
    boolean hasCustomTransformations() -> g
com.squareup.picasso.Request$Builder -> com.c.a.au:
    android.net.Uri uri -> a
    int resourceId -> b
    java.lang.String stableKey -> c
    int targetWidth -> d
    int targetHeight -> e
    boolean centerCrop -> f
    boolean centerInside -> g
    float rotationDegrees -> h
    float rotationPivotX -> i
    float rotationPivotY -> j
    boolean hasRotationPivot -> k
    java.util.List transformations -> l
    android.graphics.Bitmap$Config config -> m
    com.squareup.picasso.Picasso$Priority priority -> n
    boolean hasImage() -> a
    boolean hasSize() -> b
    com.squareup.picasso.Request$Builder resize(int,int) -> a
    com.squareup.picasso.Request build() -> c
com.squareup.picasso.RequestCreator -> com.c.a.av:
    int nextId -> a
    com.squareup.picasso.Picasso picasso -> b
    com.squareup.picasso.Request$Builder data -> c
    boolean skipMemoryCache -> d
    boolean noFade -> e
    boolean deferred -> f
    boolean setPlaceholder -> g
    int placeholderResId -> h
    int errorResId -> i
    android.graphics.drawable.Drawable placeholderDrawable -> j
    android.graphics.drawable.Drawable errorDrawable -> k
    java.lang.Object tag -> l
    int getRequestId() -> c
    com.squareup.picasso.RequestCreator unfit() -> a
    com.squareup.picasso.RequestCreator resize(int,int) -> a
    void into(android.widget.ImageView) -> a
    void into(android.widget.ImageView,com.squareup.picasso.Callback) -> a
    android.graphics.drawable.Drawable getPlaceholderDrawable() -> d
    int access$000() -> b
com.squareup.picasso.RequestCreator$1 -> com.c.a.aw:
    java.util.concurrent.atomic.AtomicInteger val$id -> a
    java.util.concurrent.CountDownLatch val$latch -> b
    void run() -> run
com.squareup.picasso.RequestHandler -> com.c.a.ax:
    boolean canHandleRequest(com.squareup.picasso.Request) -> a
    com.squareup.picasso.RequestHandler$Result load(com.squareup.picasso.Request) -> b
    int getRetryCount() -> a
    boolean shouldRetry$552f0f64(android.net.NetworkInfo) -> a
    boolean supportsReplay() -> b
    android.graphics.BitmapFactory$Options createBitmapOptions(com.squareup.picasso.Request) -> d
    boolean requiresInSampleSize(android.graphics.BitmapFactory$Options) -> a
    void calculateInSampleSize(int,int,android.graphics.BitmapFactory$Options,com.squareup.picasso.Request) -> a
    void calculateInSampleSize(int,int,int,int,android.graphics.BitmapFactory$Options,com.squareup.picasso.Request) -> a
com.squareup.picasso.RequestHandler$Result -> com.c.a.ay:
    com.squareup.picasso.Picasso$LoadedFrom loadedFrom -> a
    android.graphics.Bitmap bitmap -> b
    int exifOrientation -> c
    android.graphics.Bitmap getBitmap() -> a
    com.squareup.picasso.Picasso$LoadedFrom getLoadedFrom() -> b
    int getExifOrientation() -> c
com.squareup.picasso.ResourceRequestHandler -> com.c.a.az:
    android.content.Context context -> a
    boolean canHandleRequest(com.squareup.picasso.Request) -> a
    com.squareup.picasso.RequestHandler$Result load(com.squareup.picasso.Request) -> b
com.squareup.picasso.Stats -> com.c.a.ba:
    android.os.HandlerThread statsThread -> a
    com.squareup.picasso.Cache cache -> b
    android.os.Handler handler -> c
    long cacheHits -> d
    long cacheMisses -> e
    long totalDownloadSize -> f
    long totalOriginalBitmapSize -> g
    long totalTransformedBitmapSize -> h
    long averageDownloadSize -> i
    long averageOriginalBitmapSize -> j
    long averageTransformedBitmapSize -> k
    int downloadCount -> l
    int originalBitmapCount -> m
    int transformedBitmapCount -> n
    void dispatchBitmapDecoded(android.graphics.Bitmap) -> a
    void dispatchBitmapTransformed(android.graphics.Bitmap) -> b
    void dispatchCacheHit() -> a
    void processBitmap(android.graphics.Bitmap,int) -> a
com.squareup.picasso.Stats$StatsHandler -> com.c.a.bb:
    com.squareup.picasso.Stats stats -> a
    void handleMessage(android.os.Message) -> handleMessage
com.squareup.picasso.Stats$StatsHandler$1 -> com.c.a.bc:
    android.os.Message val$msg -> a
    com.squareup.picasso.Stats$StatsHandler this$0 -> b
    void run() -> run
com.squareup.picasso.StatsSnapshot -> com.c.a.bd:
    int maxSize -> a
    int size -> b
    long cacheHits -> c
    long cacheMisses -> d
    long totalDownloadSize -> e
    long totalOriginalBitmapSize -> f
    long totalTransformedBitmapSize -> g
    long averageDownloadSize -> h
    long averageOriginalBitmapSize -> i
    long averageTransformedBitmapSize -> j
    int downloadCount -> k
    int originalBitmapCount -> l
    int transformedBitmapCount -> m
    long timeStamp -> n
    java.lang.String toString() -> toString
com.squareup.picasso.Transformation -> com.c.a.be:
    android.graphics.Bitmap transform$34dbf037() -> a
    java.lang.String key() -> b
com.squareup.picasso.UrlConnectionDownloader -> com.c.a.bf:
    java.lang.Object lock -> b
    java.lang.Object cache -> a
    android.content.Context context -> c
    com.squareup.picasso.Downloader$Response load(android.net.Uri,boolean) -> a
com.squareup.picasso.Utils -> com.c.a.bg:
    java.lang.StringBuilder MAIN_THREAD_KEY_BUILDER -> a
    int getBitmapBytes(android.graphics.Bitmap) -> a
    void checkMain() -> a
    boolean isMain() -> b
    java.lang.String getLogIdsForHunter(com.squareup.picasso.BitmapHunter) -> a
    java.lang.String getLogIdsForHunter(com.squareup.picasso.BitmapHunter,java.lang.String) -> a
    void log(java.lang.String,java.lang.String,java.lang.String) -> a
    void log(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    java.lang.String createKey(com.squareup.picasso.Request) -> a
    void closeQuietly(java.io.InputStream) -> a
    boolean parseResponseSourceHeader(java.lang.String) -> a
    com.squareup.picasso.Downloader createDefaultDownloader(android.content.Context) -> a
    void sneakyRethrow(java.lang.Throwable) -> a
    java.io.File createDefaultCacheDir(android.content.Context) -> b
    long calculateDiskCacheSize(java.io.File) -> a
    int calculateMemoryCacheSize(android.content.Context) -> c
    boolean isAirplaneModeOn(android.content.Context) -> d
    java.lang.Object getService(android.content.Context,java.lang.String) -> a
    boolean hasPermission(android.content.Context,java.lang.String) -> b
    byte[] toByteArray(java.io.InputStream) -> b
    boolean isWebPFile(java.io.InputStream) -> c
    int getResourceId(android.content.res.Resources,com.squareup.picasso.Request) -> a
    android.content.res.Resources getResources(android.content.Context,com.squareup.picasso.Request) -> a
com.squareup.picasso.Utils$PicassoThread -> com.c.a.bh:
    void run() -> run
com.squareup.picasso.Utils$PicassoThreadFactory -> com.c.a.bi:
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
com.umeng.analytics.AnalyticsConfig -> com.umeng.analytics.AnalyticsConfig:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String mWrapperType -> mWrapperType
    java.lang.String mWrapperVersion -> mWrapperVersion
    int mVerticalType -> mVerticalType
    java.lang.String GPU_VENDER -> GPU_VENDER
    java.lang.String GPU_RENDERER -> GPU_RENDERER
    com.umeng.analytics.Gender sGender -> sGender
    int sAge -> sAge
    java.lang.String sId -> sId
    java.lang.String sSource -> sSource
    double[] c -> c
    int[] d -> d
    boolean ACTIVITY_DURATION_OPEN -> ACTIVITY_DURATION_OPEN
    boolean COMPRESS_DATA -> COMPRESS_DATA
    boolean ENABLE_MEMORY_BUFFER -> ENABLE_MEMORY_BUFFER
    boolean CATCH_EXCEPTION -> CATCH_EXCEPTION
    long kContinueSessionMillis -> kContinueSessionMillis
    void setAppkey(java.lang.String) -> setAppkey
    void setChannel(java.lang.String) -> setChannel
    java.lang.String getAppkey(android.content.Context) -> getAppkey
    java.lang.String getChannel(android.content.Context) -> getChannel
    double[] getLocation() -> getLocation
    void setLocation(double,double) -> setLocation
    void setReportPolicy(int,int) -> setReportPolicy
    int[] getReportPolicy(android.content.Context) -> getReportPolicy
com.umeng.analytics.Gender -> com.umeng.analytics.Gender:
    com.umeng.analytics.Gender Male -> Male
    com.umeng.analytics.Gender Female -> Female
    com.umeng.analytics.Gender Unknown -> Unknown
    int value -> value
    com.umeng.analytics.Gender[] a -> a
    com.umeng.analytics.Gender[] values() -> values
    com.umeng.analytics.Gender valueOf(java.lang.String) -> valueOf
    int value() -> value
    com.umeng.analytics.Gender getGender(int) -> getGender
    u.aly.ap transGender(com.umeng.analytics.Gender) -> transGender
com.umeng.analytics.Gender$1 -> com.umeng.analytics.Gender$1:
    java.lang.String toString() -> toString
com.umeng.analytics.Gender$2 -> com.umeng.analytics.Gender$2:
    java.lang.String toString() -> toString
com.umeng.analytics.Gender$3 -> com.umeng.analytics.Gender$3:
    java.lang.String toString() -> toString
com.umeng.analytics.Gender$4 -> com.umeng.analytics.Gender$4:
    int[] a -> a
com.umeng.analytics.MobclickAgent -> com.umeng.analytics.MobclickAgent:
    java.lang.String a -> a
    com.umeng.analytics.c b -> b
    void setAutoLocation(boolean) -> setAutoLocation
    void setCatchUncaughtExceptions(boolean) -> setCatchUncaughtExceptions
    void setWrapper(java.lang.String,java.lang.String) -> setWrapper
    void setSessionContinueMillis(long) -> setSessionContinueMillis
    void setEnableEventBuffer(boolean) -> setEnableEventBuffer
    void setOnlineConfigureListener(com.umeng.analytics.onlineconfig.UmengOnlineConfigureListener) -> setOnlineConfigureListener
    com.umeng.analytics.c getAgent() -> getAgent
    void setOpenGLContext(javax.microedition.khronos.opengles.GL10) -> setOpenGLContext
    void openActivityDurationTrack(boolean) -> openActivityDurationTrack
    void onPageStart(java.lang.String) -> onPageStart
    void onPageEnd(java.lang.String) -> onPageEnd
    void setDebugMode(boolean) -> setDebugMode
    void onPause(android.content.Context) -> onPause
    void onResume(android.content.Context) -> onResume
    void onResume(android.content.Context,java.lang.String,java.lang.String) -> onResume
    void reportError(android.content.Context,java.lang.String) -> reportError
    void reportError(android.content.Context,java.lang.Throwable) -> reportError
    void flush(android.content.Context) -> flush
    void onEvent(android.content.Context,java.lang.String) -> onEvent
    void onEvent(android.content.Context,java.lang.String,int) -> onEvent
    void onEvent(android.content.Context,java.lang.String,java.lang.String,int) -> onEvent
    void onEvent(android.content.Context,java.lang.String,java.lang.String) -> onEvent
    void onEvent(android.content.Context,java.lang.String,java.util.Map) -> onEvent
    void onEventDuration(android.content.Context,java.lang.String,long) -> onEventDuration
    void onEventDuration(android.content.Context,java.lang.String,java.lang.String,long) -> onEventDuration
    void onEventDuration(android.content.Context,java.lang.String,java.util.Map,long) -> onEventDuration
    void onEventValue(android.content.Context,java.lang.String,java.util.Map,int) -> onEventValue
    void onEventBegin(android.content.Context,java.lang.String) -> onEventBegin
    void onEventEnd(android.content.Context,java.lang.String) -> onEventEnd
    void onEventBegin(android.content.Context,java.lang.String,java.lang.String) -> onEventBegin
    void onEventEnd(android.content.Context,java.lang.String,java.lang.String) -> onEventEnd
    void onKVEventBegin(android.content.Context,java.lang.String,java.util.Map,java.lang.String) -> onKVEventBegin
    void onKVEventEnd(android.content.Context,java.lang.String,java.lang.String) -> onKVEventEnd
    void onSocialEvent(android.content.Context,java.lang.String,com.umeng.analytics.social.UMPlatformData[]) -> onSocialEvent
    void onSocialEvent(android.content.Context,com.umeng.analytics.social.UMPlatformData[]) -> onSocialEvent
    java.lang.String getConfigParams(android.content.Context,java.lang.String) -> getConfigParams
    void updateOnlineConfig(android.content.Context,java.lang.String,java.lang.String) -> updateOnlineConfig
    void updateOnlineConfig(android.content.Context) -> updateOnlineConfig
    void setUserID(android.content.Context,java.lang.String,java.lang.String,com.umeng.analytics.Gender,int) -> setUserID
    void onKillProcess(android.content.Context) -> onKillProcess
com.umeng.analytics.MobclickAgentJSInterface -> com.umeng.analytics.MobclickAgentJSInterface:
    android.content.Context a -> a
    android.content.Context a(com.umeng.analytics.MobclickAgentJSInterface) -> a
com.umeng.analytics.MobclickAgentJSInterface$a -> com.umeng.analytics.MobclickAgentJSInterface$a:
    android.webkit.WebChromeClient a -> a
    java.lang.String c -> c
    java.lang.String d -> d
    com.umeng.analytics.MobclickAgentJSInterface b -> b
    boolean onJsPrompt(android.webkit.WebView,java.lang.String,java.lang.String,java.lang.String,android.webkit.JsPromptResult) -> onJsPrompt
    void onCloseWindow(android.webkit.WebView) -> onCloseWindow
    boolean onCreateWindow(android.webkit.WebView,boolean,boolean,android.os.Message) -> onCreateWindow
    boolean onJsAlert(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult) -> onJsAlert
    boolean onJsBeforeUnload(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult) -> onJsBeforeUnload
    boolean onJsConfirm(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult) -> onJsConfirm
    void onProgressChanged(android.webkit.WebView,int) -> onProgressChanged
    void onReceivedIcon(android.webkit.WebView,android.graphics.Bitmap) -> onReceivedIcon
    void onReceivedTitle(android.webkit.WebView,java.lang.String) -> onReceivedTitle
    void onRequestFocus(android.webkit.WebView) -> onRequestFocus
com.umeng.analytics.ReportPolicy -> com.umeng.analytics.ReportPolicy:
    int REALTIME -> REALTIME
    int BATCH_AT_LAUNCH -> BATCH_AT_LAUNCH
    int a -> a
    int b -> b
    int DAILY -> DAILY
    int WIFIONLY -> WIFIONLY
    int BATCH_BY_INTERVAL -> BATCH_BY_INTERVAL
    int BATCH_BY_SIZE -> BATCH_BY_SIZE
com.umeng.analytics.ReportPolicy$a -> com.umeng.analytics.ReportPolicy$a:
    boolean a(boolean) -> a
com.umeng.analytics.ReportPolicy$b -> com.umeng.analytics.ReportPolicy$b:
    long a -> a
    long b -> b
    u.aly.w c -> c
    boolean a(boolean) -> a
    long a() -> a
com.umeng.analytics.ReportPolicy$c -> com.umeng.analytics.ReportPolicy$c:
    int a -> a
    u.aly.q b -> b
    boolean a(boolean) -> a
com.umeng.analytics.ReportPolicy$d -> com.umeng.analytics.ReportPolicy$d:
    long a -> a
    u.aly.w b -> b
    boolean a(boolean) -> a
com.umeng.analytics.ReportPolicy$e -> com.umeng.analytics.ReportPolicy$e:
    boolean a(boolean) -> a
com.umeng.analytics.ReportPolicy$f -> com.umeng.analytics.ReportPolicy$f:
    android.content.Context a -> a
    boolean a(boolean) -> a
com.umeng.analytics.a -> com.umeng.analytics.a:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String[] f -> f
    java.lang.String[] g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    long m -> m
    long n -> n
    boolean o -> o
com.umeng.analytics.b -> com.umeng.analytics.b:
    void a() -> a
    void b() -> b
com.umeng.analytics.c -> com.umeng.analytics.c:
    com.umeng.analytics.onlineconfig.a a -> a
    android.content.Context b -> b
    com.umeng.analytics.b c -> c
    u.aly.m d -> d
    u.aly.z e -> e
    u.aly.v f -> f
    u.aly.n g -> g
    u.aly.k h -> h
    boolean i -> i
    void f(android.content.Context) -> f
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void a(com.umeng.analytics.b) -> a
    void a(int) -> a
    void a(java.lang.String,java.lang.String) -> a
    void a(android.content.Context) -> a
    void a(com.umeng.analytics.onlineconfig.UmengOnlineConfigureListener) -> a
    void b(android.content.Context) -> b
    void c(android.content.Context) -> c
    void a(android.content.Context,java.lang.String,java.util.HashMap) -> a
    void a(android.content.Context,java.lang.String) -> a
    void a(android.content.Context,java.lang.Throwable) -> a
    void g(android.content.Context) -> g
    void h(android.content.Context) -> h
    void d(android.content.Context) -> d
    void a(android.content.Context,java.lang.String,java.lang.String,long,int) -> a
    void a(android.content.Context,java.lang.String,java.util.Map,long) -> a
    void a(android.content.Context,java.lang.String,java.lang.String) -> a
    void b(android.content.Context,java.lang.String,java.lang.String) -> b
    void a(android.content.Context,java.lang.String,java.util.HashMap,java.lang.String) -> a
    void c(android.content.Context,java.lang.String,java.lang.String) -> c
    void e(android.content.Context) -> e
    void a(java.lang.Throwable) -> a
    void a(com.umeng.analytics.c,android.content.Context) -> a
    void b(com.umeng.analytics.c,android.content.Context) -> b
    u.aly.n a(com.umeng.analytics.c) -> a
com.umeng.analytics.c$1 -> com.umeng.analytics.c$1:
    android.content.Context a -> a
    com.umeng.analytics.c b -> b
    void a() -> a
com.umeng.analytics.c$2 -> com.umeng.analytics.c$2:
    android.content.Context a -> a
    com.umeng.analytics.c b -> b
    void a() -> a
com.umeng.analytics.c$3 -> com.umeng.analytics.c$3:
    java.lang.String a -> a
    java.lang.String b -> b
    com.umeng.analytics.c c -> c
    void a() -> a
com.umeng.analytics.c$4 -> com.umeng.analytics.c$4:
    java.lang.String a -> a
    java.lang.String b -> b
    com.umeng.analytics.c c -> c
    void a() -> a
com.umeng.analytics.c$5 -> com.umeng.analytics.c$5:
    java.lang.String a -> a
    java.util.HashMap b -> b
    java.lang.String c -> c
    com.umeng.analytics.c d -> d
    void a() -> a
com.umeng.analytics.c$6 -> com.umeng.analytics.c$6:
    java.lang.String a -> a
    java.lang.String b -> b
    com.umeng.analytics.c c -> c
    void a() -> a
com.umeng.analytics.d -> com.umeng.analytics.d:
    java.util.concurrent.ExecutorService a -> a
    long b -> b
    java.util.concurrent.ExecutorService c -> c
    void a(java.lang.Runnable) -> a
    void a() -> a
    void b(java.lang.Runnable) -> b
com.umeng.analytics.e -> com.umeng.analytics.e:
    void run() -> run
    void a() -> a
com.umeng.analytics.f -> com.umeng.analytics.f:
    com.umeng.analytics.f a -> a
    android.content.Context b -> b
    java.lang.String c -> c
    long d -> d
    long e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    java.lang.String n -> n
    java.lang.String o -> o
    java.lang.String p -> p
    com.umeng.analytics.f a(android.content.Context) -> a
    boolean a(java.io.File) -> a
    void a(java.lang.String,java.lang.String,int,int) -> a
    java.lang.Object[] b(android.content.Context) -> b
    int[] a() -> a
    void a(int,int) -> a
    byte[] b() -> b
    void a(byte[]) -> a
    void c() -> c
    byte[] d() -> d
    void b(byte[]) -> b
    void e() -> e
    boolean f() -> f
    android.content.SharedPreferences k() -> k
    android.content.SharedPreferences g() -> g
    android.content.SharedPreferences h() -> h
    android.content.SharedPreferences i() -> i
    android.content.SharedPreferences j() -> j
    java.lang.String l() -> l
    java.lang.String m() -> m
    java.lang.String n() -> n
com.umeng.analytics.onlineconfig.UmengOnlineConfigureListener -> com.umeng.analytics.onlineconfig.UmengOnlineConfigureListener:
    void onDataReceived(org.json.JSONObject) -> onDataReceived
com.umeng.analytics.onlineconfig.a -> com.umeng.analytics.onlineconfig.a:
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    com.umeng.analytics.onlineconfig.UmengOnlineConfigureListener k -> k
    com.umeng.analytics.onlineconfig.c l -> l
    long m -> m
    void a(android.content.Context) -> a
    void a(com.umeng.analytics.onlineconfig.UmengOnlineConfigureListener) -> a
    void a() -> a
    void a(com.umeng.analytics.onlineconfig.c) -> a
    void b() -> b
    void a(org.json.JSONObject) -> a
    org.json.JSONObject b(android.content.Context) -> b
    java.lang.String c(android.content.Context) -> c
    void a(android.content.Context,com.umeng.analytics.onlineconfig.b) -> a
    void b(android.content.Context,com.umeng.analytics.onlineconfig.b) -> b
    void a(com.umeng.analytics.onlineconfig.a,org.json.JSONObject) -> a
    org.json.JSONObject a(com.umeng.analytics.onlineconfig.a,android.content.Context) -> a
    com.umeng.analytics.onlineconfig.c a(com.umeng.analytics.onlineconfig.a) -> a
    void a(com.umeng.analytics.onlineconfig.a,android.content.Context,com.umeng.analytics.onlineconfig.b) -> a
    void b(com.umeng.analytics.onlineconfig.a,android.content.Context,com.umeng.analytics.onlineconfig.b) -> b
com.umeng.analytics.onlineconfig.a$a -> com.umeng.analytics.onlineconfig.a$a:
    org.json.JSONObject e -> e
    com.umeng.analytics.onlineconfig.a a -> a
    org.json.JSONObject a() -> a
    java.lang.String b() -> b
com.umeng.analytics.onlineconfig.a$b -> com.umeng.analytics.onlineconfig.a$b:
    android.content.Context a -> a
    com.umeng.analytics.onlineconfig.a b -> b
    void run() -> run
    boolean a() -> a
    void b() -> b
com.umeng.analytics.onlineconfig.b -> com.umeng.analytics.onlineconfig.b:
    org.json.JSONObject a -> a
    boolean b -> b
    int c -> c
    int d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    void a(org.json.JSONObject) -> a
    void a() -> a
com.umeng.analytics.onlineconfig.c -> com.umeng.analytics.onlineconfig.c:
    void a(int,long) -> a
com.umeng.analytics.social.UMPlatformData -> com.umeng.analytics.social.UMPlatformData:
    com.umeng.analytics.social.UMPlatformData$UMedia a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    com.umeng.analytics.social.UMPlatformData$GENDER e -> e
    java.lang.String getWeiboId() -> getWeiboId
    void setWeiboId(java.lang.String) -> setWeiboId
    com.umeng.analytics.social.UMPlatformData$UMedia getMeida() -> getMeida
    java.lang.String getUsid() -> getUsid
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    com.umeng.analytics.social.UMPlatformData$GENDER getGender() -> getGender
    void setGender(com.umeng.analytics.social.UMPlatformData$GENDER) -> setGender
    boolean isValid() -> isValid
    java.lang.String toString() -> toString
com.umeng.analytics.social.UMPlatformData$1 -> com.umeng.analytics.social.UMPlatformData$1:
com.umeng.analytics.social.UMPlatformData$GENDER -> com.umeng.analytics.social.UMPlatformData$GENDER:
    com.umeng.analytics.social.UMPlatformData$GENDER MALE -> MALE
    com.umeng.analytics.social.UMPlatformData$GENDER FEMALE -> FEMALE
    int value -> value
    com.umeng.analytics.social.UMPlatformData$GENDER[] a -> a
    com.umeng.analytics.social.UMPlatformData$GENDER[] values() -> values
    com.umeng.analytics.social.UMPlatformData$GENDER valueOf(java.lang.String) -> valueOf
com.umeng.analytics.social.UMPlatformData$GENDER$1 -> com.umeng.analytics.social.UMPlatformData$GENDER$1:
    java.lang.String toString() -> toString
com.umeng.analytics.social.UMPlatformData$GENDER$2 -> com.umeng.analytics.social.UMPlatformData$GENDER$2:
    java.lang.String toString() -> toString
com.umeng.analytics.social.UMPlatformData$UMedia -> com.umeng.analytics.social.UMPlatformData$UMedia:
    com.umeng.analytics.social.UMPlatformData$UMedia SINA_WEIBO -> SINA_WEIBO
    com.umeng.analytics.social.UMPlatformData$UMedia TENCENT_WEIBO -> TENCENT_WEIBO
    com.umeng.analytics.social.UMPlatformData$UMedia TENCENT_QZONE -> TENCENT_QZONE
    com.umeng.analytics.social.UMPlatformData$UMedia TENCENT_QQ -> TENCENT_QQ
    com.umeng.analytics.social.UMPlatformData$UMedia WEIXIN_FRIENDS -> WEIXIN_FRIENDS
    com.umeng.analytics.social.UMPlatformData$UMedia WEIXIN_CIRCLE -> WEIXIN_CIRCLE
    com.umeng.analytics.social.UMPlatformData$UMedia RENREN -> RENREN
    com.umeng.analytics.social.UMPlatformData$UMedia DOUBAN -> DOUBAN
    com.umeng.analytics.social.UMPlatformData$UMedia[] a -> a
    com.umeng.analytics.social.UMPlatformData$UMedia[] values() -> values
    com.umeng.analytics.social.UMPlatformData$UMedia valueOf(java.lang.String) -> valueOf
com.umeng.analytics.social.UMPlatformData$UMedia$1 -> com.umeng.analytics.social.UMPlatformData$UMedia$1:
    java.lang.String toString() -> toString
com.umeng.analytics.social.UMPlatformData$UMedia$2 -> com.umeng.analytics.social.UMPlatformData$UMedia$2:
    java.lang.String toString() -> toString
com.umeng.analytics.social.UMPlatformData$UMedia$3 -> com.umeng.analytics.social.UMPlatformData$UMedia$3:
    java.lang.String toString() -> toString
com.umeng.analytics.social.UMPlatformData$UMedia$4 -> com.umeng.analytics.social.UMPlatformData$UMedia$4:
    java.lang.String toString() -> toString
com.umeng.analytics.social.UMPlatformData$UMedia$5 -> com.umeng.analytics.social.UMPlatformData$UMedia$5:
    java.lang.String toString() -> toString
com.umeng.analytics.social.UMPlatformData$UMedia$6 -> com.umeng.analytics.social.UMPlatformData$UMedia$6:
    java.lang.String toString() -> toString
com.umeng.analytics.social.UMPlatformData$UMedia$7 -> com.umeng.analytics.social.UMPlatformData$UMedia$7:
    java.lang.String toString() -> toString
com.umeng.analytics.social.UMPlatformData$UMedia$8 -> com.umeng.analytics.social.UMPlatformData$UMedia$8:
    java.lang.String toString() -> toString
com.umeng.analytics.social.UMSocialService -> com.umeng.analytics.social.UMSocialService:
    void a(android.content.Context,com.umeng.analytics.social.UMSocialService$b,java.lang.String,com.umeng.analytics.social.UMPlatformData[]) -> a
    void share(android.content.Context,java.lang.String,com.umeng.analytics.social.UMPlatformData[]) -> share
    void share(android.content.Context,com.umeng.analytics.social.UMPlatformData[]) -> share
com.umeng.analytics.social.UMSocialService$a -> com.umeng.analytics.social.UMSocialService$a:
    java.lang.String a -> a
    java.lang.String b -> b
    com.umeng.analytics.social.UMSocialService$b c -> c
    com.umeng.analytics.social.UMPlatformData[] d -> d
    void onPreExecute() -> onPreExecute
    com.umeng.analytics.social.d a(java.lang.Void[]) -> a
    void a(com.umeng.analytics.social.d) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.umeng.analytics.social.UMSocialService$b -> com.umeng.analytics.social.UMSocialService$b:
    void a() -> a
    void a(com.umeng.analytics.social.d,com.umeng.analytics.social.UMPlatformData[]) -> a
com.umeng.analytics.social.a -> com.umeng.analytics.social.a:
    long b -> b
    int a -> a
    java.lang.String c -> c
    int a() -> a
    java.lang.String getMessage() -> getMessage
com.umeng.analytics.social.b -> com.umeng.analytics.social.b:
    void a(java.lang.String,java.lang.String) -> a
    void a(java.lang.String,java.lang.String,java.lang.Exception) -> a
    void b(java.lang.String,java.lang.String) -> b
    void b(java.lang.String,java.lang.String,java.lang.Exception) -> b
    void c(java.lang.String,java.lang.String) -> c
    void c(java.lang.String,java.lang.String,java.lang.Exception) -> c
    void d(java.lang.String,java.lang.String) -> d
    void d(java.lang.String,java.lang.String,java.lang.Exception) -> d
    void e(java.lang.String,java.lang.String) -> e
    void e(java.lang.String,java.lang.String,java.lang.Exception) -> e
com.umeng.analytics.social.c -> com.umeng.analytics.social.c:
    java.lang.String a(java.lang.String) -> a
    java.lang.String a(java.io.InputStream) -> a
    java.lang.String a(java.lang.String,java.lang.String) -> a
com.umeng.analytics.social.d -> com.umeng.analytics.social.d:
    int a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.Exception d -> d
    java.lang.Exception a() -> a
    int b() -> b
    void a(int) -> a
    java.lang.String c() -> c
    void a(java.lang.String) -> a
    java.lang.String d() -> d
    void b(java.lang.String) -> b
    java.lang.String toString() -> toString
com.umeng.analytics.social.e -> com.umeng.analytics.social.e:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    java.lang.String n -> n
    java.lang.String o -> o
    java.lang.String p -> p
    java.lang.String q -> q
    java.lang.String r -> r
    java.lang.String s -> s
    int t -> t
    int u -> u
    boolean v -> v
com.umeng.analytics.social.f -> com.umeng.analytics.social.f:
    java.util.Map a -> a
    java.lang.String[] a(android.content.Context,java.lang.String,com.umeng.analytics.social.UMPlatformData[]) -> a
    java.lang.String a(java.util.List) -> a
    java.util.List a(com.umeng.analytics.social.UMPlatformData[]) -> a
    java.lang.String b(com.umeng.analytics.social.UMPlatformData[]) -> b
    java.util.Map c(android.content.Context) -> c
    java.lang.String a(android.content.Context) -> a
    java.util.Map b(android.content.Context) -> b
    boolean a(android.content.Context,java.lang.String) -> a
    java.lang.String d(android.content.Context) -> d
com.umeng.fb.BuildConfig -> com.umeng.fb.BuildConfig:
    boolean DEBUG -> DEBUG
    java.lang.String PACKAGE_NAME -> PACKAGE_NAME
    java.lang.String BUILD_TYPE -> BUILD_TYPE
    java.lang.String FLAVOR -> FLAVOR
    int VERSION_CODE -> VERSION_CODE
    java.lang.String VERSION_NAME -> VERSION_NAME
com.umeng.fb.ContactActivity -> com.umeng.fb.ContactActivity:
    java.lang.String KEY_UMENG_CONTACT_INFO_PLAIN_TEXT -> KEY_UMENG_CONTACT_INFO_PLAIN_TEXT
    android.widget.ImageView backBtn -> backBtn
    android.widget.ImageView saveBtn -> saveBtn
    android.widget.EditText contactInfoEdit -> contactInfoEdit
    com.umeng.fb.FeedbackAgent agent -> agent
    android.widget.TextView lastUpdateAtText -> lastUpdateAtText
    void onCreate(android.os.Bundle) -> onCreate
    void back() -> back
    com.umeng.fb.FeedbackAgent access$000(com.umeng.fb.ContactActivity) -> access$000
    android.widget.EditText access$100(com.umeng.fb.ContactActivity) -> access$100
com.umeng.fb.ContactActivity$1 -> com.umeng.fb.ContactActivity$1:
    com.umeng.fb.ContactActivity this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.umeng.fb.ContactActivity$2 -> com.umeng.fb.ContactActivity$2:
    com.umeng.fb.ContactActivity this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.umeng.fb.ContactActivity$3 -> com.umeng.fb.ContactActivity$3:
    com.umeng.fb.ContactActivity this$0 -> this$0
    void overridePendingTransition(android.app.Activity) -> overridePendingTransition
com.umeng.fb.ConversationActivity -> com.umeng.fb.ConversationActivity:
    java.lang.String TAG -> TAG
    com.umeng.fb.FeedbackAgent agent -> agent
    com.umeng.fb.model.Conversation defaultConversation -> defaultConversation
    com.umeng.fb.ConversationActivity$ReplyListAdapter adapter -> adapter
    android.widget.ListView replyListView -> replyListView
    android.widget.RelativeLayout header -> header
    int headerHeight -> headerHeight
    int headerPaddingOriginal -> headerPaddingOriginal
    android.widget.EditText userReplyContentEdit -> userReplyContentEdit
    int mLastMotionY -> mLastMotionY
    void onCreate(android.os.Bundle) -> onCreate
    void setListViewHeader() -> setListViewHeader
    void measureView(android.view.View) -> measureView
    void sync() -> sync
    com.umeng.fb.model.Conversation access$000(com.umeng.fb.ConversationActivity) -> access$000
    android.widget.ListView access$100(com.umeng.fb.ConversationActivity) -> access$100
    int access$202(com.umeng.fb.ConversationActivity,int) -> access$202
    int access$200(com.umeng.fb.ConversationActivity) -> access$200
    com.umeng.fb.ConversationActivity$ReplyListAdapter access$300(com.umeng.fb.ConversationActivity) -> access$300
com.umeng.fb.ConversationActivity$1 -> com.umeng.fb.ConversationActivity$1:
    com.umeng.fb.ConversationActivity this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.umeng.fb.ConversationActivity$1$1 -> com.umeng.fb.ConversationActivity$1$1:
    com.umeng.fb.ConversationActivity$1 this$1 -> this$1
    void overridePendingTransition(android.app.Activity) -> overridePendingTransition
com.umeng.fb.ConversationActivity$2 -> com.umeng.fb.ConversationActivity$2:
    com.umeng.fb.ConversationActivity this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.umeng.fb.ConversationActivity$3 -> com.umeng.fb.ConversationActivity$3:
    com.umeng.fb.ConversationActivity this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.umeng.fb.ConversationActivity$4 -> com.umeng.fb.ConversationActivity$4:
    com.umeng.fb.ConversationActivity this$0 -> this$0
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    void applyHeaderPadding(android.view.MotionEvent) -> applyHeaderPadding
com.umeng.fb.ConversationActivity$5 -> com.umeng.fb.ConversationActivity$5:
    int mScrollState -> mScrollState
    com.umeng.fb.ConversationActivity this$0 -> this$0
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
com.umeng.fb.ConversationActivity$6 -> com.umeng.fb.ConversationActivity$6:
    com.umeng.fb.ConversationActivity this$0 -> this$0
    void onSendUserReply(java.util.List) -> onSendUserReply
    void onReceiveDevReply(java.util.List) -> onReceiveDevReply
com.umeng.fb.ConversationActivity$ReplyListAdapter -> com.umeng.fb.ConversationActivity$ReplyListAdapter:
    android.content.Context mContext -> mContext
    android.view.LayoutInflater mInflater -> mInflater
    com.umeng.fb.ConversationActivity this$0 -> this$0
    int getCount() -> getCount
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
com.umeng.fb.ConversationActivity$ReplyListAdapter$ViewHolder -> com.umeng.fb.ConversationActivity$ReplyListAdapter$ViewHolder:
    android.widget.TextView replyDate -> replyDate
    android.widget.TextView replyContent -> replyContent
    com.umeng.fb.ConversationActivity$ReplyListAdapter this$1 -> this$1
com.umeng.fb.FeedbackAgent -> com.umeng.fb.FeedbackAgent:
    java.lang.String TAG -> TAG
    android.content.Context mContext -> mContext
    com.umeng.fb.model.Store store -> store
    void setDebug(boolean) -> setDebug
    java.util.List getAllConversationIds() -> getAllConversationIds
    com.umeng.fb.model.Conversation getConversationById(java.lang.String) -> getConversationById
    com.umeng.fb.model.Conversation getDefaultConversation() -> getDefaultConversation
    void sync() -> sync
    void showReplyNotification(java.lang.String) -> showReplyNotification
    com.umeng.fb.model.UserInfo getUserInfo() -> getUserInfo
    void setUserInfo(com.umeng.fb.model.UserInfo) -> setUserInfo
    long getUserInfoLastUpdateAt() -> getUserInfoLastUpdateAt
    void startFeedbackActivity() -> startFeedbackActivity
    android.content.Context access$000(com.umeng.fb.FeedbackAgent) -> access$000
    void access$100(com.umeng.fb.FeedbackAgent,java.lang.String) -> access$100
com.umeng.fb.FeedbackAgent$1 -> com.umeng.fb.FeedbackAgent$1:
    com.umeng.fb.FeedbackAgent this$0 -> this$0
    void onSendUserReply(java.util.List) -> onSendUserReply
    void onReceiveDevReply(java.util.List) -> onReceiveDevReply
com.umeng.fb.R -> com.umeng.fb.R:
com.umeng.fb.R$anim -> com.umeng.fb.R$anim:
    int umeng_fb_slide_in_from_left -> umeng_fb_slide_in_from_left
    int umeng_fb_slide_in_from_right -> umeng_fb_slide_in_from_right
    int umeng_fb_slide_out_from_left -> umeng_fb_slide_out_from_left
    int umeng_fb_slide_out_from_right -> umeng_fb_slide_out_from_right
com.umeng.fb.R$attr -> com.umeng.fb.R$attr:
com.umeng.fb.R$color -> com.umeng.fb.R$color:
    int umeng_fb_color_btn_normal -> umeng_fb_color_btn_normal
    int umeng_fb_color_btn_pressed -> umeng_fb_color_btn_pressed
com.umeng.fb.R$drawable -> com.umeng.fb.R$drawable:
    int umeng_fb_arrow_right -> umeng_fb_arrow_right
    int umeng_fb_back_normal -> umeng_fb_back_normal
    int umeng_fb_back_selected -> umeng_fb_back_selected
    int umeng_fb_back_selector -> umeng_fb_back_selector
    int umeng_fb_bar_bg -> umeng_fb_bar_bg
    int umeng_fb_btn_bg_selector -> umeng_fb_btn_bg_selector
    int umeng_fb_conversation_bg -> umeng_fb_conversation_bg
    int umeng_fb_gradient_green -> umeng_fb_gradient_green
    int umeng_fb_gradient_orange -> umeng_fb_gradient_orange
    int umeng_fb_gray_frame -> umeng_fb_gray_frame
    int umeng_fb_list_item -> umeng_fb_list_item
    int umeng_fb_list_item_pressed -> umeng_fb_list_item_pressed
    int umeng_fb_list_item_selector -> umeng_fb_list_item_selector
    int umeng_fb_logo -> umeng_fb_logo
    int umeng_fb_point_new -> umeng_fb_point_new
    int umeng_fb_point_normal -> umeng_fb_point_normal
    int umeng_fb_reply_left_bg -> umeng_fb_reply_left_bg
    int umeng_fb_reply_right_bg -> umeng_fb_reply_right_bg
    int umeng_fb_see_list_normal -> umeng_fb_see_list_normal
    int umeng_fb_see_list_pressed -> umeng_fb_see_list_pressed
    int umeng_fb_see_list_selector -> umeng_fb_see_list_selector
    int umeng_fb_statusbar_icon -> umeng_fb_statusbar_icon
    int umeng_fb_submit_selector -> umeng_fb_submit_selector
    int umeng_fb_tick_normal -> umeng_fb_tick_normal
    int umeng_fb_tick_selected -> umeng_fb_tick_selected
    int umeng_fb_tick_selector -> umeng_fb_tick_selector
    int umeng_fb_top_banner -> umeng_fb_top_banner
    int umeng_fb_user_bubble -> umeng_fb_user_bubble
    int umeng_fb_write_normal -> umeng_fb_write_normal
    int umeng_fb_write_pressed -> umeng_fb_write_pressed
    int umeng_fb_write_selector -> umeng_fb_write_selector
com.umeng.fb.R$id -> com.umeng.fb.R$id:
    int umeng_fb_back -> umeng_fb_back
    int umeng_fb_contact_header -> umeng_fb_contact_header
    int umeng_fb_contact_info -> umeng_fb_contact_info
    int umeng_fb_contact_update_at -> umeng_fb_contact_update_at
    int umeng_fb_conversation_contact_entry -> umeng_fb_conversation_contact_entry
    int umeng_fb_conversation_header -> umeng_fb_conversation_header
    int umeng_fb_conversation_list_wrapper -> umeng_fb_conversation_list_wrapper
    int umeng_fb_conversation_umeng_logo -> umeng_fb_conversation_umeng_logo
    int umeng_fb_list_reply_header -> umeng_fb_list_reply_header
    int umeng_fb_reply_content -> umeng_fb_reply_content
    int umeng_fb_reply_content_wrapper -> umeng_fb_reply_content_wrapper
    int umeng_fb_reply_date -> umeng_fb_reply_date
    int umeng_fb_reply_list -> umeng_fb_reply_list
    int umeng_fb_save -> umeng_fb_save
    int umeng_fb_send -> umeng_fb_send
com.umeng.fb.R$layout -> com.umeng.fb.R$layout:
    int umeng_fb_activity_contact -> umeng_fb_activity_contact
    int umeng_fb_activity_conversation -> umeng_fb_activity_conversation
    int umeng_fb_list_header -> umeng_fb_list_header
    int umeng_fb_list_item -> umeng_fb_list_item
    int umeng_fb_new_reply_alert_dialog -> umeng_fb_new_reply_alert_dialog
com.umeng.fb.R$string -> com.umeng.fb.R$string:
    int umeng_fb_back -> umeng_fb_back
    int umeng_fb_contact_info -> umeng_fb_contact_info
    int umeng_fb_contact_info_hint -> umeng_fb_contact_info_hint
    int umeng_fb_contact_title -> umeng_fb_contact_title
    int umeng_fb_contact_update_at -> umeng_fb_contact_update_at
    int umeng_fb_notification_content_formatter_multiple_msg -> umeng_fb_notification_content_formatter_multiple_msg
    int umeng_fb_notification_content_formatter_single_msg -> umeng_fb_notification_content_formatter_single_msg
    int umeng_fb_notification_ticker_text -> umeng_fb_notification_ticker_text
    int umeng_fb_powered_by -> umeng_fb_powered_by
    int umeng_fb_reply_content_default -> umeng_fb_reply_content_default
    int umeng_fb_reply_content_hint -> umeng_fb_reply_content_hint
    int umeng_fb_reply_date_default -> umeng_fb_reply_date_default
    int umeng_fb_send -> umeng_fb_send
    int umeng_fb_title -> umeng_fb_title
com.umeng.fb.model.Constants -> com.umeng.fb.model.Constants:
    java.lang.String SDK_TYPE -> SDK_TYPE
    java.lang.String SDK_VERSION -> SDK_VERSION
    java.lang.String OS -> OS
com.umeng.fb.model.Conversation -> com.umeng.fb.model.Conversation:
    java.lang.String TAG -> TAG
    android.content.Context mContext -> mContext
    java.util.concurrent.ExecutorService executor -> executor
    java.lang.String id -> id
    java.lang.String user_id -> user_id
    java.util.List replyList -> replyList
    java.lang.String appkey -> appkey
    java.util.Map replyIdMap -> replyIdMap
    java.util.List getReplyList() -> getReplyList
    void addUserReply(java.lang.String) -> addUserReply
    void commitChange() -> commitChange
    org.json.JSONArray toJson() -> toJson
    java.lang.String getId() -> getId
    void sync(com.umeng.fb.model.Conversation$SyncListener) -> sync
    java.util.Map access$000(com.umeng.fb.model.Conversation) -> access$000
    java.lang.String access$100(com.umeng.fb.model.Conversation) -> access$100
    android.content.Context access$200(com.umeng.fb.model.Conversation) -> access$200
    java.lang.String access$300(com.umeng.fb.model.Conversation) -> access$300
    void access$400(com.umeng.fb.model.Conversation) -> access$400
com.umeng.fb.model.Conversation$1 -> com.umeng.fb.model.Conversation$1:
    android.os.Handler val$handler -> val$handler
    com.umeng.fb.model.Conversation this$0 -> this$0
    void run() -> run
com.umeng.fb.model.Conversation$MessageWrapper -> com.umeng.fb.model.Conversation$MessageWrapper:
    java.util.List userReplyListToSend -> userReplyListToSend
    java.util.List devReplyListRetrieved -> devReplyListRetrieved
com.umeng.fb.model.Conversation$SyncHandler -> com.umeng.fb.model.Conversation$SyncHandler:
    com.umeng.fb.model.Conversation$SyncListener mListener -> mListener
    int CALLBACK -> CALLBACK
    int UPDATE_SEND_USER_REPLY_RESULT -> UPDATE_SEND_USER_REPLY_RESULT
    com.umeng.fb.model.Conversation this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
com.umeng.fb.model.Conversation$SyncListener -> com.umeng.fb.model.Conversation$SyncListener:
    void onReceiveDevReply(java.util.List) -> onReceiveDevReply
    void onSendUserReply(java.util.List) -> onSendUserReply
com.umeng.fb.model.DevReply -> com.umeng.fb.model.DevReply:
    java.lang.String user_name -> user_name
    org.json.JSONObject toJson() -> toJson
com.umeng.fb.model.Reply -> com.umeng.fb.model.Reply:
    java.lang.String TAG -> TAG
    java.lang.String content -> content
    java.lang.String reply_id -> reply_id
    java.lang.String appkey -> appkey
    java.lang.String user_id -> user_id
    java.lang.String feedback_id -> feedback_id
    com.umeng.fb.model.Reply$TYPE type -> type
    java.util.Date datetime -> datetime
    com.umeng.fb.model.Reply$STATUS status -> status
    java.lang.String JSON_KEY_CONTENT -> JSON_KEY_CONTENT
    java.lang.String JSON_KEY_REPLY_ID -> JSON_KEY_REPLY_ID
    java.lang.String JSON_KEY_APPKEY -> JSON_KEY_APPKEY
    java.lang.String JSON_KEY_USER_ID -> JSON_KEY_USER_ID
    java.lang.String JSON_KEY_FEEDBACK_ID -> JSON_KEY_FEEDBACK_ID
    java.lang.String JSON_KEY_TYPE -> JSON_KEY_TYPE
    java.lang.String JSON_KEY_DATE_TIME -> JSON_KEY_DATE_TIME
    java.lang.String JSON_KEY_STATUS -> JSON_KEY_STATUS
    org.json.JSONObject toJson() -> toJson
    int compareTo(com.umeng.fb.model.Reply) -> compareTo
    java.lang.String getContent() -> getContent
    java.util.Date getDatetime() -> getDatetime
    com.umeng.fb.model.Reply$STATUS getStatus() -> getStatus
    int compareTo(java.lang.Object) -> compareTo
com.umeng.fb.model.Reply$STATUS -> com.umeng.fb.model.Reply$STATUS:
    com.umeng.fb.model.Reply$STATUS SENDING -> SENDING
    com.umeng.fb.model.Reply$STATUS NOT_SENT -> NOT_SENT
    com.umeng.fb.model.Reply$STATUS SENT -> SENT
    java.lang.String mText -> mText
    com.umeng.fb.model.Reply$STATUS[] $VALUES -> $VALUES
    com.umeng.fb.model.Reply$STATUS[] values() -> values
    com.umeng.fb.model.Reply$STATUS valueOf(java.lang.String) -> valueOf
    java.lang.String toString() -> toString
    com.umeng.fb.model.Reply$STATUS get(java.lang.String) -> get
com.umeng.fb.model.Reply$TYPE -> com.umeng.fb.model.Reply$TYPE:
    com.umeng.fb.model.Reply$TYPE NEW_FEEDBACK -> NEW_FEEDBACK
    com.umeng.fb.model.Reply$TYPE DEV_REPLY -> DEV_REPLY
    com.umeng.fb.model.Reply$TYPE USER_REPLY -> USER_REPLY
    java.lang.String mText -> mText
    com.umeng.fb.model.Reply$TYPE[] $VALUES -> $VALUES
    com.umeng.fb.model.Reply$TYPE[] values() -> values
    com.umeng.fb.model.Reply$TYPE valueOf(java.lang.String) -> valueOf
    java.lang.String toString() -> toString
    com.umeng.fb.model.Reply$TYPE get(java.lang.String) -> get
com.umeng.fb.model.Store -> com.umeng.fb.model.Store:
    java.lang.String TAG -> TAG
    com.umeng.fb.model.Store INSTANCE -> INSTANCE
    android.content.Context mContext -> mContext
    java.lang.String PREFS_CONVERSATIONS -> PREFS_CONVERSATIONS
    java.lang.String PREFS_USER_INFO -> PREFS_USER_INFO
    java.lang.String PREFS_USER_INFO_KEY -> PREFS_USER_INFO_KEY
    java.lang.String PREFS_USER_INFO_LAST_UPDATE_KEY -> PREFS_USER_INFO_LAST_UPDATE_KEY
    java.lang.String PREFS_USER_INFO_LAST_SYNC_KEY -> PREFS_USER_INFO_LAST_SYNC_KEY
    com.umeng.fb.model.Store getInstance(android.content.Context) -> getInstance
    void saveCoversation(com.umeng.fb.model.Conversation) -> saveCoversation
    void saveUserInfo(com.umeng.fb.model.UserInfo) -> saveUserInfo
    com.umeng.fb.model.UserInfo getUserInfo() -> getUserInfo
    long getUserInfoLastUpdateAt() -> getUserInfoLastUpdateAt
    long getUserInfoLastSyncAt() -> getUserInfoLastSyncAt
    void setUserInfoLastSyncAt(long) -> setUserInfoLastSyncAt
    com.umeng.fb.model.Conversation getConversationById(java.lang.String) -> getConversationById
    java.util.List getAllConversationIds() -> getAllConversationIds
    void clear() -> clear
com.umeng.fb.model.UserInfo -> com.umeng.fb.model.UserInfo:
    java.lang.String TAG -> TAG
    int ageGroup -> ageGroup
    java.lang.String gender -> gender
    java.util.Map contact -> contact
    java.util.Map remark -> remark
    org.json.JSONObject toJson() -> toJson
    int getAgeGroup() -> getAgeGroup
    void setAgeGroup(int) -> setAgeGroup
    java.lang.String getGender() -> getGender
    void setGender(java.lang.String) -> setGender
    java.util.Map getContact() -> getContact
    void setContact(java.util.Map) -> setContact
    java.util.Map getRemark() -> getRemark
    void setRemark(java.util.Map) -> setRemark
com.umeng.fb.model.UserReply -> com.umeng.fb.model.UserReply:
    org.json.JSONObject toJson() -> toJson
com.umeng.fb.model.UserTitleReply -> com.umeng.fb.model.UserTitleReply:
    java.lang.String thread -> thread
    java.lang.String JSON_KEY_THREAD -> JSON_KEY_THREAD
    org.json.JSONObject toJson() -> toJson
com.umeng.fb.net.DevReplyRequest -> com.umeng.fb.net.DevReplyRequest:
    java.lang.String mUrl -> mUrl
    java.lang.String toGetUrl() -> toGetUrl
    java.lang.String getHttpMethod() -> getHttpMethod
    org.json.JSONObject toJson() -> toJson
com.umeng.fb.net.FbClient -> com.umeng.fb.net.FbClient:
    java.lang.String TAG -> TAG
    android.content.Context mContext -> mContext
    java.lang.String FEEDBACK_BASE_URL -> FEEDBACK_BASE_URL
    java.lang.String FEEDBACK_UER_REPLY_URL -> FEEDBACK_UER_REPLY_URL
    java.lang.String FEEDBACK_Dev_Reply_URL -> FEEDBACK_Dev_Reply_URL
    java.lang.String FEEDBACK_NewFeedback_URL -> FEEDBACK_NewFeedback_URL
    int REGISTRATION_TIMEOUT_MS -> REGISTRATION_TIMEOUT_MS
    com.umeng.fb.net.FbResponse execute(com.umeng.fb.net.FbRequest) -> execute
    java.util.List getDevReply(java.util.List,java.lang.String,java.lang.String) -> getDevReply
    boolean sendReply(com.umeng.fb.model.Reply) -> sendReply
    boolean sendUserReply(com.umeng.fb.model.UserReply) -> sendUserReply
    boolean sendUserTitleReply(com.umeng.fb.model.UserTitleReply) -> sendUserTitleReply
    void addRequestHeader(org.json.JSONObject) -> addRequestHeader
    void addUserInfoIfNotSynced(org.json.JSONObject) -> addUserInfoIfNotSynced
com.umeng.fb.net.FbRequest -> com.umeng.fb.net.FbRequest:
    java.lang.String mKey -> mKey
    org.json.JSONObject mValue -> mValue
    java.lang.String mReportContent -> mReportContent
    org.json.JSONObject toJson() -> toJson
    java.lang.String toGetUrl() -> toGetUrl
    java.lang.String getHttpMethod() -> getHttpMethod
com.umeng.fb.net.FbResponse -> com.umeng.fb.net.FbResponse:
    org.json.JSONObject jsonObj -> jsonObj
    org.json.JSONObject getJson() -> getJson
com.umeng.fb.net.UClient -> com.umeng.fb.net.UClient:
    java.lang.String TAG -> TAG
    java.util.Map headers -> headers
    com.umeng.fb.net.UResponse execute(com.umeng.fb.net.URequest,java.lang.Class) -> execute
    org.json.JSONObject HttpRequestPost(java.lang.String,org.json.JSONObject) -> HttpRequestPost
    boolean shouldCompressData() -> shouldCompressData
    java.lang.String convertStreamToString(java.io.InputStream) -> convertStreamToString
    org.json.JSONObject HttpRequestGet(java.lang.String) -> HttpRequestGet
    org.apache.http.params.HttpParams getHttpParams() -> getHttpParams
    com.umeng.fb.net.UClient setHeader(java.util.Map) -> setHeader
    void verifyMethod(java.lang.String) -> verifyMethod
com.umeng.fb.net.URequest -> com.umeng.fb.net.URequest:
    java.lang.String POST -> POST
    java.lang.String GET -> GET
    java.lang.String baseUrl -> baseUrl
    org.json.JSONObject toJson() -> toJson
    java.lang.String toGetUrl() -> toGetUrl
    java.lang.String getHttpMethod() -> getHttpMethod
    void setBaseUrl(java.lang.String) -> setBaseUrl
    java.lang.String getBaseUrl() -> getBaseUrl
com.umeng.fb.net.UResponse -> com.umeng.fb.net.UResponse:
com.umeng.fb.res.AnimMapper -> com.umeng.fb.res.AnimMapper:
    int umeng_fb_slide_in_from_left(android.content.Context) -> umeng_fb_slide_in_from_left
    int umeng_fb_slide_in_from_right(android.content.Context) -> umeng_fb_slide_in_from_right
    int umeng_fb_slide_out_from_left(android.content.Context) -> umeng_fb_slide_out_from_left
    int umeng_fb_slide_out_from_right(android.content.Context) -> umeng_fb_slide_out_from_right
com.umeng.fb.res.DrawableMapper -> com.umeng.fb.res.DrawableMapper:
    int umeng_fb_reply_right_bg(android.content.Context) -> umeng_fb_reply_right_bg
    int umeng_fb_reply_left_bg(android.content.Context) -> umeng_fb_reply_left_bg
    int umeng_fb_statusbar_icon(android.content.Context) -> umeng_fb_statusbar_icon
com.umeng.fb.res.IdMapper -> com.umeng.fb.res.IdMapper:
    int umeng_fb_reply_list(android.content.Context) -> umeng_fb_reply_list
    int umeng_fb_reply_content(android.content.Context) -> umeng_fb_reply_content
    int umeng_fb_conversation_contact_entry(android.content.Context) -> umeng_fb_conversation_contact_entry
    int umeng_fb_back(android.content.Context) -> umeng_fb_back
    int umeng_fb_send(android.content.Context) -> umeng_fb_send
    int umeng_fb_reply_date(android.content.Context) -> umeng_fb_reply_date
    int umeng_fb_reply_content_right(android.content.Context) -> umeng_fb_reply_content_right
    int umeng_fb_reply_content_left(android.content.Context) -> umeng_fb_reply_content_left
    int umeng_fb_save(android.content.Context) -> umeng_fb_save
    int umeng_fb_contact_info(android.content.Context) -> umeng_fb_contact_info
    int umeng_fb_contact_update_at(android.content.Context) -> umeng_fb_contact_update_at
    int umeng_fb_conversation_umeng_logo(android.content.Context) -> umeng_fb_conversation_umeng_logo
com.umeng.fb.res.LayoutMapper -> com.umeng.fb.res.LayoutMapper:
    int umeng_fb_activity_contact(android.content.Context) -> umeng_fb_activity_contact
    int umeng_fb_activity_conversation(android.content.Context) -> umeng_fb_activity_conversation
    int umeng_fb_list_item(android.content.Context) -> umeng_fb_list_item
    int umeng_fb_new_reply_alert_dialog(android.content.Context) -> umeng_fb_new_reply_alert_dialog
    int umeng_fb_list_header(android.content.Context) -> umeng_fb_list_header
com.umeng.fb.res.StringMapper -> com.umeng.fb.res.StringMapper:
    int umeng_fb_contact_update_at(android.content.Context) -> umeng_fb_contact_update_at
    int umeng_fb_notification_ticker_text(android.content.Context) -> umeng_fb_notification_ticker_text
    int umeng_fb_notification_content_formatter_single_msg(android.content.Context) -> umeng_fb_notification_content_formatter_single_msg
    int umeng_fb_notification_content_formatter_multiple_msg(android.content.Context) -> umeng_fb_notification_content_formatter_multiple_msg
com.umeng.fb.util.Constants -> com.umeng.fb.util.Constants:
    java.lang.String CACHE_PATH -> CACHE_PATH
    java.lang.String CACHE_INTERNAL_PATH -> CACHE_INTERNAL_PATH
    java.lang.String KEY_TYPE -> KEY_TYPE
    java.lang.String KEY_PACKAGE -> KEY_PACKAGE
    java.lang.String KEY_CHANNEL -> KEY_CHANNEL
    java.lang.String KEY_ID -> KEY_ID
    java.lang.String KEY_VERSION_CODE -> KEY_VERSION_CODE
    java.lang.String KEY_APPKEY -> KEY_APPKEY
    java.lang.String KEY_SDK_VERSION -> KEY_SDK_VERSION
    java.lang.String KEY_PROTO_VER -> KEY_PROTO_VER
    java.lang.String KEY_OLD_MD5 -> KEY_OLD_MD5
    java.lang.String KEY_DELTA -> KEY_DELTA
    java.lang.String CHANNEL -> CHANNEL
com.umeng.fb.util.DeflaterHelper -> com.umeng.fb.util.DeflaterHelper:
    int TOTAL_LEN -> TOTAL_LEN
    byte[] deflaterCompress(java.lang.String,java.lang.String) -> deflaterCompress
    byte[] deflaterCompress(byte[]) -> deflaterCompress
    java.lang.String deflaterDecompress(byte[],java.lang.String) -> deflaterDecompress
    byte[] deflaterDecompress(byte[]) -> deflaterDecompress
com.umeng.fb.util.DeviceConfig -> com.umeng.fb.util.DeviceConfig:
    java.lang.String LOG_TAG -> LOG_TAG
    java.lang.String UNKNOW -> UNKNOW
    java.lang.String MOBILE_NETWORK -> MOBILE_NETWORK
    java.lang.String WIFI -> WIFI
    int DEFAULT_TIMEZONE -> DEFAULT_TIMEZONE
    boolean isAppInstalled(java.lang.String,android.content.Context) -> isAppInstalled
    boolean isChinese(android.content.Context) -> isChinese
    boolean isScreenPortrait(android.content.Context) -> isScreenPortrait
    java.lang.String getAppVersionCode(android.content.Context) -> getAppVersionCode
    java.lang.String getAppVersionName(android.content.Context) -> getAppVersionName
    boolean checkPermission(android.content.Context,java.lang.String) -> checkPermission
    java.lang.String getAppLabel(android.content.Context) -> getAppLabel
    java.lang.String[] getGPU(javax.microedition.khronos.opengles.GL10) -> getGPU
    java.lang.String getCPU() -> getCPU
    java.lang.String getDeviceId(android.content.Context) -> getDeviceId
    java.lang.String getDeviceIdUmengMD5(android.content.Context) -> getDeviceIdUmengMD5
    java.lang.String getNetworkOperatorName(android.content.Context) -> getNetworkOperatorName
    java.lang.String getDisplayResolution(android.content.Context) -> getDisplayResolution
    java.lang.String[] getNetworkAccessMode(android.content.Context) -> getNetworkAccessMode
    boolean isWiFiAvailable(android.content.Context) -> isWiFiAvailable
    android.location.Location getLocation(android.content.Context) -> getLocation
    boolean isOnline(android.content.Context) -> isOnline
    boolean isSdCardWrittenable() -> isSdCardWrittenable
    int getTimeZone(android.content.Context) -> getTimeZone
    java.lang.String[] getLocaleInfo(android.content.Context) -> getLocaleInfo
    java.util.Locale getLocale(android.content.Context) -> getLocale
    java.lang.String getAppkey(android.content.Context) -> getAppkey
    java.lang.String getMac(android.content.Context) -> getMac
    java.lang.String getResolution(android.content.Context) -> getResolution
    int reflectMetrics(java.lang.Object,java.lang.String) -> reflectMetrics
    java.lang.String getOperator(android.content.Context) -> getOperator
    java.lang.String getTimeString(java.util.Date) -> getTimeString
    java.lang.String getToday() -> getToday
    java.util.Date toTime(java.lang.String) -> toTime
    int getIntervalSeconds(java.util.Date,java.util.Date) -> getIntervalSeconds
    java.lang.String getChannel(android.content.Context) -> getChannel
    java.lang.String getPackageName(android.content.Context) -> getPackageName
    java.lang.String getApplicationLable(android.content.Context) -> getApplicationLable
    boolean isDebug(android.content.Context) -> isDebug
com.umeng.fb.util.Helper -> com.umeng.fb.util.Helper:
    java.lang.String TAG -> TAG
    java.lang.String LINE_SEPARATOR -> LINE_SEPARATOR
    java.lang.String generateFeedbackId(android.content.Context) -> generateFeedbackId
    java.lang.String generateReplyID() -> generateReplyID
    org.json.JSONObject getMessageHeader(android.content.Context) -> getMessageHeader
    java.lang.String MD5(java.lang.String) -> MD5
    java.lang.String getUmengMD5(java.lang.String) -> getUmengMD5
    java.lang.String getFileMD5(java.io.File) -> getFileMD5
    java.lang.String getFileSizeDescription(android.content.Context,long) -> getFileSizeDescription
    java.lang.String getFileSizeDescription(java.lang.String) -> getFileSizeDescription
    void openApp(android.content.Context,java.lang.String) -> openApp
    boolean openUrlSchema(android.content.Context,java.lang.String) -> openUrlSchema
    boolean isEmpty(java.lang.String) -> isEmpty
    boolean isAbsoluteUrl(java.lang.String) -> isAbsoluteUrl
    java.lang.String getDateTime() -> getDateTime
    java.lang.String getTimeString(java.util.Date) -> getTimeString
com.umeng.fb.util.Log -> com.umeng.fb.util.Log:
    boolean LOG -> LOG
    void i(java.lang.String,java.lang.String) -> i
    void i(java.lang.String,java.lang.String,java.lang.Exception) -> i
    void e(java.lang.String,java.lang.String) -> e
    void e(java.lang.String,java.lang.String,java.lang.Exception) -> e
    void d(java.lang.String,java.lang.String) -> d
    void d(java.lang.String,java.lang.String,java.lang.Exception) -> d
    void v(java.lang.String,java.lang.String) -> v
    void v(java.lang.String,java.lang.String,java.lang.Exception) -> v
    void w(java.lang.String,java.lang.String) -> w
    void w(java.lang.String,java.lang.String,java.lang.Exception) -> w
com.umeng.fb.util.Res -> com.umeng.fb.util.Res:
    java.lang.String LOG_TAG -> LOG_TAG
    com.umeng.fb.util.Res instance -> instance
    java.lang.String packageName -> packageName
    java.lang.Class R_id -> R_id
    java.lang.Class R_drawable -> R_drawable
    java.lang.Class R_layout -> R_layout
    java.lang.Class R_anim -> R_anim
    java.lang.Class R_style -> R_style
    java.lang.Class R_string -> R_string
    java.lang.Class R_array -> R_array
    com.umeng.fb.util.Res getInstance(android.content.Context) -> getInstance
    void setPackageName(java.lang.String) -> setPackageName
    int anim(java.lang.String) -> anim
    int id(java.lang.String) -> id
    int drawable(java.lang.String) -> drawable
    int layout(java.lang.String) -> layout
    int style(java.lang.String) -> style
    int string(java.lang.String) -> string
    int array(java.lang.String) -> array
    int getRes(java.lang.Class,java.lang.String) -> getRes
me.imid.swipebacklayout.lib.SwipeBackLayout -> me.imid.swipebacklayout.lib.SwipeBackLayout:
    int[] EDGE_FLAGS -> a
    int mEdgeFlag -> b
    float mScrollThreshold -> c
    android.app.Activity mActivity -> d
    boolean mEnable -> e
    android.view.View mContentView -> f
    me.imid.swipebacklayout.lib.ViewDragHelper mDragHelper -> g
    float mScrollPercent -> h
    int mContentLeft -> i
    int mContentTop -> j
    java.util.List mListeners -> k
    android.graphics.drawable.Drawable mShadowLeft -> l
    android.graphics.drawable.Drawable mShadowRight -> m
    android.graphics.drawable.Drawable mShadowBottom -> n
    float mScrimOpacity -> o
    int mScrimColor -> p
    boolean mInLayout -> q
    android.graphics.Rect mTmpRect -> r
    int mTrackingEdge -> s
    void addSwipeListener(me.imid.swipebacklayout.lib.SwipeBackLayout$SwipeListener) -> a
    void setShadow(int,int) -> a
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onLayout(boolean,int,int,int,int) -> onLayout
    void requestLayout() -> requestLayout
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    void attachToActivity(android.app.Activity) -> a
    void computeScroll() -> computeScroll
    me.imid.swipebacklayout.lib.ViewDragHelper access$0(me.imid.swipebacklayout.lib.SwipeBackLayout) -> a
    int access$1(me.imid.swipebacklayout.lib.SwipeBackLayout) -> b
    void access$2(me.imid.swipebacklayout.lib.SwipeBackLayout,int) -> a
    java.util.List access$3(me.imid.swipebacklayout.lib.SwipeBackLayout) -> c
    int access$4(me.imid.swipebacklayout.lib.SwipeBackLayout) -> d
    android.view.View access$5(me.imid.swipebacklayout.lib.SwipeBackLayout) -> e
    android.graphics.drawable.Drawable access$6(me.imid.swipebacklayout.lib.SwipeBackLayout) -> f
    void access$7(me.imid.swipebacklayout.lib.SwipeBackLayout,float) -> a
    android.graphics.drawable.Drawable access$8(me.imid.swipebacklayout.lib.SwipeBackLayout) -> g
    android.graphics.drawable.Drawable access$9(me.imid.swipebacklayout.lib.SwipeBackLayout) -> h
    void access$10(me.imid.swipebacklayout.lib.SwipeBackLayout,int) -> b
    void access$11(me.imid.swipebacklayout.lib.SwipeBackLayout,int) -> c
    float access$12(me.imid.swipebacklayout.lib.SwipeBackLayout) -> i
    float access$13(me.imid.swipebacklayout.lib.SwipeBackLayout) -> j
    android.app.Activity access$14(me.imid.swipebacklayout.lib.SwipeBackLayout) -> k
me.imid.swipebacklayout.lib.SwipeBackLayout$SwipeListener -> me.imid.swipebacklayout.lib.a:
    void onEdgeTouch$13462e() -> a
me.imid.swipebacklayout.lib.SwipeBackLayout$ViewDragCallback -> me.imid.swipebacklayout.lib.b:
    boolean mIsScrollOverValid -> b
    me.imid.swipebacklayout.lib.SwipeBackLayout this$0 -> a
    boolean tryCaptureView$5359dc96(int) -> a
    int getViewHorizontalDragRange$3c7ec8d0() -> a
    int getViewVerticalDragRange$3c7ec8d0() -> b
    void onViewPositionChanged(android.view.View,int,int,int,int) -> a
    void onViewReleased(android.view.View,float,float) -> a
    int clampViewPositionHorizontal$17e143b0(android.view.View,int) -> a
    int clampViewPositionVertical$17e143b0(android.view.View,int) -> b
    void onViewDragStateChanged(int) -> b
me.imid.swipebacklayout.lib.ViewDragHelper -> me.imid.swipebacklayout.lib.c:
    int mDragState -> a
    int mTouchSlop -> b
    int mActivePointerId -> c
    float[] mInitialMotionX -> d
    float[] mInitialMotionY -> e
    float[] mLastMotionX -> f
    float[] mLastMotionY -> g
    int[] mInitialEdgeTouched -> h
    int[] mEdgeDragsInProgress -> i
    int[] mEdgeDragsLocked -> j
    int mPointersDown -> k
    android.view.VelocityTracker mVelocityTracker -> l
    float mMaxVelocity -> m
    float mMinVelocity -> n
    int mEdgeSize -> o
    int mTrackingEdges -> p
    android.support.v4.widget.ScrollerCompat mScroller -> q
    me.imid.swipebacklayout.lib.ViewDragHelper$Callback mCallback -> r
    android.view.View mCapturedView -> s
    boolean mReleaseInProgress -> t
    android.view.ViewGroup mParentView -> u
    android.view.animation.Interpolator sInterpolator -> v
    java.lang.Runnable mSetIdleRunnable -> w
    me.imid.swipebacklayout.lib.ViewDragHelper create(android.view.ViewGroup,me.imid.swipebacklayout.lib.ViewDragHelper$Callback) -> a
    void setMinVelocity(float) -> a
    void setMaxVelocity(float) -> b
    int getViewDragState() -> a
    void setEdgeTrackingEnabled(int) -> a
    void setEdgeSize(int) -> b
    void cancel() -> c
    boolean settleCapturedViewAt(int,int) -> a
    int computeAxisDuration(int,int,int) -> a
    int clampMag(int,int,int) -> b
    float clampMag(float,float,float) -> a
    boolean continueSettling$138603() -> b
    void dispatchViewReleased(float,float) -> a
    void clearMotionHistory(int) -> d
    void saveInitialMotion(float,float,int) -> a
    void saveLastMotion(android.view.MotionEvent) -> c
    void setDragState(int) -> c
    boolean tryCaptureViewForDrag(android.view.View,int) -> a
    boolean shouldInterceptTouchEvent(android.view.MotionEvent) -> a
    void processTouchEvent(android.view.MotionEvent) -> b
    void reportNewEdgeDrags(float,float,int) -> b
    boolean checkNewEdgeDrag(float,float,int,int) -> a
    boolean checkTouchSlop(android.view.View,float,float) -> a
    boolean isEdgeTouched(int,int) -> b
    void releaseViewForPointerUp() -> d
    android.view.View findTopChildUnder(int,int) -> c
me.imid.swipebacklayout.lib.ViewDragHelper$1 -> me.imid.swipebacklayout.lib.d:
    float getInterpolation(float) -> getInterpolation
me.imid.swipebacklayout.lib.ViewDragHelper$2 -> me.imid.swipebacklayout.lib.e:
    me.imid.swipebacklayout.lib.ViewDragHelper this$0 -> a
    void run() -> run
me.imid.swipebacklayout.lib.ViewDragHelper$Callback -> me.imid.swipebacklayout.lib.f:
    void onViewDragStateChanged(int) -> b
    void onViewPositionChanged(android.view.View,int,int,int,int) -> a
    void onViewReleased(android.view.View,float,float) -> a
    int getViewHorizontalDragRange$3c7ec8d0() -> a
    int getViewVerticalDragRange$3c7ec8d0() -> b
    boolean tryCaptureView$5359dc96(int) -> a
    int clampViewPositionHorizontal$17e143b0(android.view.View,int) -> a
    int clampViewPositionVertical$17e143b0(android.view.View,int) -> b
me.imid.swipebacklayout.lib.app.SwipeBackActivity -> me.imid.swipebacklayout.lib.a.a:
    me.imid.swipebacklayout.lib.app.SwipeBackActivityHelper mHelper -> a
    void onCreate(android.os.Bundle) -> onCreate
    void onPostCreate(android.os.Bundle) -> onPostCreate
    android.view.View findViewById(int) -> findViewById
me.imid.swipebacklayout.lib.app.SwipeBackActivityHelper -> me.imid.swipebacklayout.lib.a.b:
    android.app.Activity mActivity -> a
    me.imid.swipebacklayout.lib.SwipeBackLayout mSwipeBackLayout -> b
    void onActivityCreate() -> a
    void onPostCreate() -> b
    android.view.View findViewById(int) -> a
    android.app.Activity access$0(me.imid.swipebacklayout.lib.app.SwipeBackActivityHelper) -> a
me.imid.swipebacklayout.lib.app.SwipeBackActivityHelper$1 -> me.imid.swipebacklayout.lib.a.c:
    me.imid.swipebacklayout.lib.app.SwipeBackActivityHelper this$0 -> a
    void onEdgeTouch$13462e() -> a
u.aly.a -> a.a.a:
    int a -> a
    int b -> b
    java.lang.String c -> c
    java.util.List d -> d
    u.aly.ar e -> e
    boolean a() -> a
    java.lang.String b() -> b
    boolean c() -> c
    u.aly.ar d() -> d
    java.util.List e() -> e
    void a$61fb9e66() -> f
    java.lang.String f() -> g
    void a(u.aly.as) -> a
u.aly.aa -> a.a.b:
    long a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.util.Map d -> d
u.aly.ab -> a.a.c:
    u.aly.aa a(java.lang.String,java.lang.String,java.util.Map) -> a
    java.lang.String b$4768763c(java.lang.String,java.lang.String) -> a
    void a(u.aly.bf,java.lang.String) -> a
u.aly.ac -> a.a.d:
    u.aly.ac a$8bee177() -> a
    java.lang.String a(java.lang.Throwable) -> a
    void a(u.aly.bf,java.lang.String) -> a
u.aly.ad -> a.a.e:
    void a(u.aly.bf,java.lang.String) -> a
u.aly.ae -> a.a.f:
u.aly.af -> a.a.g:
    void a(u.aly.bf,java.lang.String) -> a
u.aly.ag -> a.a.h:
    u.aly.ag a -> a
    u.aly.ag b -> b
    u.aly.ag c -> c
    u.aly.ag d -> d
    int e -> e
    u.aly.ag[] f -> f
    u.aly.ag[] values() -> values
    u.aly.ag valueOf(java.lang.String) -> valueOf
    int a() -> a
    u.aly.ag a(int) -> a
u.aly.ah -> a.a.i:
    u.aly.dd c -> c
    u.aly.ct d -> d
    java.util.Map e -> e
    long a -> a
    byte g -> f
    java.util.Map b -> b
    boolean e() -> a
    void a$1385ff() -> b
    void a(u.aly.cy) -> a
    void b(u.aly.cy) -> b
    java.lang.String toString() -> toString
    void f() -> c
    u.aly.dd h() -> d
    u.aly.ct i() -> e
u.aly.ah$a -> a.a.j:
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.ah$b -> a.a.k:
    u.aly.dg b() -> a
u.aly.ah$c -> a.a.l:
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.ah$d -> a.a.m:
    u.aly.dg b() -> a
u.aly.ah$e -> a.a.n:
    u.aly.ah$e a -> a
    java.util.Map b -> b
    short c -> c
    java.lang.String d -> d
    u.aly.ah$e[] e -> e
    u.aly.ah$e[] values() -> values
    u.aly.ah$e valueOf(java.lang.String) -> valueOf
    short a() -> a
u.aly.ai -> a.a.o:
    u.aly.dd l -> l
    u.aly.ct m -> m
    u.aly.ct n -> n
    u.aly.ct o -> o
    u.aly.ct p -> p
    u.aly.ct q -> q
    u.aly.ct r -> r
    u.aly.ct s -> s
    u.aly.ct t -> t
    u.aly.ct u -> u
    u.aly.ct v -> v
    java.util.Map w -> w
    java.lang.String a -> a
    java.lang.String b -> b
    int c -> c
    java.lang.String d -> d
    u.aly.bc e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    int j -> j
    byte z -> x
    u.aly.ai$e[] A -> y
    java.util.Map k -> k
    u.aly.ai a(java.lang.String) -> a
    void a$1385ff() -> a
    u.aly.ai b(java.lang.String) -> b
    boolean i() -> b
    void b$1385ff() -> c
    u.aly.ai a(int) -> a
    boolean l() -> d
    void c$1385ff() -> e
    u.aly.ai c(java.lang.String) -> c
    boolean o() -> f
    void d$1385ff() -> g
    u.aly.ai a(u.aly.bc) -> a
    void e$1385ff() -> h
    u.aly.ai d(java.lang.String) -> d
    void f$1385ff() -> i
    u.aly.ai e(java.lang.String) -> e
    void g$1385ff() -> j
    u.aly.ai f(java.lang.String) -> f
    boolean A() -> k
    void h$1385ff() -> l
    u.aly.ai g(java.lang.String) -> g
    boolean D() -> m
    void i$1385ff() -> n
    u.aly.ai c(int) -> b
    boolean G() -> o
    void j$1385ff() -> p
    void a(u.aly.cy) -> a
    void b(u.aly.cy) -> b
    java.lang.String toString() -> toString
    void H() -> q
    u.aly.dd I() -> r
    u.aly.ct J() -> s
    u.aly.ct K() -> t
    u.aly.ct L() -> u
    u.aly.ct M() -> v
    u.aly.ct N() -> w
    u.aly.ct O() -> x
    u.aly.ct P() -> y
    u.aly.ct Q() -> z
    u.aly.ct R() -> A
    u.aly.ct S() -> B
u.aly.ai$a -> a.a.p:
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.ai$b -> a.a.q:
    u.aly.dg b() -> a
u.aly.ai$c -> a.a.r:
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.ai$d -> a.a.s:
    u.aly.dg b() -> a
u.aly.ai$e -> a.a.t:
    u.aly.ai$e a -> a
    u.aly.ai$e b -> b
    u.aly.ai$e c -> c
    u.aly.ai$e d -> d
    u.aly.ai$e e -> e
    u.aly.ai$e f -> f
    u.aly.ai$e g -> g
    u.aly.ai$e h -> h
    u.aly.ai$e i -> i
    u.aly.ai$e j -> j
    java.util.Map k -> k
    short l -> l
    java.lang.String m -> m
    u.aly.ai$e[] n -> n
    u.aly.ai$e[] values() -> values
    u.aly.ai$e valueOf(java.lang.String) -> valueOf
    short a() -> a
u.aly.aj -> a.a.u:
    u.aly.dd e -> e
    u.aly.ct f -> f
    u.aly.ct g -> g
    u.aly.ct h -> h
    java.util.Map i -> i
    int a -> a
    int b -> b
    int c -> c
    byte m -> j
    u.aly.aj$e[] n -> k
    java.util.Map d -> d
    u.aly.aj a(int) -> a
    boolean e() -> a
    void a$1385ff() -> b
    u.aly.aj c(int) -> b
    boolean i() -> c
    void b$1385ff() -> d
    u.aly.aj d(int) -> c
    boolean l() -> e
    void c$1385ff() -> f
    void a(u.aly.cy) -> a
    void b(u.aly.cy) -> b
    java.lang.String toString() -> toString
    void m() -> g
    u.aly.dd n() -> h
    u.aly.ct o() -> i
    u.aly.ct p() -> j
    u.aly.ct q() -> k
u.aly.aj$a -> a.a.v:
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.aj$b -> a.a.w:
    u.aly.dg b() -> a
u.aly.aj$c -> a.a.x:
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.aj$d -> a.a.y:
    u.aly.dg b() -> a
u.aly.aj$e -> a.a.z:
    u.aly.aj$e a -> a
    u.aly.aj$e b -> b
    u.aly.aj$e c -> c
    java.util.Map d -> d
    short e -> e
    java.lang.String f -> f
    u.aly.aj$e[] g -> g
    u.aly.aj$e[] values() -> values
    u.aly.aj$e valueOf(java.lang.String) -> valueOf
    short a() -> a
u.aly.ak -> a.a.aa:
    u.aly.dd s -> s
    u.aly.ct t -> t
    u.aly.ct u -> u
    u.aly.ct v -> v
    u.aly.ct w -> w
    u.aly.ct x -> x
    u.aly.ct y -> y
    u.aly.ct z -> z
    u.aly.ct A -> A
    u.aly.ct B -> B
    u.aly.ct C -> C
    u.aly.ct D -> D
    u.aly.ct E -> E
    u.aly.ct F -> F
    u.aly.ct G -> G
    u.aly.ct H -> H
    u.aly.ct I -> I
    u.aly.ct J -> J
    java.util.Map K -> K
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    u.aly.ba i -> i
    boolean j -> j
    boolean k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    long n -> n
    java.lang.String o -> o
    java.lang.String p -> p
    java.lang.String q -> q
    byte O -> L
    u.aly.ak$e[] P -> M
    java.util.Map r -> r
    u.aly.ak a(java.lang.String) -> a
    boolean e() -> a
    void a$1385ff() -> b
    u.aly.ak b(java.lang.String) -> b
    boolean i() -> c
    void b$1385ff() -> d
    u.aly.ak c(java.lang.String) -> c
    boolean l() -> e
    void c$1385ff() -> f
    boolean o() -> g
    void d$1385ff() -> h
    u.aly.ak e(java.lang.String) -> d
    boolean r() -> i
    void e$1385ff() -> j
    u.aly.ak f(java.lang.String) -> e
    boolean u() -> k
    void f$1385ff() -> l
    u.aly.ak g(java.lang.String) -> f
    boolean x() -> m
    void g$1385ff() -> n
    u.aly.ak h(java.lang.String) -> g
    boolean A() -> o
    void h$1385ff() -> p
    u.aly.ak a(u.aly.ba) -> a
    boolean D() -> q
    void i$1385ff() -> r
    boolean G() -> s
    void k$1385ff() -> t
    boolean J() -> u
    void m$1385ff() -> v
    u.aly.ak i(java.lang.String) -> h
    boolean M() -> w
    void n$1385ff() -> x
    u.aly.ak j(java.lang.String) -> i
    boolean P() -> y
    void o$1385ff() -> z
    u.aly.ak a(long) -> a
    boolean S() -> A
    void p$1385ff() -> B
    u.aly.ak k(java.lang.String) -> j
    boolean V() -> C
    void q$1385ff() -> D
    u.aly.ak l(java.lang.String) -> k
    boolean Y() -> E
    void r$1385ff() -> F
    u.aly.ak m(java.lang.String) -> l
    boolean ab() -> G
    void s$1385ff() -> H
    void a(u.aly.cy) -> a
    void b(u.aly.cy) -> b
    java.lang.String toString() -> toString
    void ac() -> I
    u.aly.dd ad() -> J
    u.aly.ct ae() -> K
    u.aly.ct af() -> L
    u.aly.ct ag() -> M
    u.aly.ct ah() -> N
    u.aly.ct ai() -> O
    u.aly.ct aj() -> P
    u.aly.ct ak() -> Q
    u.aly.ct al() -> R
    u.aly.ct am() -> S
    u.aly.ct an() -> T
    u.aly.ct ao() -> U
    u.aly.ct ap() -> V
    u.aly.ct aq() -> W
    u.aly.ct ar() -> X
    u.aly.ct as() -> Y
    u.aly.ct at() -> Z
    u.aly.ct au() -> aa
u.aly.ak$a -> a.a.ab:
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.ak$b -> a.a.ac:
    u.aly.dg b() -> a
u.aly.ak$c -> a.a.ad:
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.ak$d -> a.a.ae:
    u.aly.dg b() -> a
u.aly.ak$e -> a.a.af:
    u.aly.ak$e a -> a
    u.aly.ak$e b -> b
    u.aly.ak$e c -> c
    u.aly.ak$e d -> d
    u.aly.ak$e e -> e
    u.aly.ak$e f -> f
    u.aly.ak$e g -> g
    u.aly.ak$e h -> h
    u.aly.ak$e i -> i
    u.aly.ak$e j -> j
    u.aly.ak$e k -> k
    u.aly.ak$e l -> l
    u.aly.ak$e m -> m
    u.aly.ak$e n -> n
    u.aly.ak$e o -> o
    u.aly.ak$e p -> p
    u.aly.ak$e q -> q
    java.util.Map r -> r
    short s -> s
    java.lang.String t -> t
    u.aly.ak$e[] u -> u
    u.aly.ak$e[] values() -> values
    u.aly.ak$e valueOf(java.lang.String) -> valueOf
    short a() -> a
u.aly.am -> a.a.ag:
    u.aly.dd e -> e
    u.aly.ct f -> f
    u.aly.ct g -> g
    u.aly.ct h -> h
    java.util.Map i -> i
    long a -> a
    java.lang.String b -> b
    u.aly.an c -> c
    byte k -> j
    u.aly.am$e[] l -> k
    java.util.Map d -> d
    boolean e() -> b
    void b$1385ff() -> c
    void c$1385ff() -> d
    boolean l() -> e
    void d$1385ff() -> f
    void a(u.aly.cy) -> a
    void b(u.aly.cy) -> b
    java.lang.String toString() -> toString
    void m() -> g
    u.aly.dd n() -> h
    u.aly.ct o() -> i
    u.aly.ct p() -> j
    u.aly.ct q() -> k
u.aly.am$a -> a.a.ah:
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.am$b -> a.a.ai:
    u.aly.dg b() -> a
u.aly.am$c -> a.a.aj:
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.am$d -> a.a.ak:
    u.aly.dg b() -> a
u.aly.am$e -> a.a.al:
    u.aly.am$e a -> a
    u.aly.am$e b -> b
    u.aly.am$e c -> c
    java.util.Map d -> d
    short e -> e
    java.lang.String f -> f
    u.aly.am$e[] g -> g
    u.aly.am$e[] values() -> values
    u.aly.am$e valueOf(java.lang.String) -> valueOf
    short a() -> a
u.aly.an -> a.a.am:
    u.aly.an a -> a
    u.aly.an b -> b
    int c -> c
    u.aly.an[] d -> d
    u.aly.an[] values() -> values
    u.aly.an valueOf(java.lang.String) -> valueOf
    int a() -> a
    u.aly.an a(int) -> a
u.aly.ao -> a.a.an:
    u.aly.dd g -> g
    u.aly.ct h -> h
    u.aly.ct i -> i
    u.aly.ct j -> j
    u.aly.ct k -> k
    u.aly.ct l -> l
    java.util.Map m -> m
    java.lang.String a -> a
    java.util.Map b -> b
    long c -> c
    int d -> d
    long e -> e
    byte q -> n
    u.aly.ao$e[] r -> o
    java.util.Map f -> f
    void a$1385ff() -> a
    void b$1385ff() -> b
    boolean m() -> c
    void c$1385ff() -> d
    u.aly.ao a(int) -> a
    boolean p() -> e
    void d$1385ff() -> f
    u.aly.ao b(long) -> a
    boolean s() -> g
    void e$1385ff() -> h
    void a(u.aly.cy) -> a
    void b(u.aly.cy) -> b
    java.lang.String toString() -> toString
    void t() -> i
    u.aly.dd u() -> j
    u.aly.ct v() -> k
    u.aly.ct w() -> l
    u.aly.ct x() -> m
    u.aly.ct y() -> n
    u.aly.ct z() -> o
u.aly.ao$a -> a.a.ao:
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.ao$b -> a.a.ap:
    u.aly.dg b() -> a
u.aly.ao$c -> a.a.aq:
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.ao$d -> a.a.ar:
    u.aly.dg b() -> a
u.aly.ao$e -> a.a.as:
    u.aly.ao$e a -> a
    u.aly.ao$e b -> b
    u.aly.ao$e c -> c
    u.aly.ao$e d -> d
    u.aly.ao$e e -> e
    java.util.Map f -> f
    short g -> g
    java.lang.String h -> h
    u.aly.ao$e[] i -> i
    u.aly.ao$e[] values() -> values
    u.aly.ao$e valueOf(java.lang.String) -> valueOf
    short a() -> a
u.aly.ap -> a.a.at:
    u.aly.ap a -> a
    u.aly.ap b -> b
    u.aly.ap c -> c
    int d -> d
    u.aly.ap[] e -> e
    u.aly.ap[] values() -> values
    u.aly.ap valueOf(java.lang.String) -> valueOf
    int a() -> a
    u.aly.ap a(int) -> a
u.aly.aq -> a.a.au:
    u.aly.dd f -> f
    u.aly.ct g -> g
    u.aly.ct h -> h
    u.aly.ct i -> i
    u.aly.ct j -> j
    java.util.Map k -> k
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    long d -> d
    byte m -> l
    u.aly.aq$e[] n -> m
    java.util.Map e -> e
    u.aly.aq a(java.lang.String) -> a
    void a$1385ff() -> a
    u.aly.aq b(java.lang.String) -> b
    boolean i() -> b
    void b$1385ff() -> c
    u.aly.aq c(java.lang.String) -> c
    void c$1385ff() -> d
    u.aly.aq a(long) -> a
    boolean o() -> e
    void d$1385ff() -> f
    void a(u.aly.cy) -> a
    void b(u.aly.cy) -> b
    java.lang.String toString() -> toString
    void p() -> g
    u.aly.dd q() -> h
    u.aly.ct r() -> i
    u.aly.ct s() -> j
    u.aly.ct t() -> k
    u.aly.ct u() -> l
u.aly.aq$a -> a.a.av:
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.aq$b -> a.a.aw:
    u.aly.dg b() -> a
u.aly.aq$c -> a.a.ax:
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.aq$d -> a.a.ay:
    u.aly.dg b() -> a
u.aly.aq$e -> a.a.az:
    u.aly.aq$e a -> a
    u.aly.aq$e b -> b
    u.aly.aq$e c -> c
    u.aly.aq$e d -> d
    java.util.Map e -> e
    short f -> f
    java.lang.String g -> g
    u.aly.aq$e[] h -> h
    u.aly.aq$e[] values() -> values
    u.aly.aq$e valueOf(java.lang.String) -> valueOf
    short a() -> a
u.aly.ar -> a.a.ba:
    u.aly.dd e -> e
    u.aly.ct f -> f
    u.aly.ct g -> g
    u.aly.ct h -> h
    java.util.Map i -> i
    java.lang.String a -> a
    long b -> b
    int c -> c
    byte l -> j
    java.util.Map d -> d
    java.lang.String c() -> a
    u.aly.ar a(java.lang.String) -> a
    void a$1385ff() -> b
    long f() -> c
    u.aly.ar a(long) -> a
    boolean i() -> d
    void b$1385ff() -> e
    int j() -> f
    u.aly.ar a(int) -> a
    boolean l() -> g
    void c$1385ff() -> h
    void a(u.aly.cy) -> a
    void b(u.aly.cy) -> b
    java.lang.String toString() -> toString
    void m() -> i
    u.aly.dd n() -> j
    u.aly.ct o() -> k
    u.aly.ct p() -> l
    u.aly.ct q() -> m
u.aly.ar$a -> a.a.bb:
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.ar$b -> a.a.bc:
    u.aly.dg b() -> a
u.aly.ar$c -> a.a.bd:
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.ar$d -> a.a.be:
    u.aly.dg b() -> a
u.aly.ar$e -> a.a.bf:
    u.aly.ar$e a -> a
    u.aly.ar$e b -> b
    u.aly.ar$e c -> c
    java.util.Map d -> d
    short e -> e
    java.lang.String f -> f
    u.aly.ar$e[] g -> g
    u.aly.ar$e[] values() -> values
    u.aly.ar$e valueOf(java.lang.String) -> valueOf
    short a() -> a
u.aly.as -> a.a.bg:
    u.aly.dd e -> e
    u.aly.ct f -> f
    u.aly.ct g -> g
    u.aly.ct h -> h
    java.util.Map i -> i
    java.util.Map a -> a
    java.util.List b -> b
    java.lang.String c -> c
    u.aly.as$e[] j -> j
    java.util.Map d -> d
    java.util.Map d() -> a
    u.aly.as a(java.util.Map) -> a
    void a$1385ff() -> b
    java.util.List j() -> c
    u.aly.as a(java.util.List) -> a
    boolean l() -> d
    void b(boolean) -> a
    boolean o() -> e
    void c$1385ff() -> f
    void a(u.aly.cy) -> a
    void b(u.aly.cy) -> b
    java.lang.String toString() -> toString
    void p() -> g
    u.aly.dd q() -> h
    u.aly.ct r() -> i
    u.aly.ct s() -> j
    u.aly.ct t() -> k
u.aly.as$a -> a.a.bh:
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.as$b -> a.a.bi:
    u.aly.dg b() -> a
u.aly.as$c -> a.a.bj:
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.as$d -> a.a.bk:
    u.aly.dg b() -> a
u.aly.as$e -> a.a.bl:
    u.aly.as$e a -> a
    u.aly.as$e b -> b
    u.aly.as$e c -> c
    java.util.Map d -> d
    short e -> e
    java.lang.String f -> f
    u.aly.as$e[] g -> g
    u.aly.as$e[] values() -> values
    u.aly.as$e valueOf(java.lang.String) -> valueOf
    short a() -> a
u.aly.at -> a.a.bm:
    u.aly.dd e -> e
    u.aly.ct f -> f
    u.aly.ct g -> g
    u.aly.ct h -> h
    java.util.Map i -> i
    java.util.Map a -> a
    int b -> b
    java.lang.String c -> c
    byte k -> j
    java.util.Map d -> d
    java.util.Map d() -> a
    void a$1385ff() -> b
    int h() -> c
    u.aly.at a(int) -> a
    boolean j() -> d
    void b$1385ff() -> e
    java.lang.String k() -> f
    u.aly.at a(java.lang.String) -> a
    void c$1385ff() -> g
    void a(u.aly.cy) -> a
    void b(u.aly.cy) -> b
    java.lang.String toString() -> toString
    void n() -> h
    u.aly.dd o() -> i
    u.aly.ct p() -> j
    u.aly.ct q() -> k
    u.aly.ct r() -> l
u.aly.at$a -> a.a.bn:
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.at$b -> a.a.bo:
    u.aly.dg b() -> a
u.aly.at$c -> a.a.bp:
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.at$d -> a.a.bq:
    u.aly.dg b() -> a
u.aly.at$e -> a.a.br:
    u.aly.at$e a -> a
    u.aly.at$e b -> b
    u.aly.at$e c -> c
    java.util.Map d -> d
    short e -> e
    java.lang.String f -> f
    u.aly.at$e[] g -> g
    u.aly.at$e[] values() -> values
    u.aly.at$e valueOf(java.lang.String) -> valueOf
    short a() -> a
u.aly.au -> a.a.bs:
    u.aly.dd e -> e
    u.aly.ct f -> f
    u.aly.ct g -> g
    u.aly.ct h -> h
    java.util.Map i -> i
    java.lang.String a -> a
    long b -> b
    java.lang.String c -> c
    byte k -> j
    u.aly.au$e[] l -> k
    java.util.Map d -> d
    java.lang.String c() -> a
    boolean e() -> b
    void a$1385ff() -> c
    long f() -> d
    boolean i() -> e
    void b$1385ff() -> f
    java.lang.String j() -> g
    void c$1385ff() -> h
    void a(u.aly.cy) -> a
    void b(u.aly.cy) -> b
    java.lang.String toString() -> toString
    void m() -> i
    u.aly.dd n() -> j
    u.aly.ct o() -> k
    u.aly.ct p() -> l
    u.aly.ct q() -> m
u.aly.au$a -> a.a.bt:
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.au$b -> a.a.bu:
    u.aly.dg b() -> a
u.aly.au$c -> a.a.bv:
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.au$d -> a.a.bw:
    u.aly.dg b() -> a
u.aly.au$e -> a.a.bx:
    u.aly.au$e a -> a
    u.aly.au$e b -> b
    u.aly.au$e c -> c
    java.util.Map d -> d
    short e -> e
    java.lang.String f -> f
    u.aly.au$e[] g -> g
    u.aly.au$e[] values() -> values
    u.aly.au$e valueOf(java.lang.String) -> valueOf
    short a() -> a
u.aly.av -> a.a.by:
    u.aly.dd f -> f
    u.aly.ct g -> g
    u.aly.ct h -> h
    u.aly.ct i -> i
    u.aly.ct j -> j
    java.util.Map k -> k
    java.lang.String a -> a
    java.util.List b -> b
    java.util.List c -> c
    java.util.List d -> d
    u.aly.av$e[] l -> l
    java.util.Map e -> e
    java.lang.String c() -> a
    u.aly.av a(java.lang.String) -> a
    void a$1385ff() -> b
    void a(u.aly.am) -> a
    boolean k() -> c
    void b$1385ff() -> d
    void a(u.aly.ao) -> a
    boolean p() -> e
    void c$1385ff() -> f
    void b(u.aly.ao) -> b
    boolean u() -> g
    void d$1385ff() -> h
    void a(u.aly.cy) -> a
    void b(u.aly.cy) -> b
    java.lang.String toString() -> toString
    void v() -> i
    u.aly.dd w() -> j
    u.aly.ct x() -> k
    u.aly.ct y() -> l
    u.aly.ct z() -> m
    u.aly.ct A() -> n
u.aly.av$a -> a.a.bz:
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.av$b -> a.a.ca:
    u.aly.dg b() -> a
u.aly.av$c -> a.a.cb:
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.av$d -> a.a.cc:
    u.aly.dg b() -> a
u.aly.av$e -> a.a.cd:
    u.aly.av$e a -> a
    u.aly.av$e b -> b
    u.aly.av$e c -> c
    u.aly.av$e d -> d
    java.util.Map e -> e
    short f -> f
    java.lang.String g -> g
    u.aly.av$e[] h -> h
    u.aly.av$e[] values() -> values
    u.aly.av$e valueOf(java.lang.String) -> valueOf
    short a() -> a
u.aly.aw -> a.a.ce:
    u.aly.dd e -> e
    u.aly.ct f -> f
    u.aly.ct g -> g
    u.aly.ct h -> h
    java.util.Map i -> i
    double a -> a
    double b -> b
    long c -> c
    byte m -> j
    java.util.Map d -> d
    boolean e() -> a
    void a$1385ff() -> b
    boolean i() -> c
    void b$1385ff() -> d
    boolean l() -> e
    void c$1385ff() -> f
    void a(u.aly.cy) -> a
    void b(u.aly.cy) -> b
    java.lang.String toString() -> toString
    void m() -> g
    u.aly.dd n() -> h
    u.aly.ct o() -> i
    u.aly.ct p() -> j
    u.aly.ct q() -> k
u.aly.aw$a -> a.a.cf:
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.aw$b -> a.a.cg:
    u.aly.dg b() -> a
u.aly.aw$c -> a.a.ch:
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.aw$d -> a.a.ci:
    u.aly.dg b() -> a
u.aly.aw$e -> a.a.cj:
    u.aly.aw$e a -> a
    u.aly.aw$e b -> b
    u.aly.aw$e c -> c
    java.util.Map d -> d
    short e -> e
    java.lang.String f -> f
    u.aly.aw$e[] g -> g
    u.aly.aw$e[] values() -> values
    u.aly.aw$e valueOf(java.lang.String) -> valueOf
    short a() -> a
u.aly.ax -> a.a.ck:
    u.aly.dd m -> m
    u.aly.ct n -> n
    u.aly.ct o -> o
    u.aly.ct p -> p
    u.aly.ct q -> q
    u.aly.ct r -> r
    u.aly.ct s -> s
    u.aly.ct t -> t
    u.aly.ct u -> u
    u.aly.ct v -> v
    u.aly.ct w -> w
    u.aly.ct x -> x
    java.util.Map y -> y
    int a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    double d -> d
    double e -> e
    java.lang.String f -> f
    int g -> g
    java.lang.String h -> h
    u.aly.ag i -> i
    java.lang.String j -> j
    u.aly.bg k -> k
    byte D -> z
    u.aly.ax$e[] E -> A
    java.util.Map l -> l
    u.aly.ax a(int) -> a
    boolean e() -> a
    void a$1385ff() -> b
    u.aly.ax a(java.lang.String) -> a
    boolean i() -> c
    void b$1385ff() -> d
    u.aly.ax b(java.lang.String) -> b
    boolean l() -> e
    void c$1385ff() -> f
    boolean o() -> g
    void d$1385ff() -> h
    boolean r() -> i
    void e$1385ff() -> j
    u.aly.ax c(java.lang.String) -> c
    boolean u() -> k
    void f$1385ff() -> l
    boolean x() -> m
    void g$1385ff() -> n
    boolean A() -> o
    void h$1385ff() -> p
    u.aly.ax a(u.aly.ag) -> a
    boolean D() -> q
    void i$1385ff() -> r
    u.aly.ax e(java.lang.String) -> d
    boolean G() -> s
    void j$1385ff() -> t
    u.aly.ax a(u.aly.bg) -> a
    boolean J() -> u
    void k$1385ff() -> v
    void a(u.aly.cy) -> a
    void b(u.aly.cy) -> b
    java.lang.String toString() -> toString
    void K() -> w
    u.aly.dd L() -> x
    u.aly.ct M() -> y
    u.aly.ct N() -> z
    u.aly.ct O() -> A
    u.aly.ct P() -> B
    u.aly.ct Q() -> C
    u.aly.ct R() -> D
    u.aly.ct S() -> E
    u.aly.ct T() -> F
    u.aly.ct U() -> G
    u.aly.ct V() -> H
    u.aly.ct W() -> I
u.aly.ax$a -> a.a.cl:
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.ax$b -> a.a.cm:
    u.aly.dg b() -> a
u.aly.ax$c -> a.a.cn:
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.ax$d -> a.a.co:
    u.aly.dg b() -> a
u.aly.ax$e -> a.a.cp:
    u.aly.ax$e a -> a
    u.aly.ax$e b -> b
    u.aly.ax$e c -> c
    u.aly.ax$e d -> d
    u.aly.ax$e e -> e
    u.aly.ax$e f -> f
    u.aly.ax$e g -> g
    u.aly.ax$e h -> h
    u.aly.ax$e i -> i
    u.aly.ax$e j -> j
    u.aly.ax$e k -> k
    java.util.Map l -> l
    short m -> m
    java.lang.String n -> n
    u.aly.ax$e[] o -> o
    u.aly.ax$e[] values() -> values
    u.aly.ax$e valueOf(java.lang.String) -> valueOf
    short a() -> a
u.aly.ay -> a.a.cq:
    u.aly.dd d -> d
    u.aly.ct e -> e
    u.aly.ct f -> f
    java.util.Map g -> g
    java.lang.String a -> a
    long b -> b
    byte i -> h
    java.util.Map c -> c
    void a$1385ff() -> a
    boolean i() -> b
    void b$1385ff() -> c
    void a(u.aly.cy) -> a
    void b(u.aly.cy) -> b
    java.lang.String toString() -> toString
    void j() -> d
    u.aly.dd k() -> e
    u.aly.ct l() -> f
    u.aly.ct m() -> g
u.aly.ay$a -> a.a.cr:
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.ay$b -> a.a.cs:
    u.aly.dg b() -> a
u.aly.ay$c -> a.a.ct:
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.ay$d -> a.a.cu:
    u.aly.dg b() -> a
u.aly.ay$e -> a.a.cv:
    u.aly.ay$e a -> a
    u.aly.ay$e b -> b
    java.util.Map c -> c
    short d -> d
    java.lang.String e -> e
    u.aly.ay$e[] f -> f
    u.aly.ay$e[] values() -> values
    u.aly.ay$e valueOf(java.lang.String) -> valueOf
    short a() -> a
u.aly.az -> a.a.cw:
    u.aly.dd d -> d
    u.aly.ct e -> e
    u.aly.ct f -> f
    java.util.Map a -> a
    java.lang.Object a(u.aly.cy,u.aly.ct) -> a
    void c(u.aly.cy) -> c
    java.lang.Object a(u.aly.cy,short) -> a
    void d(u.aly.cy) -> d
    u.aly.dd c() -> a
    void b(java.lang.String) -> a
    void b(long) -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    u.aly.cg b(short) -> a
    u.aly.ct a(u.aly.cg) -> a
u.aly.az$1 -> a.a.cx:
    int[] a -> a
u.aly.az$a -> a.a.cy:
    u.aly.az$a a -> a
    u.aly.az$a b -> b
    java.util.Map c -> c
    short d -> d
    java.lang.String e -> e
    u.aly.az$a[] f -> f
    u.aly.az$a[] values() -> values
    u.aly.az$a valueOf(java.lang.String) -> valueOf
    u.aly.az$a a(int) -> a
    u.aly.az$a b(int) -> b
    short a() -> a
u.aly.b -> a.a.cz:
    android.content.Context b -> a
    java.lang.String f() -> g
u.aly.ba -> a.a.da:
    u.aly.dd d -> d
    u.aly.ct e -> e
    u.aly.ct f -> f
    java.util.Map g -> g
    int a -> a
    int b -> b
    byte j -> h
    java.util.Map c -> c
    boolean e() -> a
    void a$1385ff() -> b
    boolean i() -> c
    void b$1385ff() -> d
    void a(u.aly.cy) -> a
    void b(u.aly.cy) -> b
    java.lang.String toString() -> toString
    void j() -> e
    u.aly.dd k() -> f
    u.aly.ct l() -> g
    u.aly.ct m() -> h
u.aly.ba$a -> a.a.db:
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.ba$b -> a.a.dc:
    u.aly.dg b() -> a
u.aly.ba$c -> a.a.dd:
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.ba$d -> a.a.de:
    u.aly.dg b() -> a
u.aly.ba$e -> a.a.df:
    u.aly.ba$e a -> a
    u.aly.ba$e b -> b
    java.util.Map c -> c
    short d -> d
    java.lang.String e -> e
    u.aly.ba$e[] f -> f
    u.aly.ba$e[] values() -> values
    u.aly.ba$e valueOf(java.lang.String) -> valueOf
    short a() -> a
u.aly.bb -> a.a.dg:
    u.aly.dd e -> e
    u.aly.ct f -> f
    u.aly.ct g -> g
    u.aly.ct h -> h
    java.util.Map i -> i
    int a -> a
    java.lang.String b -> b
    u.aly.at c -> c
    byte k -> j
    u.aly.bb$e[] l -> k
    java.util.Map d -> d
    boolean e() -> a
    void a$1385ff() -> b
    java.lang.String f() -> c
    boolean i() -> d
    void b$1385ff() -> e
    u.aly.at j() -> f
    boolean l() -> g
    void c$1385ff() -> h
    void a(u.aly.cy) -> a
    void b(u.aly.cy) -> b
    java.lang.String toString() -> toString
    void m() -> i
    u.aly.dd n() -> j
    u.aly.ct o() -> k
    u.aly.ct p() -> l
    u.aly.ct q() -> m
u.aly.bb$a -> a.a.dh:
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.bb$b -> a.a.di:
    u.aly.dg b() -> a
u.aly.bb$c -> a.a.dj:
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.bb$d -> a.a.dk:
    u.aly.dg b() -> a
u.aly.bb$e -> a.a.dl:
    u.aly.bb$e a -> a
    u.aly.bb$e b -> b
    u.aly.bb$e c -> c
    java.util.Map d -> d
    short e -> e
    java.lang.String f -> f
    u.aly.bb$e[] g -> g
    u.aly.bb$e[] values() -> values
    u.aly.bb$e valueOf(java.lang.String) -> valueOf
    short a() -> a
u.aly.bc -> a.a.dm:
    u.aly.bc a -> a
    u.aly.bc b -> b
    u.aly.bc c -> c
    u.aly.bc d -> d
    int e -> e
    u.aly.bc[] f -> f
    u.aly.bc[] values() -> values
    u.aly.bc valueOf(java.lang.String) -> valueOf
    int a() -> a
    u.aly.bc a(int) -> a
u.aly.bd -> a.a.dn:
    u.aly.dd i -> i
    u.aly.ct j -> j
    u.aly.ct k -> k
    u.aly.ct l -> l
    u.aly.ct m -> m
    u.aly.ct n -> n
    u.aly.ct o -> o
    u.aly.ct p -> p
    java.util.Map q -> q
    java.lang.String a -> a
    long b -> b
    long c -> c
    long d -> d
    java.util.List e -> e
    java.util.List f -> f
    u.aly.be g -> g
    byte u -> r
    u.aly.bd$e[] v -> s
    java.util.Map h -> h
    u.aly.bd a(java.lang.String) -> a
    void a$1385ff() -> a
    u.aly.bd a(long) -> a
    boolean i() -> b
    void b$1385ff() -> c
    u.aly.bd b(long) -> b
    boolean l() -> d
    void c$1385ff() -> e
    u.aly.bd c(long) -> c
    boolean o() -> f
    void d$1385ff() -> g
    int p() -> h
    u.aly.bd a(java.util.List) -> a
    boolean t() -> i
    void e$1385ff() -> j
    void a(u.aly.aw) -> a
    u.aly.bd b(java.util.List) -> b
    boolean y() -> k
    void f$1385ff() -> l
    u.aly.bd a(u.aly.be) -> a
    boolean B() -> m
    void g$1385ff() -> n
    void a(u.aly.cy) -> a
    void b(u.aly.cy) -> b
    java.lang.String toString() -> toString
    void C() -> o
    u.aly.dd D() -> p
    u.aly.ct E() -> q
    u.aly.ct F() -> r
    u.aly.ct G() -> s
    u.aly.ct H() -> t
    u.aly.ct I() -> u
    u.aly.ct J() -> v
    u.aly.ct K() -> w
u.aly.bd$a -> a.a.do:
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.bd$b -> a.a.dp:
    u.aly.dg b() -> a
u.aly.bd$c -> a.a.dq:
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.bd$d -> a.a.dr:
    u.aly.dg b() -> a
u.aly.bd$e -> a.a.ds:
    u.aly.bd$e a -> a
    u.aly.bd$e b -> b
    u.aly.bd$e c -> c
    u.aly.bd$e d -> d
    u.aly.bd$e e -> e
    u.aly.bd$e f -> f
    u.aly.bd$e g -> g
    java.util.Map h -> h
    short i -> i
    java.lang.String j -> j
    u.aly.bd$e[] k -> k
    u.aly.bd$e[] values() -> values
    u.aly.bd$e valueOf(java.lang.String) -> valueOf
    short a() -> a
u.aly.be -> a.a.dt:
    u.aly.dd d -> d
    u.aly.ct e -> e
    u.aly.ct f -> f
    java.util.Map g -> g
    int a -> a
    int b -> b
    byte j -> h
    java.util.Map c -> c
    u.aly.be a(int) -> a
    boolean e() -> a
    void a$1385ff() -> b
    u.aly.be c(int) -> b
    boolean i() -> c
    void b$1385ff() -> d
    void a(u.aly.cy) -> a
    void b(u.aly.cy) -> b
    java.lang.String toString() -> toString
    void j() -> e
    u.aly.dd k() -> f
    u.aly.ct l() -> g
    u.aly.ct m() -> h
u.aly.be$a -> a.a.du:
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.be$b -> a.a.dv:
    u.aly.dg b() -> a
u.aly.be$c -> a.a.dw:
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.be$d -> a.a.dx:
    u.aly.dg b() -> a
u.aly.be$e -> a.a.dy:
    u.aly.be$e a -> a
    u.aly.be$e b -> b
    java.util.Map c -> c
    short d -> d
    java.lang.String e -> e
    u.aly.be$e[] f -> f
    u.aly.be$e[] values() -> values
    u.aly.be$e valueOf(java.lang.String) -> valueOf
    short a() -> a
u.aly.bf -> a.a.dz:
    u.aly.dd k -> k
    u.aly.ct l -> l
    u.aly.ct m -> m
    u.aly.ct n -> n
    u.aly.ct o -> o
    u.aly.ct p -> p
    u.aly.ct q -> q
    u.aly.ct r -> r
    u.aly.ct s -> s
    u.aly.ct t -> t
    java.util.Map u -> u
    u.aly.aj a -> a
    u.aly.ai b -> b
    u.aly.ak c -> c
    u.aly.ax d -> d
    u.aly.ah e -> e
    java.util.List f -> f
    java.util.List g -> g
    u.aly.at h -> h
    u.aly.as i -> i
    u.aly.bf$e[] v -> v
    java.util.Map j -> j
    u.aly.bf a(u.aly.aj) -> a
    void a$1385ff() -> a
    u.aly.bf a(u.aly.ai) -> a
    void b$1385ff() -> b
    u.aly.bf a(u.aly.ak) -> a
    void c$1385ff() -> c
    u.aly.bf a(u.aly.ax) -> a
    void d$1385ff() -> d
    u.aly.bf a(u.aly.ah) -> a
    boolean r() -> e
    void e$1385ff() -> f
    int s() -> g
    void a(u.aly.av) -> a
    java.util.List u() -> h
    boolean w() -> i
    void f$1385ff() -> j
    void a(u.aly.bd) -> a
    java.util.List z() -> k
    boolean B() -> l
    void g$1385ff() -> m
    u.aly.bf a(u.aly.at) -> a
    boolean E() -> n
    void h$1385ff() -> o
    u.aly.bf a(u.aly.as) -> a
    boolean H() -> p
    void i$1385ff() -> q
    void a(u.aly.cy) -> a
    void b(u.aly.cy) -> b
    java.lang.String toString() -> toString
    void I() -> r
    u.aly.dd J() -> s
    u.aly.ct K() -> t
    u.aly.ct L() -> u
    u.aly.ct M() -> v
    u.aly.ct N() -> w
    u.aly.ct O() -> x
    u.aly.ct P() -> y
    u.aly.ct Q() -> z
    u.aly.ct R() -> A
    u.aly.ct S() -> B
u.aly.bf$a -> a.a.ea:
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.bf$b -> a.a.eb:
    u.aly.dg b() -> a
u.aly.bf$c -> a.a.ec:
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.bf$d -> a.a.ed:
    u.aly.dg b() -> a
u.aly.bf$e -> a.a.ee:
    u.aly.bf$e a -> a
    u.aly.bf$e b -> b
    u.aly.bf$e c -> c
    u.aly.bf$e d -> d
    u.aly.bf$e e -> e
    u.aly.bf$e f -> f
    u.aly.bf$e g -> g
    u.aly.bf$e h -> h
    u.aly.bf$e i -> i
    java.util.Map j -> j
    short k -> k
    java.lang.String l -> l
    u.aly.bf$e[] m -> m
    u.aly.bf$e[] values() -> values
    u.aly.bf$e valueOf(java.lang.String) -> valueOf
    short a() -> a
u.aly.bg -> a.a.ef:
    u.aly.dd f -> f
    u.aly.ct g -> g
    u.aly.ct h -> h
    u.aly.ct i -> i
    u.aly.ct j -> j
    java.util.Map k -> k
    u.aly.ap a -> a
    int b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    byte m -> l
    u.aly.bg$e[] n -> m
    java.util.Map e -> e
    u.aly.bg a(u.aly.ap) -> a
    boolean e() -> a
    void a$1385ff() -> b
    u.aly.bg a(int) -> a
    boolean i() -> c
    void b$1385ff() -> d
    u.aly.bg a(java.lang.String) -> a
    boolean l() -> e
    void c$1385ff() -> f
    u.aly.bg b(java.lang.String) -> b
    boolean o() -> g
    void d$1385ff() -> h
    void a(u.aly.cy) -> a
    void b(u.aly.cy) -> b
    java.lang.String toString() -> toString
    void p() -> i
    u.aly.dd q() -> j
    u.aly.ct r() -> k
    u.aly.ct s() -> l
    u.aly.ct t() -> m
    u.aly.ct u() -> n
u.aly.bg$a -> a.a.eg:
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.bg$b -> a.a.eh:
    u.aly.dg b() -> a
u.aly.bg$c -> a.a.ei:
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.bg$d -> a.a.ej:
    u.aly.dg b() -> a
u.aly.bg$e -> a.a.ek:
    u.aly.bg$e a -> a
    u.aly.bg$e b -> b
    u.aly.bg$e c -> c
    u.aly.bg$e d -> d
    java.util.Map e -> e
    short f -> f
    java.lang.String g -> g
    u.aly.bg$e[] h -> h
    u.aly.bg$e[] values() -> values
    u.aly.bg$e valueOf(java.lang.String) -> valueOf
    short a() -> a
u.aly.bh -> a.a.el:
    u.aly.dd k -> k
    u.aly.ct l -> l
    u.aly.ct m -> m
    u.aly.ct n -> n
    u.aly.ct o -> o
    u.aly.ct p -> p
    u.aly.ct q -> q
    u.aly.ct r -> r
    u.aly.ct s -> s
    u.aly.ct t -> t
    java.util.Map u -> u
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    int d -> d
    int e -> e
    int f -> f
    java.nio.ByteBuffer g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    byte y -> v
    java.util.Map j -> j
    u.aly.bh a(java.lang.String) -> a
    void a$1385ff() -> a
    u.aly.bh b(java.lang.String) -> b
    void b$1385ff() -> b
    u.aly.bh c(java.lang.String) -> c
    void c$1385ff() -> c
    u.aly.bh a(int) -> a
    boolean o() -> d
    void d$1385ff() -> e
    u.aly.bh c(int) -> b
    boolean r() -> f
    void e$1385ff() -> g
    u.aly.bh d(int) -> c
    boolean u() -> h
    void f$1385ff() -> i
    u.aly.bh a(byte[]) -> a
    void g$1385ff() -> j
    u.aly.bh d(java.lang.String) -> d
    void h$1385ff() -> k
    u.aly.bh e(java.lang.String) -> e
    void i$1385ff() -> l
    void a(u.aly.cy) -> a
    void b(u.aly.cy) -> b
    java.lang.String toString() -> toString
    void F() -> m
    u.aly.dd G() -> n
    u.aly.ct H() -> o
    u.aly.ct I() -> p
    u.aly.ct J() -> q
    u.aly.ct K() -> r
    u.aly.ct L() -> s
    u.aly.ct M() -> t
    u.aly.ct N() -> u
    u.aly.ct O() -> v
    u.aly.ct P() -> w
u.aly.bh$a -> a.a.em:
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.bh$b -> a.a.en:
    u.aly.dg b() -> a
u.aly.bh$c -> a.a.eo:
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.bh$d -> a.a.ep:
    u.aly.dg b() -> a
u.aly.bh$e -> a.a.eq:
    u.aly.bh$e a -> a
    u.aly.bh$e b -> b
    u.aly.bh$e c -> c
    u.aly.bh$e d -> d
    u.aly.bh$e e -> e
    u.aly.bh$e f -> f
    u.aly.bh$e g -> g
    u.aly.bh$e h -> h
    u.aly.bh$e i -> i
    java.util.Map j -> j
    short k -> k
    java.lang.String l -> l
    u.aly.bh$e[] m -> m
    u.aly.bh$e[] values() -> values
    u.aly.bh$e valueOf(java.lang.String) -> valueOf
    short a() -> a
u.aly.bi -> a.a.er:
    java.lang.String a -> a
    java.lang.String c(android.content.Context) -> a
    java.lang.String d(android.content.Context) -> b
    boolean a(android.content.Context,java.lang.String) -> a
    java.lang.String[] a(javax.microedition.khronos.opengles.GL10) -> a
    java.lang.String a() -> a
    java.lang.String f(android.content.Context) -> c
    java.lang.String g(android.content.Context) -> d
    java.lang.String[] j(android.content.Context) -> e
    boolean k(android.content.Context) -> f
    boolean l(android.content.Context) -> g
    int m(android.content.Context) -> h
    java.lang.String[] n(android.content.Context) -> i
    java.util.Locale x(android.content.Context) -> r
    java.lang.String o(android.content.Context) -> j
    java.lang.String p(android.content.Context) -> k
    int[] r(android.content.Context) -> l
    int a(java.lang.Object,java.lang.String) -> a
    java.lang.String s(android.content.Context) -> m
    java.lang.String t(android.content.Context) -> n
    java.lang.String u(android.content.Context) -> o
    java.lang.String v(android.content.Context) -> p
    boolean w(android.content.Context) -> q
u.aly.bj -> a.a.es:
    boolean a -> a
    void a(java.lang.String,java.lang.String) -> a
    void a(java.lang.String,java.lang.String,java.lang.Exception) -> a
    void b(java.lang.String,java.lang.String) -> b
    void b(java.lang.String,java.lang.String,java.lang.Exception) -> b
    void c(java.lang.String,java.lang.String) -> c
    void c(java.lang.String,java.lang.String,java.lang.Exception) -> c
    void e(java.lang.String,java.lang.String) -> d
    void e(java.lang.String,java.lang.String,java.lang.Exception) -> d
u.aly.bo -> a.a.et:
    java.lang.String a -> a
    java.util.Map b -> b
    u.aly.bq a(u.aly.bp,java.lang.Class) -> a
    org.json.JSONObject a(java.lang.String,org.json.JSONObject) -> a
    boolean a() -> a
    java.lang.String a(java.io.InputStream) -> a
    org.json.JSONObject a(java.lang.String) -> a
    org.apache.http.params.HttpParams b() -> b
    u.aly.bo a(java.util.Map) -> a
    void b(java.lang.String) -> b
u.aly.bp -> a.a.eu:
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    org.json.JSONObject a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    void a(java.lang.String) -> a
    java.lang.String d() -> d
u.aly.bq -> a.a.ev:
u.aly.bu -> a.a.ew:
    int a -> a
    byte[] a(byte[]) -> a
u.aly.bv -> a.a.ex:
    java.lang.String a -> a
    java.lang.String a(java.lang.String) -> a
    java.lang.String b(java.lang.String) -> b
    boolean d(java.lang.String) -> c
    java.lang.String a(java.io.InputStream) -> a
    byte[] b(java.io.InputStream) -> b
    void a(java.io.File,byte[]) -> a
    void c(java.io.InputStream) -> c
    void a(java.io.OutputStream) -> a
u.aly.bw -> a.a.ey:
    boolean a(byte,int) -> a
u.aly.bx -> a.a.ez:
    short[] a -> a
    int b -> b
    short a() -> a
    void a(short) -> a
    void c() -> b
    java.lang.String toString() -> toString
u.aly.bz -> a.a.fa:
    void a(u.aly.cy) -> a
    void b(u.aly.cy) -> b
u.aly.c -> a.a.fb:
    byte[] a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    byte[] d -> d
    byte[] e -> e
    byte[] f -> f
    int g -> g
    int h -> h
    int i -> i
    byte[] j -> j
    byte[] k -> k
    void a(java.lang.String) -> b
    java.lang.String a() -> b
    u.aly.c a(android.content.Context,java.lang.String,byte[]) -> a
    byte[] a(byte[],int) -> a
    byte[] c() -> a
    java.lang.String toString() -> toString
    byte[] a(byte[]) -> a
    java.lang.String b(byte[]) -> b
    byte[] b(java.lang.String) -> a
u.aly.ca -> a.a.fc:
    java.util.Comparator a -> a
    int a(int,int) -> a
    int a(byte[],byte[]) -> a
    int a(java.lang.Comparable,java.lang.Comparable) -> a
    int a(java.util.List,java.util.List) -> a
    int a(java.util.Set,java.util.Set) -> a
    int a(java.util.Map,java.util.Map) -> a
    void a(java.nio.ByteBuffer,java.lang.StringBuilder) -> a
u.aly.ca$a -> a.a.fd:
    int compare(java.lang.Object,java.lang.Object) -> compare
u.aly.cc -> a.a.fe:
    u.aly.cy a -> a
    u.aly.dl b -> b
    void a(u.aly.bz,byte[]) -> a
u.aly.cf -> a.a.ff:
u.aly.cg -> a.a.fg:
    short a() -> a
u.aly.ci -> a.a.fh:
    java.io.ByteArrayOutputStream a -> a
    u.aly.dk b -> b
    u.aly.cy c -> c
    byte[] a(u.aly.bz) -> a
u.aly.cj -> a.a.fi:
    java.lang.Object b -> b
    u.aly.cg c -> c
    java.util.Map a -> a
    u.aly.cg i() -> b
    java.lang.Object j() -> c
    boolean k() -> d
    void a(u.aly.cy) -> a
    void b(u.aly.cy) -> b
    java.lang.Object a(u.aly.cy,u.aly.ct) -> a
    void c(u.aly.cy) -> c
    java.lang.Object a(u.aly.cy,short) -> a
    void d(u.aly.cy) -> d
    u.aly.dd c() -> a
    u.aly.ct a(u.aly.cg) -> a
    u.aly.cg b(short) -> a
    java.lang.String toString() -> toString
u.aly.cj$a -> a.a.fj:
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.cj$b -> a.a.fk:
    u.aly.dg b() -> a
u.aly.cj$c -> a.a.fl:
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.cj$d -> a.a.fm:
    u.aly.dg b() -> a
u.aly.ck -> a.a.fn:
    java.lang.Class a -> a
u.aly.cl -> a.a.fo:
    java.lang.String a -> a
    byte b -> b
    u.aly.cm c -> c
    java.util.Map d -> d
    void a(java.lang.Class,java.util.Map) -> a
u.aly.cm -> a.a.fp:
    byte b -> b
    boolean a -> a
    java.lang.String c -> c
    boolean d -> d
u.aly.cn -> a.a.fq:
    u.aly.cm a -> a
u.aly.co -> a.a.fr:
    u.aly.cm a -> a
    u.aly.cm c -> c
u.aly.cq -> a.a.fs:
    java.lang.Class a -> a
u.aly.cr -> a.a.ft:
    u.aly.dd h -> f
    boolean c -> a
    boolean d -> b
    int e -> c
    boolean f -> d
    byte[] i -> g
    byte[] j -> h
    byte[] k -> i
    byte[] l -> j
    byte[] m -> k
    byte[] n -> l
    byte[] o -> m
    byte[] p -> n
    void a$35262217() -> a
    void b() -> b
    void a(u.aly.ct) -> a
    void d() -> c
    void a(u.aly.cv) -> a
    void a(u.aly.cu) -> a
    void a(boolean) -> a
    void a(byte) -> a
    void a(short) -> a
    void a(int) -> a
    void a(long) -> a
    void a(double) -> a
    void a(java.lang.String) -> a
    void a(java.nio.ByteBuffer) -> a
    u.aly.dd j() -> d
    void k() -> e
    u.aly.ct l() -> f
    u.aly.cv n() -> g
    u.aly.cu p() -> h
    u.aly.dc r() -> i
    boolean t() -> j
    byte u() -> k
    short v() -> l
    int w() -> m
    long x() -> n
    double y() -> o
    java.lang.String z() -> p
    java.lang.String b(int) -> c
    java.nio.ByteBuffer A() -> q
    int a$1cf967b1(byte[],int) -> a
    void c(int) -> b
    void d(int) -> d
u.aly.cr$a -> a.a.fu:
    boolean a -> a
    boolean b -> b
    int c -> c
    u.aly.cy a(u.aly.dm) -> a
u.aly.cs -> a.a.fv:
    u.aly.dd d -> d
    u.aly.ct e -> f
    byte[] f -> g
    u.aly.bx m -> h
    short n -> i
    u.aly.ct o -> j
    java.lang.Boolean p -> k
    long q -> l
    byte[] a -> a
    byte[] b -> b
    byte[] r -> m
    byte[] c -> c
    void B() -> r
    void a$35262217() -> a
    void b() -> b
    void a(u.aly.ct) -> a
    void a(u.aly.ct,byte) -> a
    void d() -> c
    void a(u.aly.cv) -> a
    void a(u.aly.cu) -> a
    void a(boolean) -> a
    void a(byte) -> a
    void a(short) -> a
    void a(int) -> a
    void a(long) -> a
    void a(double) -> a
    void a(java.lang.String) -> a
    void a(java.nio.ByteBuffer) -> a
    void a(byte[],int,int) -> a
    void b(int) -> b
    int c(int) -> c
    void b(byte) -> b
    u.aly.dd j() -> d
    void k() -> e
    u.aly.ct l() -> f
    u.aly.cv n() -> g
    u.aly.cu p() -> h
    u.aly.dc r() -> i
    boolean t() -> j
    byte u() -> k
    short v() -> l
    int w() -> m
    long x() -> n
    double y() -> o
    java.lang.String z() -> p
    java.nio.ByteBuffer A() -> q
    void f(int) -> d
    int E() -> t
    int g(int) -> e
    byte d(byte) -> c
u.aly.cs$a -> a.a.fw:
    long a -> a
    u.aly.cy a(u.aly.dm) -> a
u.aly.ct -> a.a.fx:
    java.lang.String a -> a
    byte b -> b
    short c -> c
    java.lang.String toString() -> toString
u.aly.cu -> a.a.fy:
    byte a -> a
    int b -> b
u.aly.cv -> a.a.fz:
    byte a -> a
    byte b -> b
    int c -> c
u.aly.cy -> a.a.ga:
    u.aly.dm g -> e
    void a$35262217() -> a
    void b() -> b
    void a(u.aly.ct) -> a
    void d() -> c
    void a(u.aly.cv) -> a
    void a(u.aly.cu) -> a
    void a(boolean) -> a
    void a(short) -> a
    void a(int) -> a
    void a(long) -> a
    void a(double) -> a
    void a(java.lang.String) -> a
    void a(java.nio.ByteBuffer) -> a
    u.aly.dd j() -> d
    void k() -> e
    u.aly.ct l() -> f
    u.aly.cv n() -> g
    u.aly.cu p() -> h
    u.aly.dc r() -> i
    boolean t() -> j
    byte u() -> k
    short v() -> l
    int w() -> m
    long x() -> n
    double y() -> o
    java.lang.String z() -> p
    java.nio.ByteBuffer A() -> q
    void B() -> r
    java.lang.Class D() -> s
u.aly.cz -> a.a.gb:
    int g -> a
u.aly.d -> a.a.gc:
    java.lang.String a -> a
    java.io.File b -> b
    u.aly.as c -> c
    long d -> d
    long e -> e
    java.util.Set f -> f
    void a(u.aly.a) -> a
    void a() -> a
    u.aly.as b() -> b
    void g() -> e
    void d() -> c
    void e() -> d
    void f() -> f
    u.aly.as h() -> g
u.aly.da -> a.a.gd:
    u.aly.cy a(u.aly.dm) -> a
u.aly.db -> a.a.ge:
    int a -> a
    void a(u.aly.cy,byte) -> a
    void a(u.aly.cy,byte,int) -> a
u.aly.dc -> a.a.gf:
    byte a -> a
    int b -> b
u.aly.dd -> a.a.gg:
    java.lang.String a -> a
u.aly.de -> a.a.gh:
    java.lang.Class D() -> s
    void a(java.util.BitSet,int) -> a
    java.util.BitSet b(int) -> b
u.aly.dg -> a.a.gi:
    void b(u.aly.cy,u.aly.bz) -> b
    void a(u.aly.cy,u.aly.bz) -> a
u.aly.dh -> a.a.gj:
    u.aly.dg b() -> a
u.aly.di -> a.a.gk:
u.aly.dj -> a.a.gl:
u.aly.dk -> a.a.gm:
    java.io.InputStream a -> a
    java.io.OutputStream b -> b
    int a(byte[],int,int) -> a
    void b(byte[],int,int) -> b
u.aly.dl -> a.a.gn:
    byte[] a -> a
    int b -> b
    int c -> c
    void c$1cf967a4(byte[],int) -> a
    void e() -> a
    int a(byte[],int,int) -> a
    void b(byte[],int,int) -> b
    byte[] f() -> b
    int g() -> c
    int h() -> d
    void a(int) -> a
u.aly.dm -> a.a.go:
    int a(byte[],int,int) -> a
    int d$1cf967b1(byte[],int) -> b
    void b(byte[]) -> a
    void b(byte[],int,int) -> b
    byte[] f() -> b
    int g() -> c
    int h() -> d
    void a(int) -> a
u.aly.dn -> a.a.gp:
    int f -> a
u.aly.e -> a.a.gq:
    android.content.Context b -> a
    java.lang.String f() -> g
u.aly.f -> a.a.gr:
    byte[] b -> a
    u.aly.at c -> b
    android.content.Context d -> c
    java.lang.String a(u.aly.at) -> b
    void b(u.aly.at) -> a
    u.aly.at a() -> a
    void b() -> b
    void c() -> c
u.aly.g -> a.a.gs:
    android.content.Context b -> a
    java.lang.String f() -> g
u.aly.h -> a.a.gt:
    u.aly.d a -> a
    u.aly.f b -> b
    u.aly.d a(android.content.Context) -> a
    u.aly.f b(android.content.Context) -> b
u.aly.i -> a.a.gu:
    java.util.regex.Pattern c -> a
    android.content.Context d -> b
    java.lang.String f() -> g
    java.lang.String g() -> h
    java.io.File h() -> i
u.aly.j -> a.a.gv:
    u.aly.q a -> a
    u.aly.r b -> b
    com.umeng.analytics.ReportPolicy$e c -> c
    com.umeng.analytics.f d -> d
    u.aly.w e -> e
    u.aly.d f -> f
    int g -> g
    android.content.Context h -> h
    void a() -> a
    void a(u.aly.p) -> a
    void b(u.aly.p) -> b
    void b() -> b
    byte[] c() -> c
    u.aly.bf a(byte[]) -> a
    byte[] a(u.aly.bf) -> a
    void e() -> d
    void a(int,int) -> a
    void a(int,long) -> a
u.aly.k -> a.a.gw:
    u.aly.o a -> a
    android.content.Context b -> b
    u.aly.k c -> c
    u.aly.k a(android.content.Context) -> a
    void a(com.umeng.analytics.onlineconfig.a) -> a
    void a(u.aly.p) -> a
    void b(u.aly.p) -> b
    void a() -> a
    void b() -> b
    u.aly.o a(u.aly.k) -> a
u.aly.k$1 -> a.a.gx:
    u.aly.p a -> a
    u.aly.k b -> b
    void a() -> a
u.aly.k$2 -> a.a.gy:
    u.aly.k a -> a
    void a() -> a
u.aly.k$3 -> a.a.gz:
    u.aly.k a -> a
    void a() -> a
u.aly.l -> a.a.ha:
    java.lang.String a -> a
    boolean b -> b
    android.content.SharedPreferences c -> c
    java.util.Map d -> d
    void a(boolean) -> a
    void a(java.lang.String,u.aly.aa) -> a
    u.aly.aa b(java.lang.String) -> a
    void c(java.lang.String) -> b
    boolean d(java.lang.String) -> c
u.aly.m -> a.a.hb:
    java.lang.Thread$UncaughtExceptionHandler a -> a
    u.aly.t b -> b
    void a(u.aly.t) -> a
    void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
u.aly.n -> a.a.hc:
    int a -> a
    int b -> b
    u.aly.l c -> c
    android.content.Context d -> d
    u.aly.k e -> e
    void a(java.lang.String,java.util.Map,long) -> a
    void a(java.lang.String,java.lang.String,long,int) -> a
    void a(java.lang.String,java.util.Map) -> a
    void a(java.lang.String,java.lang.String) -> a
    void b(java.lang.String,java.lang.String) -> b
    void a(java.lang.String,java.util.Map,java.lang.String) -> a
    void c(java.lang.String,java.lang.String) -> c
    boolean a(java.lang.String) -> a
    boolean b(java.lang.String) -> b
    boolean a(java.util.Map) -> a
u.aly.o -> a.a.hd:
    void b(u.aly.p) -> b
    void a(u.aly.p) -> a
    void b() -> b
    void a() -> a
u.aly.p -> a.a.he:
    void a(u.aly.bf,java.lang.String) -> a
u.aly.q -> a.a.hf:
    java.util.List a -> a
    u.aly.ah b -> b
    u.aly.ai c -> c
    u.aly.ak d -> d
    u.aly.ax e -> e
    android.content.Context f -> f
    int b() -> a
    void a(u.aly.p) -> a
    void a(u.aly.bf) -> a
    void a(u.aly.ah) -> a
    u.aly.ai c() -> b
    u.aly.ak d() -> c
    u.aly.ax e() -> d
    u.aly.at f() -> e
    u.aly.as g() -> f
    u.aly.aj h() -> g
u.aly.r -> a.a.hg:
    int d -> a
    java.lang.String e -> b
    java.lang.String f -> c
    int g -> d
    android.content.Context h -> e
    u.aly.w i -> f
    u.aly.f j -> g
    void a(u.aly.w) -> a
    int a(byte[]) -> a
    boolean a() -> a
    byte[] a(byte[],java.lang.String) -> a
    java.lang.String a(android.content.Context) -> a
    int b(byte[]) -> b
u.aly.s -> a.a.hh:
    java.lang.String a(java.io.Serializable) -> a
    java.lang.Object a(java.lang.String) -> a
    java.lang.String a(byte[]) -> a
    byte[] b(java.lang.String) -> b
u.aly.t -> a.a.hi:
    void a(java.lang.Throwable) -> a
u.aly.v -> a.a.hj:
    java.lang.String d -> a
    java.lang.String e -> b
u.aly.w -> a.a.hk:
    int d -> d
    int a -> a
    int b -> b
    int e -> e
    long c -> c
    long f -> f
    long g -> g
    android.content.Context m -> h
    boolean b() -> a
    void c() -> b
    void e() -> c
    void f() -> d
    void g() -> e
    void h() -> f
    boolean i() -> g
    long j() -> h
u.aly.x -> a.a.hl:
    java.lang.String a -> a
    long b -> b
u.aly.y -> a.a.hm:
    u.aly.be a(android.content.Context) -> a
u.aly.z -> a.a.hn:
    java.util.Map b -> a
    java.util.ArrayList c -> b
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void a() -> a
    void a(android.content.Context) -> a
    java.util.List a(android.content.SharedPreferences) -> a
